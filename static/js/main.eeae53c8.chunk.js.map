{"version":3,"sources":["Images/logo.png","Actions/ActionTypes.js","Reducers/VendorReducer.js","Reducers/AdminReducer.js","Store/Store.js","Components/HomeNavbar/HomeNavbar.js","Components/Footer/Footer.js","Components/FooterAndButtons/FooterAndButtons.js","Pages/Home/Home.js","Pages/TermsAndConditions/TermsAndConditions.js","Pages/PrivacyPolicy/PrivacyPolicy.js","Pages/Contact/Contact.js","Config/index.js","Firebase/Firebase.js","Config/localStorage.js","Config/AdminMapping.js","Pages/Admin/Login/Login.js","Components/Sidebar/Header.js","Pages/Admin/Dashboard/Dashboard.js","Components/AdminNavbar/AdminNavbar.js","Pages/Admin/Vendor/Vendor.js","Pages/Admin/Complaints/Complaints.js","Pages/Admin/Reservations/Reservations.js","Pages/Admin/Customer/Customer.js","Pages/Admin/DiscountVouchers/DiscountVouchers.js","Pages/Admin/Slideshow/Slideshow.js","Config/VendorMapping.js","Pages/Vendor/Login/Login.js","Components/VendorSidebar/VendorSidebar.js","Config/Date.js","Pages/Vendor/Home/Home.js","Pages/Vendor/UpcomingReservations/UpcomingReservations.js","Pages/Vendor/PreviousReservations/PreviousReservations.js","Pages/Admin/VendorVerifications/VendorVerifications.js","Pages/Vendor/Reviews/Reviews.js","Pages/Vendor/Menu/Menu.js","Pages/Vendor/EditProfile/EditProfile.js","Pages/Vendor/Registration/Registration.js","Pages/Vendor/AccountUnverified/AccountUnverified.js","Navigation/VendorRouter.js","Navigation/Router.js","App.js","serviceWorker.js","index.js","Images/logo.mp4"],"names":["module","exports","AdminActionTypes","VendorActionTypes","initialState","vendor","reservations","reviews","customers","categories","dishes","notifications","VendorReducer","state","type","payload","loggedInAdmin","vendors","complaints","vouchers","slideshows","AdminReducer","store","createStore","combineReducers","HomeNavbar","className","to","style","width","src","Logo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Footer","FooterAndButtons","href","Home","autoPlay","controls","muted","TermsAndConditions","PrivacyPolicy","Contact","email","subject","message","changeState","name","value","setState","sendMail","a","async","trim","templateParams","from_name","to_name","reply_to","message_html","emailjs","templateParams2","alert","props","history","push","for","onChange","e","target","placeholder","aria-describedby","rows","onClick","this","withRouter","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firebase","registerVendorEmail","password","auth","createUserWithEmailAndPassword","user","uploadVendorImage","image","extension","uid","storageRef","storage","ref","child","put","uploadedFile","getDownloadURL","getAdmin","database","once","response","val","getVendor","uploadSlideShowImage","file","console","log","imageRef","Firebase","login","signInWithEmailAndPassword","admin","getReservations","Object","keys","map","key","getRestaurants","restaurants","getDishes","getReviews","ratings","getAllReviews","forEach","data","k","getComplaints","getCustomers","getNotifications","addDiscountVoucher","code","expDate","maxUses","vendor_type","percentage","set","numberOfUses","isBlocked","getDiscountVouchers","discounts","listenToNotifications","callBack","on","listenToVendors","listenToReviews","listenToComplaints","listenToDiscountVouchers","listenToReservations","listenToDishes","listenToCustomers","deleteVendor","remove","restrictOrder","update","is_restrict_order","updateProcessingFee","processing_fee","updateProcessingFeeAndVerify","is_number_verified","is_verified","updateDiscountVoucher","addSlideShow","vendor_uid","image_url","listenToSlideShows","getSlideShows","deleteSlideshow","deleteDiscount","loginVendor","createVendor","address","accountNumber","account_name","bank_name","branch","category","lat","llong","number","photo","photo_extension","reservation_fee","photo_url","bank_details","llocation","is_email_verified","close","getCategories","responseValue","getReservationsVendor","filteredReservations","filter","restaurant_uid","getNotificationsVendor","getDishesVendor","filteredDishes","vendorListenToCategories","cb","vendorListenToDishes","vendorListenToNotifications","vendorListenToReservations","updateNotificationSeen","notification_key","isSeen","updateReservationClose","updateAvailable","instant_data","available","Number","updateVendor","updateVendorImage","imageNameSplit","split","length","setAdmin","localStorage","setItem","JSON","stringify","parse","getItem","removeAdmin","removeItem","setVendor","mapStateToProps","mapDispatchToProps","dispatch","updateLogin","updateComplaints","updateDiscountVouchers","updateNotifications","updateReservations","updateReviews","updateCustomers","updateVendors","updateSlideshows","Login","isLoggingIn","inValidLogin","window","location","reload","objectFit","height","htmlFor","Spinner","animation","variant","connect","Header","logout","Dropdown","Item","class","margin","Toggle","Badge","pill","Menu","children","Dashboard","modalShow","selectedVendor","procFee","date","Date","clickHandler","element","toLowerCase","includes","escapeRooms","cafes","events","Container","Row","Col","xs","Card","Body","Form","paddingTop","paddingBottom","Group","as","controlId","Control","Tabs","defaultActiveKey","Tab","eventKey","title","Table","striped","hover","responsive","borderRadius","AdminNavbar","Navbar","bg","expand","Brand","Collapse","Nav","Link","Button","Vendor","is_email_verfied","newProFee","checkDate","weekStart","setDate","getDate","weekEnd","componentDidMount","find","match","params","reviewsCustomerAndVendorJoin","customer","c","customer_uid","restaurant","array","fill","rating","deleteHandler","reservationsToRender","badgeVariant","status","time","attandee","Math","floor","complaintsToRender","Media","alt","redirectToVendor","description","currentReservations","totalTables","r","md","Check","checked","label","star","comment","Modal","size","aria-labelledby","centered","show","onHide","closeButton","Title","InputGroup","Prepend","Text","FormControl","Complaints","Reservations","minDate","maxDate","vendorType","redirectToCustomer","condition","Label","Customer","reservation","reviewsToRender","review","complaint","DiscountVouchers","selected_uid","isAdding","showModal","add","handler","dateHandler","splitDate","block","splitExpDate","Slideshow","fileNameSplit","fileHandler","files","delete","v","Carousel","Caption","background","padding","accept","vendorMapStateToProps","vendorMapDispatchToProps","updateCategories","updateDishes","inputHandler","fluid","minHeight","display","alignItems","justifyContent","marginBottom","textAlign","marginTop","VendorSidebar","link","border","position","top","left","color","fontWeight","getMonth","month","updateRestrictOrder","updateClose","availableChangeHandler","reservationsForToday","getFullYear","submitAvailableChanges","todayReservations","tommorrowReservations","tommorrow2Reservations","tommorrow3Reservations","tommorrow4Reservations","tommorrow5Reservations","ajKiDate","colSpan","Append","strokeDasharray","dataKey","UpcomingReservations","yesterday","arr","Accordion","index","reserve","PreviousReservations","VendorVerifications","unverified","Reviews","draggable","EditProfile","phone","reservationFee","long","bankName","accountName","imageUploading","vendorUpdating","updateImage","submit","disabled","selected","Registration","confirmPassword","fileInputHandler","register","backgroundColor","URL","createObjectURL","AccountUnverified","VendorRouter","loading","vendorInitial","snapshot","updatedValue","newDishes","foundIndex","findIndex","dish_key","newCategories","category_key","newNotifications","newReservations","reservation_key","loop","exact","path","Router","newVendors","newComplaints","complaint_key","newCustomers","newVouchers","newReviews","newSlideshows","basename","App","Store","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eeae53c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4361f2b5.png\";","const AdminActionTypes = {\r\n  ADMIN_UPDATE_LOGIN_STATUS: \"ADMIN_UPDATE_LOGIN_STATUS\",\r\n  UPDATE_NOTIFICATIONS: \"UPDATE_NOTIFICATIONS\",\r\n  UPDATE_VENDORS: \"UPDATE_VENDORS\",\r\n  UPDATE_RESERVATIONS: \"UPDATE_RESERVATIONS\",\r\n  UPDATE_COMPLAINTS: \"UPDATE_COMPLAINTS\",\r\n  UPDATE_DISCOUNT_VOUCHERS: \"UPDATE_DISCOUNT_VOUCHERS\",\r\n  UPDATE_REVIEWS: \"UPDATE_REVIEWS\",\r\n  UPDATE_CUSTOMERS: \"UPDATE_CUSTOMERS\",\r\n  UPDATE_SLIDESHOW: \"UPDATE_SLIDESHOW\"\r\n};\r\nconst VendorActionTypes = {\r\n  VENDOR_UPDATE_LOGIN_STATUS: \"VENDOR_UPDATE_LOGIN_STATUS\",\r\n  UPDATE_NOTIFICATIONS: \"UPDATE_NOTIFICATIONS\",\r\n  UPDATE_CUSTOMERS: \"UPDATE_CUSTOMERS\",\r\n  UPDATE_RESERVATIONS: \"UPDATE_RESERVATIONS\",\r\n  UPDATE_REVIEWS: \"UPDATE_REVIEWS\",\r\n  UPDATE_DISHES: \"UPDATE_DISHES\",\r\n  UPDATE_CATEGORIES: \"UPDATE_CATEGORIES\"\r\n};\r\nexport { AdminActionTypes, VendorActionTypes };\r\n","import { VendorActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  vendor: null,\r\n  reservations: [],\r\n  reviews: [],\r\n  customers: [],\r\n  categories: [],\r\n  dishes: [],\r\n  notifications: []\r\n};\r\n\r\nconst VendorReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case VendorActionTypes.UPDATE_CATEGORIES: {\r\n      return { ...state, categories: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_CUSTOMERS: {\r\n      return { ...state, customers: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_DISHES: {\r\n      return { ...state, dishes: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_NOTIFICATIONS: {\r\n      return { ...state, notifications: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_RESERVATIONS: {\r\n      return { ...state, reservations: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_REVIEWS: {\r\n      return { ...state, reviews: payload };\r\n    }\r\n    case VendorActionTypes.VENDOR_UPDATE_LOGIN_STATUS: {\r\n      return { ...state, vendor: payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default VendorReducer;\r\n","import { AdminActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  loggedInAdmin: null,\r\n  reservations: [],\r\n  vendors: [],\r\n  notifications: [],\r\n  complaints: [],\r\n  vouchers: [],\r\n  reviews: [],\r\n  customers: [],\r\n  slideshows: []\r\n};\r\nconst AdminReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case AdminActionTypes.ADMIN_UPDATE_LOGIN_STATUS:\r\n      return { ...state, loggedInAdmin: payload };\r\n\r\n    case AdminActionTypes.UPDATE_COMPLAINTS:\r\n      return { ...state, complaints: payload };\r\n\r\n    case AdminActionTypes.UPDATE_DISCOUNT_VOUCHERS:\r\n      return { ...state, vouchers: payload };\r\n\r\n    case AdminActionTypes.UPDATE_NOTIFICATIONS:\r\n      return { ...state, notifications: payload };\r\n\r\n    case AdminActionTypes.UPDATE_RESERVATIONS:\r\n      return { ...state, reservations: payload };\r\n\r\n    case AdminActionTypes.UPDATE_REVIEWS:\r\n      return { ...state, reviews: payload };\r\n\r\n    case AdminActionTypes.UPDATE_VENDORS:\r\n      return { ...state, vendors: payload };\r\n\r\n    case AdminActionTypes.UPDATE_CUSTOMERS:\r\n      return { ...state, customers: payload };\r\n    case AdminActionTypes.UPDATE_SLIDESHOW:\r\n      return { ...state, slideshows: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AdminReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport VendorReducer from \"../Reducers/VendorReducer\";\r\nimport AdminReducer from \"../Reducers/AdminReducer\";\r\n\r\nconst store = createStore(combineReducers({ VendorReducer, AdminReducer }));\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport \"./HomeNavbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class HomeNavbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"home-navbar navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img\r\n            style={{\r\n              width: \"100px\"\r\n            }}\r\n            src={Logo}\r\n          ></img>\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\"></ul>\r\n          <div className=\"login-buttons my-2 my-lg-0\">\r\n            <Link\r\n              to=\"/vendor/\"\r\n              className=\"btn text-light btn-primary my-2 my-sm-0\"\r\n            >\r\n              Vendor Login\r\n            </Link>\r\n            <Link\r\n              to=\"/admin/\"\r\n              className=\"btn text-light btn-primary mx-2 my-2 my-sm-0\"\r\n            >\r\n              Admin Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"row footer\">\r\n        <p className=\"col-12 col-md-2 order-md-first order-last\">\r\n          &copy;Reserve 2020\r\n        </p>\r\n        <div className=\"offset-md-4 col-12 col-md-6 offet-4 row\">\r\n          <Link className=\" col-12 col-md-4 text-md-right\" to=\"/contact\">\r\n            Contact\r\n          </Link>\r\n          <Link className=\" col-12 col-md-4\" to=\"/terms\">\r\n            Terms & Conditions\r\n          </Link>\r\n          <Link className=\" col-12 col-md-4\" to=\"/privacy\">\r\n            Privacy Policy\r\n          </Link>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nexport default class FooterAndButtons extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className=\"flex social-btns\">\r\n            <a className=\"app-btn blu flex vert\" href=\"https://www.apple.com\">\r\n              <i className=\"fab fa-apple\"></i>\r\n              <p className=\"text\">\r\n                Available on the <br />{\" \"}\r\n                <span className=\"big-txt\">App Store</span>\r\n              </p>\r\n            </a>\r\n\r\n            <a className=\"app-btn blu flex vert\" href=\"https://www.google.com\">\r\n              <i className=\"fab fa-google-play\"></i>\r\n              <p className=\"text\">\r\n                Get it on <br /> <span className=\"big-txt\">Google Play</span>\r\n              </p>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"container-fluid\">\r\n          <Footer></Footer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Logo from \"../../Images/logo.mp4\";\r\nimport \"./Home.css\";\r\nimport FooterAndButtons from \"../../Components/FooterAndButtons/FooterAndButtons\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <video\r\n              autoPlay={true}\r\n              controls={false}\r\n              muted\r\n              className=\"logo\"\r\n              src={Logo}\r\n            ></video>\r\n          </div>\r\n        </div>\r\n        <FooterAndButtons></FooterAndButtons>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./TermsAndConditions.css\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nexport default class TermsAndConditions extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./PrivacyPolicy.css\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nexport default class PrivacyPolicy extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport \"./Contact.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nclass Contact extends Component {\r\n  state = {\r\n    email: \"\",\r\n    subject: \"Complaint\",\r\n    message: \"\"\r\n  };\r\n  changeState = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  sendMail = async () => {\r\n    if (\r\n      this.state.email.trim() !== \"\" &&\r\n      this.state.subject.trim() !== \"\" &&\r\n      this.state.message.trim() !== \"\"\r\n    ) {\r\n      let templateParams = {\r\n        from_name: this.state.email.trim(),\r\n        to_name: \"ibrahimnabi80@gmail.com\",\r\n        reply_to: this.state.email.trim(),\r\n        subject: this.state.subject,\r\n        message_html: this.state.message\r\n      };\r\n      emailjs.send(\r\n        \"reserve_contact\",\r\n        \"template_KiH1F4zS\",\r\n        templateParams,\r\n        \"user_aVbbjsfKbS0Qub1NMA29M\"\r\n      );\r\n      let templateParams2 = {\r\n        from_name: \"ibrahimnabi80@gmail.com\",\r\n        to_name: this.state.email.trim(),\r\n        subject: \"Response\",\r\n        message_html:\r\n          \"We received your message and we will reply soon. Your inquiry id is 001\"\r\n      };\r\n      emailjs.send(\r\n        \"reserve_contact\",\r\n        \"template_KiH1F4zS\",\r\n        templateParams2,\r\n        \"user_aVbbjsfKbS0Qub1NMA29M\"\r\n      );\r\n      alert(\"We received your message and we will reply soon\");\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      alert(\"Please fill all field before submitting.\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <div className=\"container\">\r\n          <form className=\" contact-form\">\r\n            <legend>Contact Form</legend>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleFormControlSelect1\">Select Subject</label>\r\n              <select\r\n                onChange={e => this.changeState(\"subject\", e.target.value)}\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlSelect1\"\r\n              >\r\n                <option value=\"Complaint\">Complaint</option>\r\n                <option value=\"Inquiry\">Inquiry</option>\r\n                <option value=\"Feedback\">Feedback</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Enter Your Email Address</label>\r\n              <input\r\n                onChange={e => this.changeState(\"email\", e.target.value)}\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                placeholder=\"Email Address\"\r\n                aria-describedby=\"emailHelp\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleFormControlTextarea1\">\r\n                Enter Your Message\r\n              </label>\r\n              <textarea\r\n                onChange={e => this.changeState(\"message\", e.target.value)}\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlTextarea1\"\r\n                rows=\"3\"\r\n                placeholder=\"Message\"\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              onClick={this.sendMail}\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Contact);\r\n","// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyB7qtP77Rx3HmirB5lyWJ90RYeMu4TVnyc\",\r\n//   authDomain: \"reserve-restaurant-80ec7.firebaseapp.com\",\r\n//   databaseURL: \"https://reserve-restaurant-80ec7.firebaseio.com\",\r\n//   projectId: \"reserve-restaurant-80ec7\",\r\n//   storageBucket: \"reserve-restaurant-80ec7.appspot.com\",\r\n//   messagingSenderId: \"1022182989367\",\r\n//   appId: \"1:1022182989367:web:12692d873c484a842be9b2\",\r\n//   measurementId: \"G-CSDM8VMGL4\"\r\n// };\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDpsl140hY7lCFfPw_CV9fxbDsbbU2YN6U\",\r\n  authDomain: \"reserve-1d4e1.firebaseapp.com\",\r\n  databaseURL: \"https://reserve-1d4e1.firebaseio.com\",\r\n  projectId: \"reserve-1d4e1\",\r\n  storageBucket: \"reserve-1d4e1.appspot.com\",\r\n  messagingSenderId: \"1028452700122\",\r\n  appId: \"1:1028452700122:web:852c13d9b3cd2045227ae3\",\r\n  measurementId: \"G-T7D59TGW8L\"\r\n};\r\nexport default firebaseConfig;\r\n","import * as firebase from \"firebase\";\r\nimport firebaseConfig from \"../Config\";\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nconst registerVendorEmail = async (email, password) => {\r\n  const user = await app.auth().createUserWithEmailAndPassword(email, password);\r\n  return user;\r\n};\r\nconst createVendor = async (\r\n  email,\r\n  password,\r\n  address,\r\n  accountNumber,\r\n  account_name,\r\n  bank_name,\r\n  branch,\r\n  category,\r\n  lat,\r\n  llong,\r\n  name,\r\n  number,\r\n  photo,\r\n  photo_extension,\r\n  reservation_fee\r\n) => {\r\n  const user = await registerVendorEmail(email, password);\r\n  const uid = user.user.uid;\r\n  const photo_url = await uploadVendorImage(photo, photo_extension, uid);\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .set({\r\n      email,\r\n      address,\r\n      bank_details: { account_name, accountNumber, bank_name },\r\n      branch,\r\n      category,\r\n      reservation_fee,\r\n      photo_url,\r\n      number,\r\n      llocation: {\r\n        lat,\r\n        llong\r\n      },\r\n      name,\r\n      uid,\r\n      is_verified: false,\r\n      is_restrict_order: false,\r\n      is_number_verified: false,\r\n      is_email_verified: false,\r\n      close: false\r\n    });\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .once(\"value\");\r\n  return response.val();\r\n};\r\nconst uploadVendorImage = async (image, extension, uid) => {\r\n  const storageRef = app\r\n    .storage()\r\n    .ref(\"/restaurant_images\")\r\n    .child(\"/\" + uid + \".\" + extension);\r\n  const uploadedFile = await storageRef.put(image);\r\n\r\n  return uploadedFile.ref.getDownloadURL();\r\n};\r\nconst getCategories = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/categories/\" + uid)\r\n    .once(\"value\");\r\n  const responseValue = response.val();\r\n\r\n  const categories = responseValue\r\n    ? Object.keys(responseValue).map(key => {\r\n        return responseValue[key];\r\n      })\r\n    : [];\r\n  return categories;\r\n};\r\nconst vendorListenToCategories = async (cb, uid) => {\r\n  app\r\n    .database()\r\n    .ref(\"/categories/\" + uid)\r\n    .on(\"child_changed\", cb);\r\n};\r\nconst updateNotificationSeen = async (uid, notification_key) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid + \"/\" + notification_key)\r\n    .update({ isSeen: true });\r\n};\r\nconst updateReservationClose = async (uid, value) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({ close: value });\r\n};\r\nconst updateVendor = async (\r\n  name,\r\n  number,\r\n  reservation_fee,\r\n  lat,\r\n  llong,\r\n  accountNumber,\r\n  account_name,\r\n  bank_name,\r\n  uid\r\n) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      name,\r\n      number,\r\n      reservation_fee,\r\n      llocation: {\r\n        lat,\r\n        llong\r\n      },\r\n      bank_details: {\r\n        accountNumber,\r\n        account_name,\r\n        bank_name\r\n      }\r\n    });\r\n};\r\nconst updateVendorImage = async (image, uid) => {\r\n  const imageNameSplit = image.name.split(\".\");\r\n  const extension = imageNameSplit[imageNameSplit.length - 1];\r\n  const photo_url = await uploadVendorImage(image, extension, uid);\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      photo_url\r\n    });\r\n};\r\nconst updateAvailable = async (uid, value) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({ instant_data: { available: Number(value) } });\r\n};\r\nconst getReservationsVendor = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .once(\"value\");\r\n  const responseValue = response.val();\r\n  const reservations = responseValue\r\n    ? Object.keys(responseValue).map(key => {\r\n        return responseValue[key];\r\n      })\r\n    : [];\r\n  console.log(uid);\r\n  console.log(responseValue);\r\n  console.log(reservations);\r\n  const filteredReservations = reservations.filter(\r\n    e => e.restaurant_uid === uid\r\n  );\r\n  console.log(filteredReservations);\r\n  return filteredReservations;\r\n};\r\nconst vendorListenToReservations = async cb => {\r\n  app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .on(\"child_changed\", cb);\r\n};\r\nconst getNotificationsVendor = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .once(\"value\");\r\n  const responseValue = response.val();\r\n\r\n  const notifications = responseValue\r\n    ? Object.keys(responseValue).map(key => {\r\n        return responseValue[key];\r\n      })\r\n    : [];\r\n  return notifications;\r\n};\r\nconst vendorListenToNotifications = async (cb, uid) => {\r\n  app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .on(\"child_changed\", cb);\r\n};\r\nconst getDishesVendor = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .once(\"value\");\r\n  const responseValue = response.val();\r\n  const dishes = responseValue\r\n    ? Object.keys(responseValue).map(key => {\r\n        return responseValue[key];\r\n      })\r\n    : [];\r\n  const filteredDishes = dishes.filter(e => e.uid === uid);\r\n  return filteredDishes;\r\n};\r\nconst vendorListenToDishes = async cb => {\r\n  app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .on(\"child_changed\", cb);\r\n};\r\nconst getAdmin = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/admin/\" + uid)\r\n    .once(\"value\");\r\n  return response.val();\r\n};\r\nconst login = async (email, password) => {\r\n  const response = await app.auth().signInWithEmailAndPassword(email, password);\r\n  console.log(response);\r\n  if (response.user) {\r\n    const admin = await getAdmin(response.user.uid);\r\n    console.log(admin);\r\n    return admin;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nconst getVendor = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .once(\"value\");\r\n  return response.val();\r\n};\r\nconst loginVendor = async (email, password) => {\r\n  const response = await app.auth().signInWithEmailAndPassword(email, password);\r\n  console.log(response);\r\n  if (response.user) {\r\n    const vendor = await getVendor(response.user.uid);\r\n    console.log(vendor);\r\n    return vendor;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nconst getReservations = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const reservations = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return reservations;\r\n};\r\nconst getRestaurants = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const restaurants = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return restaurants;\r\n};\r\nconst getDishes = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const dishes = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return dishes;\r\n};\r\nconst getReviews = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/ratings/\" + uid)\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const ratings = value\r\n    ? Object.keys(value).map(key => {\r\n        return value[key];\r\n      })\r\n    : [];\r\n  return ratings;\r\n};\r\nconst getNotifications = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  if (value) {\r\n    const notifications = Object.keys(value).map(key => {\r\n      return value[key];\r\n    });\r\n    return notifications;\r\n  }\r\n  return [];\r\n};\r\nconst getAllReviews = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/ratings/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const ratings = [];\r\n  Object.keys(value).forEach(key => {\r\n    const data = Object.keys(value[key]).map(k => value[key][k]);\r\n    ratings.push(...data);\r\n  });\r\n  return ratings;\r\n};\r\nconst getComplaints = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/complaints/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const complaints = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return complaints;\r\n};\r\nconst getSlideShows = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/slideshows/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  if (value) {\r\n    const slideshows = Object.keys(value).map(key => {\r\n      return value[key];\r\n    });\r\n    return slideshows;\r\n  }\r\n  return [];\r\n};\r\nconst getCustomers = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/customers/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const customers = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return customers;\r\n};\r\nconst addDiscountVoucher = async (\r\n  code,\r\n  expDate,\r\n  maxUses,\r\n  vendor_type,\r\n  percentage\r\n) => {\r\n  const key = await app\r\n    .database()\r\n    .ref(\"/discounts\")\r\n    .push();\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + key.key)\r\n    .set({\r\n      code,\r\n      expDate,\r\n      maxUses,\r\n      numberOfUses: 0,\r\n      isBlocked: false,\r\n      uid: key.key,\r\n      vendor_type,\r\n      percentage\r\n    });\r\n};\r\nconst updateDiscountVoucher = async (uid, isBlocked) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + uid)\r\n    .update({\r\n      isBlocked\r\n    });\r\n};\r\nconst getDiscountVouchers = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/discounts/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const discounts = value\r\n    ? Object.keys(value).map(key => {\r\n        return value[key];\r\n      })\r\n    : [];\r\n  return discounts;\r\n};\r\nconst listenToNotifications = async (callBack, uid) => {\r\n  app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToVendors = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToReviews = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/reviews/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToSlideShows = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/slideshows/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst deleteVendor = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .remove();\r\n};\r\nconst deleteDiscount = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + uid)\r\n    .remove();\r\n};\r\nconst deleteSlideshow = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/slideshows/\" + uid)\r\n    .remove();\r\n};\r\nconst listenToComplaints = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/complaints/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToDiscountVouchers = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/discounts/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToReservations = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToDishes = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToCustomers = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/customers/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst restrictOrder = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      is_restrict_order: value\r\n    });\r\n};\r\nconst updateProcessingFee = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      processing_fee: value + \"\"\r\n    });\r\n};\r\nconst updateProcessingFeeAndVerify = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      processing_fee: value + \"\",\r\n      is_number_verified: true,\r\n      is_verified: true\r\n    });\r\n};\r\nconst addSlideShow = async (file, extension, vendor_uid) => {\r\n  const key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/slideshows/\")\r\n      .push()\r\n  ).key;\r\n  console.log(\"uid = \", key);\r\n  const image_url = await uploadSlideShowImage(file, key, extension);\r\n  console.log(\"image_url = \", image_url);\r\n  await app\r\n    .database()\r\n    .ref(\"/slideshows/\" + key)\r\n    .set({\r\n      uid: key,\r\n      vendor_uid,\r\n      image_url\r\n    });\r\n};\r\nconst uploadSlideShowImage = async (file, uid, extension) => {\r\n  console.log(\"uu uid = \", uid);\r\n  console.log(\"extension = \", extension);\r\n  console.log(\"file = \", file);\r\n  const ref = app.storage().ref(\"/slideshows/\");\r\n  var imageRef = ref.child(uid + \".\" + extension);\r\n  const response = await imageRef.put(file);\r\n  return response.ref.getDownloadURL();\r\n};\r\nconst Firebase = {\r\n  login,\r\n  getAdmin,\r\n  getReservations,\r\n  getRestaurants,\r\n  getDishes,\r\n  getReviews,\r\n  getAllReviews,\r\n  getComplaints,\r\n  getCustomers,\r\n  getNotifications,\r\n  addDiscountVoucher,\r\n  getDiscountVouchers,\r\n  listenToNotifications,\r\n  listenToVendors,\r\n  listenToReviews,\r\n  listenToComplaints,\r\n  listenToDiscountVouchers,\r\n  listenToReservations,\r\n  listenToDishes,\r\n  listenToCustomers,\r\n  deleteVendor,\r\n  restrictOrder,\r\n  updateProcessingFee,\r\n  updateProcessingFeeAndVerify,\r\n  updateDiscountVoucher,\r\n  addSlideShow,\r\n  listenToSlideShows,\r\n  getSlideShows,\r\n  deleteSlideshow,\r\n  deleteDiscount,\r\n  getVendor,\r\n  loginVendor,\r\n  createVendor,\r\n  getCategories,\r\n  getReservationsVendor,\r\n  getNotificationsVendor,\r\n  getDishesVendor,\r\n  vendorListenToCategories,\r\n  vendorListenToDishes,\r\n  vendorListenToNotifications,\r\n  vendorListenToReservations,\r\n  updateNotificationSeen,\r\n  updateReservationClose,\r\n  updateAvailable,\r\n  updateVendor,\r\n  updateVendorImage\r\n};\r\nexport default Firebase;\r\n","const setAdmin = user => {\r\n  localStorage.setItem(\"admin\", JSON.stringify(user));\r\n};\r\nconst getAdmin = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"admin\"));\r\n  return user;\r\n};\r\nconst removeAdmin = () => {\r\n  localStorage.removeItem(\"admin\");\r\n};\r\nconst setVendor = user => {\r\n  localStorage.setItem(\"Vendor\", JSON.stringify(user));\r\n};\r\nconst getVendor = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"Vendor\"));\r\n  return user;\r\n};\r\nconst removeVendor = () => {\r\n  localStorage.removeItem(\"Vendor\");\r\n};\r\nexport { setAdmin, getAdmin, removeAdmin, setVendor, getVendor, removeVendor };\r\n","import { AdminActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst mapStateToProps = state => {\r\n  return state.AdminReducer;\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateLogin: user =>\r\n      dispatch({\r\n        type: AdminActionTypes.ADMIN_UPDATE_LOGIN_STATUS,\r\n        payload: user\r\n      }),\r\n    updateComplaints: complaints =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_COMPLAINTS,\r\n        payload: complaints\r\n      }),\r\n    updateDiscountVouchers: vouchers =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_DISCOUNT_VOUCHERS,\r\n        payload: vouchers\r\n      }),\r\n    updateNotifications: notifications =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_NOTIFICATIONS,\r\n        payload: notifications\r\n      }),\r\n    updateReservations: reservations =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_RESERVATIONS,\r\n        payload: reservations\r\n      }),\r\n    updateReviews: reviews =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_REVIEWS, payload: reviews }),\r\n    updateCustomers: customers =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_CUSTOMERS, payload: customers }),\r\n    updateVendors: vendors =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_VENDORS, payload: vendors }),\r\n    updateSlideshows: slideshows =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_SLIDESHOW, payload: slideshows })\r\n  };\r\n};\r\nexport { mapDispatchToProps, mapStateToProps };\r\n","import React, { Component } from \"react\";\r\nimport \"./Login.css\";\r\nimport Logo from \"../../../Images/logo.png\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setAdmin } from \"../../../Config/localStorage\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    isLoggingIn: false,\r\n    inValidLogin: false\r\n  };\r\n  changeState = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  login = async () => {\r\n    this.setState({ isLoggingIn: true });\r\n    try {\r\n      if (this.state.email.trim() !== \"\" && this.state.password.trim() !== \"\") {\r\n        const user = await Firebase.login(\r\n          this.state.email,\r\n          this.state.password\r\n        );\r\n        setAdmin(user);\r\n        this.props.updateLogin(user);\r\n        window.location.reload();\r\n      } else {\r\n        alert(\"Your have to fill all fields in order to login\");\r\n      }\r\n    } catch (error) {\r\n      this.setState({ isLoggingIn: false, inValidLogin: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <HomeNavbar></HomeNavbar> */}\r\n        <div className=\"container \">\r\n          <div className=\"row justify-content-center\">\r\n            <img\r\n              style={{\r\n                width: \"20%\",\r\n                objectFit: \"contain\",\r\n                height: \"20vh\"\r\n              }}\r\n              src={Logo}\r\n            ></img>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <form className=\"loginAdmin col-10 col-md-6\">\r\n              <legend>Admin Login</legend>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">\r\n                  Enter Your Email Address\r\n                </label>\r\n                <input\r\n                  onChange={e => this.changeState(\"email\", e.target.value)}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  placeholder=\"Email Address\"\r\n                  aria-describedby=\"emailHelp\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Enter Your Password</label>\r\n                <input\r\n                  onChange={e => this.changeState(\"password\", e.target.value)}\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n              {this.state.inValidLogin ? (\r\n                <p className=\"text-danger\">Invalid email or password!</p>\r\n              ) : null}\r\n              <button\r\n                onClick={this.login}\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.state.isLoggingIn ? (\r\n                  <Spinner animation=\"border\" variant=\"primary\" />\r\n                ) : (\r\n                  \"Login\"\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\r\n","import React, { Component } from \"react\";\r\nimport \"./Header.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../../Config/AdminMapping\";\r\nimport { removeAdmin } from \"../../Config/localStorage\";\r\nimport { Dropdown, Badge } from \"react-bootstrap\";\r\nclass Header extends Component {\r\n  logout = async () => {\r\n    removeAdmin();\r\n    this.props.updateLogin(null);\r\n    this.props.history.push(\"/admin/\");\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(e => !e.is_verified);\r\n    const notifications = vendors.map(e => {\r\n      return (\r\n        <Dropdown.Item>\r\n          <Link to={\"/admin/vendor/\" + e.uid}>Verify New Vendor {e.name}</Link>\r\n        </Dropdown.Item>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <nav class=\"navbar navbar-custom navbar-expand-lg navbar-light bg-white \">\r\n          <Link class=\"navbar-brand\" to=\"/admin/\">\r\n            <img style={{ width: 80 }} src={Logo}></img>\r\n          </Link>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarCollapse\"\r\n            aria-controls=\"navbarCollapse\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon \"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n            <ul\r\n              class=\"navbar-nav mr-auto sidenav h-100 bg-white \"\r\n              id=\"navAccordion\"\r\n            >\r\n              <li class=\"nav-item active\">\r\n                <Link to=\"/admin/\">\r\n                  <img\r\n                    className=\"nav-logo\"\r\n                    style={{ width: 200, margin: \"70px 40px \" }}\r\n                    src={Logo}\r\n                  ></img>\r\n                </Link>\r\n                <div class=\"mx-3\">\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Vendors</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/reservations\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Reservations</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/verification\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Vendors Verification</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/complaints\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Complaints</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/discount\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Discount Coupons</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/slideshow\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Slideshow Banners</span>\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li class=\"nav-item\">\r\n                    <Link onClick={this.logout} class=\"nav-link h5 \">\r\n                      <span className=\"ml-2\">Logout</span>\r\n                    </Link>\r\n                  </li>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <form class=\"form-inline ml-auto mt-2 mt-md-0\"></form>\r\n            <div class=\"d-flex align-items-center mx-3\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">\r\n                  <ion-icon name=\"notifications-outline\"></ion-icon>\r\n                  <Badge pill className=\"notifications\" variant=\"primary\">\r\n                    {vendors.length}\r\n                  </Badge>\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  {notifications.length ? (\r\n                    notifications\r\n                  ) : (\r\n                    <Dropdown.Item>No notifications</Dropdown.Item>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <main class=\"content-wrapper\">{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Tabs,\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"./Dashboard.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    modalShow: false,\r\n    selectedVendor: \"\",\r\n    procFee: 0,\r\n    date: new Date(),\r\n    name: \"\"\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(element => {\r\n      const condition = element.name\r\n        .toLowerCase()\r\n        .includes(this.state.name.toLowerCase(), 0);\r\n      return condition;\r\n    });\r\n    const restaurants = vendors.filter(\r\n      element => element.category === \"Restaurants\" && element.is_verified\r\n    );\r\n    const escapeRooms = vendors.filter(\r\n      element => element.category === \"Escape Rooms\" && element.is_verified\r\n    );\r\n    const cafes = vendors.filter(\r\n      element => element.category === \"Cafes\" && element.is_verified\r\n    );\r\n    const events = vendors.filter(\r\n      element => element.category === \"Events\" && element.is_verified\r\n    );\r\n    const unverified = vendors.filter(element => !element.is_verified);\r\n\r\n    return (\r\n      <div>\r\n        {/* <AdminNavbar></AdminNavbar> */}\r\n        <Header>\r\n          <Container>\r\n            <Row className=\"justify-content-center\">\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Vendors</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Form.Row style={{ paddingTop: 10, paddingBottom: 10 }}>\r\n                      <Form.Group as={Col} controlId=\"formGridCity\">\r\n                        <Form.Control\r\n                          onChange={e =>\r\n                            this.setState({ name: e.target.value })\r\n                          }\r\n                          placeholder=\"Search\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Tabs\r\n                      variant=\"pills\"\r\n                      defaultActiveKey=\"Restaurants\"\r\n                      id=\"noanim-tab-example\"\r\n                    >\r\n                      <Tab eventKey=\"Restaurants\" title=\"Restaurants\">\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {restaurants.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <tr\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <td>\r\n                                      <img\r\n                                        style={{\r\n                                          width: 40,\r\n                                          height: 40,\r\n                                          borderRadius: 50,\r\n                                          objectFit: \"cover\"\r\n                                        }}\r\n                                        src={element.photo_url}\r\n                                      ></img>\r\n                                    </td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.email}</td>\r\n                                    <td>\r\n                                      {element.is_verified ? (\r\n                                        <Badge variant=\"success\">\r\n                                          Verified\r\n                                        </Badge>\r\n                                      ) : (\r\n                                        <Badge variant=\"danger\">\r\n                                          Unverified\r\n                                        </Badge>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab>\r\n                      <Tab eventKey=\"Cafe\" title=\"Cafe\">\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {cafes.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <tr\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <td>\r\n                                      <img\r\n                                        style={{\r\n                                          width: 40,\r\n                                          height: 40,\r\n                                          borderRadius: 50,\r\n                                          objectFit: \"cover\"\r\n                                        }}\r\n                                        src={element.photo_url}\r\n                                      ></img>\r\n                                    </td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.email}</td>\r\n                                    <td>\r\n                                      {element.is_verified ? (\r\n                                        <Badge variant=\"success\">\r\n                                          Verified\r\n                                        </Badge>\r\n                                      ) : (\r\n                                        <Badge variant=\"danger\">\r\n                                          Unerified\r\n                                        </Badge>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab>\r\n                      <Tab eventKey=\"Escape Rooms\" title=\"Escape Rooms\">\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {escapeRooms.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <tr\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <td>\r\n                                      <img\r\n                                        style={{\r\n                                          width: 40,\r\n                                          height: 40,\r\n                                          borderRadius: 50,\r\n                                          objectFit: \"cover\"\r\n                                        }}\r\n                                        src={element.photo_url}\r\n                                      ></img>\r\n                                    </td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.email}</td>\r\n                                    <td>\r\n                                      {element.is_verified ? (\r\n                                        <Badge variant=\"success\">\r\n                                          Verified\r\n                                        </Badge>\r\n                                      ) : (\r\n                                        <Badge variant=\"danger\">\r\n                                          Unerified\r\n                                        </Badge>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab>\r\n                      <Tab eventKey=\"Event Organizers\" title=\"Event Organizers\">\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {events.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <tr\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <td>\r\n                                      <img\r\n                                        style={{\r\n                                          width: 40,\r\n                                          height: 40,\r\n                                          borderRadius: 50,\r\n                                          objectFit: \"cover\"\r\n                                        }}\r\n                                        src={element.photo_url}\r\n                                      ></img>\r\n                                    </td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.email}</td>\r\n                                    <td>\r\n                                      {element.is_verified ? (\r\n                                        <Badge variant=\"success\">\r\n                                          Verified\r\n                                        </Badge>\r\n                                      ) : (\r\n                                        <Badge variant=\"danger\">\r\n                                          Unerified\r\n                                        </Badge>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab>\r\n                    </Tabs>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>{\" \"}\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Dashboard));\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport \"./AdminNavbar.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeAdmin } from \"../../Config/localStorage\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../../Config/AdminMapping\";\r\nclass AdminNavbar extends Component {\r\n  logout = async () => {\r\n    removeAdmin();\r\n    this.props.updateLogin(null);\r\n    this.props.history.push(\"/admin/\");\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(e => !e.is_verified);\r\n    const notifications = vendors.map(e => {\r\n      return (\r\n        <Dropdown.Item>\r\n          <Link to={\"/admin/vendor/\" + e.uid}>Verify New Vendor {e.name}</Link>\r\n        </Dropdown.Item>\r\n      );\r\n    });\r\n    return (\r\n      <Navbar className=\"admin-nav\" bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand>\r\n          <Link to=\"/admin/\">\r\n            <img style={{ width: 100 }} src={Logo}></img>\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto admin-nav-links\">\r\n            <Nav.Link>\r\n              <Link to=\"/admin\">Vendors</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/reservations\">Reservations</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/discount\">Discount Vouchers</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/complaints\">Complaints</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/slideshow\">Slideshow</Link>\r\n            </Nav.Link>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">\r\n                <ion-icon name=\"notifications-outline\"></ion-icon>\r\n                <Badge pill className=\"notifications\" variant=\"primary\">\r\n                  {vendors.length}\r\n                </Badge>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                {notifications.length ? (\r\n                  notifications\r\n                ) : (\r\n                  <Dropdown.Item>No notifications</Dropdown.Item>\r\n                )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Nav>\r\n          <Link>\r\n            <Button\r\n              onClick={this.logout}\r\n              type=\"button\"\r\n              variant=\"outline-primary\"\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(AdminNavbar)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  Pagination,\r\n  Table,\r\n  Badge,\r\n  Media,\r\n  Form,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport \"./Vendor.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass Vendor extends Component {\r\n  state = {\r\n    address: \"\",\r\n    branch: \"\",\r\n    category: \"\",\r\n    close: false,\r\n    email: \"\",\r\n    instant_data: {\r\n      available: 0\r\n    },\r\n    modalShow: false,\r\n    is_email_verfied: false,\r\n    is_number_verified: false,\r\n    is_restrict_order: false,\r\n    is_verified: false,\r\n    llocation: {\r\n      lat: 0,\r\n      llong: 0\r\n    },\r\n    name: \"\",\r\n    number: \"\",\r\n    photo_url: \"\",\r\n    reservation_fee: \"0\",\r\n    processing_fee: \"0\",\r\n    uid: \"LEa50vSb5KTbwvz3FgToiDwvzKm1\",\r\n    bank_details: {\r\n      accountNumber: \"\",\r\n      account_name: \"\",\r\n      bank_name: \"\"\r\n    },\r\n    reviews: [],\r\n    newProFee: 0\r\n  };\r\n  restrictOrder = async uid => {\r\n    await Firebase.restrictOrder(!this.state.is_restrict_order, uid);\r\n    this.setState({\r\n      is_restrict_order: !this.state.is_restrict_order\r\n    });\r\n  };\r\n  checkDate = date => {\r\n    var weekStart = new Date();\r\n    // weekStart.setDate(weekStart.getDate() - weekStart.getDay());\r\n    weekStart.setDate(weekStart.getDate() - 30);\r\n    var weekEnd = new Date(+weekStart);\r\n    weekEnd.setDate(weekEnd.getDate() + 30);\r\n    return date >= weekStart && date <= weekEnd;\r\n  };\r\n  componentDidMount = async () => {\r\n    const vendor = this.props.vendors.find(\r\n      element => element.uid === this.props.match.params.uid\r\n    );\r\n    this.setState({\r\n      ...vendor\r\n    });\r\n    const reviews = this.props.reviews.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    let reviewsCustomerAndVendorJoin = reviews.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const restaurant = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, element.rating);\r\n      return {\r\n        ...element,\r\n        customer,\r\n        restaurant,\r\n        array\r\n      };\r\n    });\r\n    this.setState({\r\n      reviews: reviewsCustomerAndVendorJoin\r\n    });\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/customer/\" + uid);\r\n  };\r\n  deleteHandler = async () => {\r\n    await Firebase.deleteVendor(this.state.uid);\r\n    this.props.history.push(\"/admin/\");\r\n  };\r\n  render() {\r\n    const reservations = this.props.reservations.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    const reservationsToRender = reservations.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        element.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : element.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.clickHandler(customer.uid)}>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={customer.photo}\r\n            ></img>\r\n          </td>\r\n          <td>{customer.name}</td>\r\n          <td>{element.time}</td>\r\n          <td>{element.date}</td>\r\n          <td>{element.attandee}</td>\r\n          <td>{Math.floor(Number(element.attandee / 5)) + 1}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{element.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    const complaints = this.props.complaints.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    const complaintsToRender = complaints.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      return customer ? (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              customer.photo\r\n                ? customer.photo\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{customer.name}</h5>\r\n            <Row className=\"ml-1\">\r\n              <h6 onClick={this.redirectToVendor}>{vendor.name}</h6>\r\n            </Row>\r\n            <Row className=\"ml-1\">\r\n              <h6 className=\"text-muted\">{element.title}</h6>\r\n            </Row>\r\n            <p>{element.description}</p>\r\n            <p>\r\n              Date of Complaint:{\" \"}\r\n              <small className=\"text-muted\">{element.date}</small>\r\n            </p>\r\n          </Media.Body>\r\n        </Media>\r\n      ) : null;\r\n    });\r\n    const currentReservations = reservations.filter(e => {\r\n      const date = new Date(e.date);\r\n      console.log(date);\r\n      return this.checkDate(date);\r\n    });\r\n    console.log(currentReservations);\r\n    console.log(reservations);\r\n    let totalTables = 0;\r\n    currentReservations.forEach(r => {\r\n      totalTables += Math.floor(Number(Number(r.attandee) / 5)) + 1;\r\n    });\r\n    console.log(totalTables);\r\n\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Row>\r\n              <Col xs=\"12\" md=\"3\">\r\n                <Card>\r\n                  <Card.Body>\r\n                    <img\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: 200,\r\n                        objectFit: \"cover\"\r\n                      }}\r\n                      src={this.state.photo_url}\r\n                    ></img>\r\n                    <hr></hr>\r\n                    <p className=\"h5\">\r\n                      {this.state.name}\r\n                      {this.state.is_verified ? null : (\r\n                        <small className=\"text-muted text-danger\">\r\n                          {\" \"}\r\n                          (Verification Pending)\r\n                        </small>\r\n                      )}\r\n                    </p>\r\n                    <p className=\"text-muted\">{this.state.category}</p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Branch:{\" \"}\r\n                      <span className=\"text-muted\">{this.state.branch}</span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Phone:{\" \"}\r\n                      <span className=\"text-muted\">{this.state.number}</span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Email:{\" \"}\r\n                      <span className=\"text-muted\">{this.state.email}</span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Bank Name:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        {this.state.bank_details.bank_name}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Account Name:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        {this.state.bank_details.account_name}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Account Number:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        {this.state.bank_details.accountNumber}\r\n                      </span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Reservation Fee:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        EGP {this.state.reservation_fee}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Processing Fee:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        EGP {this.state.processing_fee}\r\n                      </span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Last Months Reservation Revenue:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        EGP {this.state.reservation_fee * totalTables}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Last Months Processing Revenue:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        EGP {this.state.processing_fee * totalTables}\r\n                      </span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Available Reservations:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        {this.state.instant_data.available}\r\n                      </span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <Form.Check\r\n                      checked={this.state.is_restrict_order}\r\n                      type=\"switch\"\r\n                      id=\"custom-switch\"\r\n                      label=\"Stop Reservations\"\r\n                      onChange={() => this.restrictOrder(this.state.uid)}\r\n                    />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mt-3 mt-md-0 mb-5\" xs=\"12\" md=\"9\">\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Vendor Details</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Row className=\" p-4\">\r\n                      <Button\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            modalShow: true\r\n                          });\r\n                        }}\r\n                        variant=\"primary\"\r\n                        className=\"mx-2\"\r\n                      >\r\n                        {this.state.is_verified\r\n                          ? \"Edit Processing Fee\"\r\n                          : \"Approve Verification\"}\r\n                      </Button>\r\n                      <Button\r\n                        onClick={this.deleteHandler}\r\n                        variant=\"danger\"\r\n                        className=\"mx-2\"\r\n                      >\r\n                        {this.state.is_verified\r\n                          ? \"Remove Vendor\"\r\n                          : \"Reject Verification\"}\r\n                      </Button>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <h3>Location</h3>\r\n                    <div className=\"map\">\r\n                      <h1>Map will be displayed here</h1>\r\n                    </div>\r\n                    <hr></hr>\r\n                    {reservationsToRender.length > 0 ? (\r\n                      <>\r\n                        <h3>Reservations</h3>\r\n                        <Table responsive striped hover>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Customer Name</th>\r\n                              <th>Reservation Time</th>\r\n                              <th>Date of Reservation</th>\r\n                              <th>Number of Attendees</th>\r\n                              <th>Number of Tables</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>{reservationsToRender}</tbody>\r\n                        </Table>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Reservations Found</p>\r\n                    )}\r\n                    <hr></hr>\r\n                    {this.state.reviews.length > 0 ? (\r\n                      <>\r\n                        <h3>Reviews</h3>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                          {this.state.reviews.map(element => {\r\n                            return (\r\n                              <Media as=\"li\">\r\n                                <img\r\n                                  width={64}\r\n                                  height={64}\r\n                                  className=\"mr-3\"\r\n                                  style={{ objectFit: \"cover\" }}\r\n                                  src={\r\n                                    element.customer.photo\r\n                                      ? element.customer.photo\r\n                                      : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                                  }\r\n                                  alt=\"Generic placeholder\"\r\n                                />\r\n                                <Media.Body>\r\n                                  <h5>{element.customer.name}</h5>\r\n                                  <Row className=\"media-stars \">\r\n                                    {element.array.map(star => {\r\n                                      return <ion-icon name={star}></ion-icon>;\r\n                                    })}\r\n                                  </Row>\r\n                                  <p>{element.comment}</p>\r\n                                </Media.Body>\r\n                              </Media>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Reviews for this Vendor</p>\r\n                    )}\r\n                    <hr></hr>\r\n                    {complaintsToRender.length > 0 ? (\r\n                      <>\r\n                        <h3>Complaints</h3>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                          {complaintsToRender}\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Complaints for this Vendor</p>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Processing Fee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  Processing Fee\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                type=\"number\"\r\n                onChange={e => {\r\n                  this.setState({\r\n                    newProFee: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={async () => {\r\n                if (this.state.is_verified) {\r\n                  await Firebase.updateProcessingFee(\r\n                    this.state.newProFee,\r\n                    this.state.uid\r\n                  );\r\n                } else {\r\n                  await Firebase.updateProcessingFeeAndVerify(\r\n                    this.state.newProFee,\r\n                    this.state.uid\r\n                  );\r\n                }\r\n                this.setState({ modalShow: false });\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              {this.state.is_verified ? \"Update\" : \"Verify\"}\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.setState({ modalShow: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Vendor));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport { Card, Pagination, Row, Media, Container } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\n\r\nclass Complaints extends Component {\r\n  redirectToVendor = async () => {\r\n    this.props.history.push(\"/admin/vendor\");\r\n  };\r\n  render() {\r\n    const complaintsToRender = this.props.complaints.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const condition = customer && vendor;\r\n      return condition ? (\r\n        <>\r\n          <Media as=\"li\">\r\n            <img\r\n              width={64}\r\n              height={64}\r\n              className=\"mr-3\"\r\n              style={{ objectFit: \"cover\" }}\r\n              src={\r\n                customer.photo\r\n                  ? customer.photo\r\n                  : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n              }\r\n              alt=\"Generic placeholder\"\r\n            />\r\n            <Media.Body>\r\n              <h5>{customer.name}</h5>\r\n              <Row className=\"ml-1\">\r\n                <h6 onClick={this.redirectToVendor}>{vendor.name}</h6>\r\n              </Row>\r\n              <Row className=\"ml-1\">\r\n                <h6 className=\"text-muted\">{element.title}</h6>\r\n              </Row>\r\n              <p>{element.description}</p>\r\n              <p>\r\n                Date of Complaint:{\" \"}\r\n                <small className=\"text-muted\">{element.date}</small>\r\n              </p>\r\n            </Media.Body>\r\n          </Media>\r\n          <hr></hr>\r\n        </>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Card className=\"my-3\">\r\n              <Card.Header>\r\n                <h1>Complaints</h1>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <ul className=\"list-unstyled mt-5\">{complaintsToRender}</ul>\r\n              </Card.Body>\r\n            </Card>\r\n          </Container>\r\n\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Complaints));\r\n","import React, { Component } from \"react\";\r\nimport { Container, Card, Table, Badge, Form, Col } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass Reservations extends Component {\r\n  state = {\r\n    vendor: \"\",\r\n    customer: \"\",\r\n    minDate: null,\r\n    maxDate: null,\r\n    vendorType: \"All\"\r\n  };\r\n  redirectToCustomer = async uid => {\r\n    this.props.history.push(\"/admin/customer/\" + uid);\r\n  };\r\n  render() {\r\n    const reservationsToRender = this.props.reservations.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n\r\n      const date = new Date(element.date);\r\n      const minDate = new Date(this.state.minDate);\r\n      const maxDate = new Date(this.state.maxDate);\r\n      const condition =\r\n        vendor.name\r\n          .toLowerCase()\r\n          .includes(this.state.vendor.toLowerCase(), 0) &&\r\n        (this.state.vendorType === \"All\" ||\r\n          this.state.vendorType === vendor.category) &&\r\n        customer.name\r\n          .toLowerCase()\r\n          .includes(this.state.customer.toLowerCase(), 0) &&\r\n        (!this.state.minDate ||\r\n          !this.state.maxDate ||\r\n          (date >= minDate && date <= maxDate));\r\n      const badgeVariant =\r\n        element.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : element.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return condition ? (\r\n        <tr onClick={() => this.redirectToCustomer(customer.uid)}>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={customer.photo}\r\n            ></img>\r\n          </td>\r\n          <td>{customer.name}</td>\r\n          <td>{vendor ? vendor.name : \"Vendor Deleted\"}</td>\r\n          <td>{element.time}</td>\r\n          <td>{element.date}</td>\r\n          <td>{element.attandee}</td>\r\n          <td>{Math.floor(Number(element.attandee / 5)) + 1}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{element.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Card className=\"my-3\">\r\n              <Card.Header>\r\n                <h1>Reservations</h1>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form.Row style={{ paddingTop: 10 }}>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Vendor Type</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={e =>\r\n                        this.setState({ vendorType: e.target.value })\r\n                      }\r\n                    >\r\n                      <option value=\"All\">All</option>\r\n                      <option value=\"Restaurants\">Restaurants</option>\r\n                      <option value=\"Cafes\">Cafes</option>\r\n                      <option value=\"Escape Rooms\">Escape Rooms</option>\r\n                      <option value=\"Events\">Events</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row style={{ paddingTop: 10 }}>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Vendor Name</Form.Label>\r\n                    <Form.Control\r\n                      onChange={e => this.setState({ vendor: e.target.value })}\r\n                      placeholder=\"Search By Vendor\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Customer Name</Form.Label>\r\n                    <Form.Control\r\n                      onChange={e =>\r\n                        this.setState({ customer: e.target.value })\r\n                      }\r\n                      placeholder=\"Search By Customer\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row style={{ paddingTop: 10 }}>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Min Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      onChange={e => this.setState({ minDate: e.target.value })}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Max Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      onChange={e => this.setState({ maxDate: e.target.value })}\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Table responsive striped hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Customer Image</th>\r\n                      <th>Customer Name</th>\r\n                      <th>Vendor Name</th>\r\n                      <th>Reservation Time</th>\r\n                      <th>Date of Reservation</th>\r\n                      <th>Number of Attendees</th>\r\n                      <th>Number of Tables</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{reservationsToRender}</tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Reservations));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Media,\r\n  Badge\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass Customer extends Component {\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const customer = this.props.customers.find(\r\n      e => e.uid === this.props.match.params.uid\r\n    );\r\n    const reservations = this.props.reservations.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const complaints = this.props.complaints.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const reviews = this.props.reviews.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const reservationsToRender = reservations.map(reservation => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === reservation.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        reservation.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : reservation.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.clickHandler(vendor.uid)}>\r\n          <td>\r\n            <img\r\n              src={vendor ? vendor.photo_url : \"\"}\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                objectFit: \"cover\",\r\n                borderRadius: 40\r\n              }}\r\n            ></img>\r\n          </td>\r\n          <td>{vendor ? vendor.name : \"Vendor Deleted\"}</td>\r\n          <td>{reservation.time}</td>\r\n          <td>{reservation.date}</td>\r\n          <td>{reservation.attandee}</td>\r\n          <td>{Math.floor(Number(reservation.attandee / 5)) + 1}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{reservation.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    const reviewsToRender = reviews.map(review => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === review.restaurant_uid\r\n      );\r\n\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, review.rating);\r\n      return (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              vendor.photo_url\r\n                ? vendor.photo_url\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{vendor.name}</h5>\r\n            <Row className=\"media-stars \">\r\n              {array.map(e => (\r\n                <ion-icon name={e}></ion-icon>\r\n              ))}\r\n            </Row>\r\n            <p>{review.comment}</p>\r\n          </Media.Body>\r\n        </Media>\r\n      );\r\n    });\r\n    const complaintsToRender = complaints.map(complaint => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === complaint.restaurant_uid\r\n      );\r\n\r\n      return (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              vendor.photo_url\r\n                ? vendor.photo_url\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{vendor.name}</h5>\r\n            <Row className=\"ml-1\">\r\n              <h6 className=\"text-muted\">{vendor.title}</h6>\r\n            </Row>\r\n            <p>{complaint.description}</p>\r\n            <p>\r\n              Date of Complaint:{\" \"}\r\n              <small className=\"text-muted\">{complaint.date}</small>\r\n            </p>\r\n          </Media.Body>\r\n        </Media>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Row>\r\n              <Col xs=\"12\" md=\"3\">\r\n                <Card>\r\n                  <Card.Body>\r\n                    <img\r\n                      style={{ width: \"100%\", height: 200, objectFit: \"cover\" }}\r\n                      src={customer.photo}\r\n                    ></img>\r\n                    <hr></hr>\r\n                    <p className=\"h5\">{customer.name}</p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Phone:{\" \"}\r\n                      <span className=\"text-muted\">{customer.number}</span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Email:{\" \"}\r\n                      <span className=\"text-muted\">{customer.email}</span>\r\n                    </p>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mt-3 mt-md-0 mb-5\" xs=\"12\" md=\"9\">\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Customer History</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <h3>Reservations</h3>\r\n                    <Table responsive striped hover>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Image</th>\r\n                          <th>Vendor Name</th>\r\n                          <th>Reservation Time</th>\r\n                          <th>Date of Registration</th>\r\n                          <th>Number of Attendees</th>\r\n                          <th>Number of Tables</th>\r\n                          <th>Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>{reservationsToRender}</tbody>\r\n                    </Table>\r\n\r\n                    <hr></hr>\r\n                    {reviewsToRender.length > 0 ? (\r\n                      <>\r\n                        <h3>Reviews</h3>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                          {reviewsToRender}\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Reviews by this customer</p>\r\n                    )}\r\n                    <hr></hr>\r\n\r\n                    {complaintsToRender.length > 0 ? (\r\n                      <>\r\n                        <h3>Complaints</h3>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                          {complaintsToRender}\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Complaints by this customer</p>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Customer));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Table,\r\n  Badge,\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Modal,\r\n  Spinner\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport \"./DiscountVouchers.css\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass DiscountVouchers extends Component {\r\n  state = {\r\n    code: \"\",\r\n    expDate: \"\",\r\n    maxUses: 0,\r\n    vendor_type: \"Restaurants\",\r\n    show: false,\r\n    selected_uid: \"\",\r\n    isAdding: false,\r\n    percentage: 0\r\n  };\r\n  showModal = () => {\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n  add = async () => {\r\n    this.setState({\r\n      isAdding: true\r\n    });\r\n    await Firebase.addDiscountVoucher(\r\n      this.state.code,\r\n      this.state.expDate,\r\n      this.state.maxUses,\r\n      this.state.vendor_type,\r\n      this.state.percentage\r\n    );\r\n    window.location.reload();\r\n  };\r\n  handler = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  dateHandler = e => {\r\n    const splitDate = e.target.value.split(\"-\");\r\n\r\n    this.setState({\r\n      expDate: splitDate[2] + \"/\" + splitDate[1] + \"/\" + splitDate[0]\r\n    });\r\n  };\r\n  block = async (uid, value) => {\r\n    await Firebase.updateDiscountVoucher(uid, !value);\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.map(e => {\r\n      return <option value={e.uid}>{e.name}</option>;\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Card className=\"my-3\">\r\n              <Card.Header>\r\n                <h1>Discount Vouchers</h1>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form>\r\n                  <legend className=\"h4\">Add Discount Voucher</legend>\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                      <Form.Label>Code</Form.Label>\r\n                      <Form.Control\r\n                        onChange={e => this.handler(\"code\", e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Code\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"expiryDate\">\r\n                      <Form.Label>Expiry Date</Form.Label>\r\n                      <Form.Control\r\n                        onChange={this.dateHandler}\r\n                        type=\"date\"\r\n                        placeholder=\"Expiry Date\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label>Vendor Type</Form.Label>\r\n                    <Form.Control\r\n                      onChange={e =>\r\n                        this.handler(\"vendor_type\", e.target.value)\r\n                      }\r\n                      as=\"select\"\r\n                    >\r\n                      <option value={\"Restaurants\"}>{\"Restaurants\"}</option>\r\n                      <option value={\"Cafes\"}>{\"Cafes\"}</option>\r\n                      <option value={\"Escape Rooms\"}>{\"Escape Rooms\"}</option>\r\n                      <option value={\"Events\"}>{\"Events\"}</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formGridPassword\">\r\n                    <Form.Label>Max Number of Uses</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"Max Uses\"\r\n                      value={this.state.maxUses}\r\n                      onChange={e => {\r\n                        if (e.target.value >= 0) {\r\n                          this.handler(\"maxUses\", e.target.value);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formGridPassword\">\r\n                    <Form.Label>Discount Percentage</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"Discount Percentage\"\r\n                      value={this.state.percentage}\r\n                      onChange={e => {\r\n                        if (e.target.value >= 0 && e.target.value <= 100) {\r\n                          this.handler(\"percentage\", e.target.value);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button\r\n                    onClick={this.add}\r\n                    block\r\n                    variant=\"primary\"\r\n                    type=\"button\"\r\n                  >\r\n                    {this.state.isAdding ? (\r\n                      <Spinner animation=\"border\" variant=\"primary\" />\r\n                    ) : (\r\n                      \"Add New Voucher\"\r\n                    )}\r\n                  </Button>\r\n                </Form>\r\n                <hr></hr>\r\n                <Table striped hover responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Code</th>\r\n                      <th>Times Used</th>\r\n                      <th>Max Uses</th>\r\n                      <th>Expiry Date</th>\r\n                      <th>Vendor Type</th>\r\n                      <th>Discount Percentage</th>\r\n                      <th>Status</th>\r\n                      <th>Change Status</th>\r\n                      <th>Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.props.vouchers.map(element => {\r\n                      const date = new Date();\r\n                      const splitExpDate = element.expDate.split(\"/\");\r\n                      const expDate = new Date(\r\n                        Number(splitExpDate[2]),\r\n                        Number(splitExpDate[1]) - 1,\r\n                        Number(splitExpDate[0])\r\n                      );\r\n                      const condition =\r\n                        element.isBlocked ||\r\n                        Number(element.maxUses) <=\r\n                          Number(element.numberOfUses) ||\r\n                        date > expDate;\r\n                      return (\r\n                        <tr>\r\n                          <td>{element.code}</td>\r\n                          <td>{element.numberOfUses}</td>\r\n\r\n                          <td>{element.maxUses}</td>\r\n                          <td>{element.expDate}</td>\r\n                          <td>{element.vendor_type}</td>\r\n                          <td>{element.percentage}%</td>\r\n                          <td>\r\n                            <Badge variant={condition ? \"danger\" : \"success\"}>\r\n                              {condition ? \"Unavailable\" : \"Available\"}\r\n                            </Badge>\r\n                          </td>\r\n                          <td\r\n                            onClick={() => {\r\n                              this.block(element.uid, element.isBlocked);\r\n                            }}\r\n                          >\r\n                            <ion-icon\r\n                              class={\r\n                                condition\r\n                                  ? \"blockButton text-success\"\r\n                                  : \"blockButton text-danger\"\r\n                              }\r\n                              name={\r\n                                condition\r\n                                  ? \"checkmark-circle-outline\"\r\n                                  : \"close-circle-outline\"\r\n                              }\r\n                            ></ion-icon>\r\n                          </td>\r\n                          <td\r\n                            onClick={async () => {\r\n                              this.setState({\r\n                                selected_uid: element.uid\r\n                              });\r\n                              this.showModal();\r\n                            }}\r\n                          >\r\n                            <ion-icon\r\n                              class=\"blockButton text-danger\"\r\n                              name=\"trash-outline\"\r\n                            ></ion-icon>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n        <Modal\r\n          centered\r\n          show={this.state.show}\r\n          onHide={this.showModal}\r\n          animation={true}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Are you sure you want to delete this voucher?\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={async () => {\r\n                await Firebase.deleteDiscount(this.state.selected_uid);\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              Yes\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={this.showModal}>\r\n              No\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DiscountVouchers);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Carousel,\r\n  Spinner\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\n\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass Slideshow extends Component {\r\n  state = {\r\n    file: null,\r\n    vendor_uid: \"\",\r\n    isAdding: false\r\n  };\r\n  handler = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  add = async () => {\r\n    this.setState({\r\n      isAdding: true\r\n    });\r\n    const fileNameSplit = this.state.file.name.split(\".\");\r\n    const extension = fileNameSplit[fileNameSplit.length - 1];\r\n    await Firebase.addSlideShow(\r\n      this.state.file,\r\n      extension,\r\n      this.state.vendor_uid\r\n    );\r\n    window.location.reload();\r\n  };\r\n  fileHandler = e => {\r\n    this.setState({\r\n      file: e.target.files[0]\r\n    });\r\n  };\r\n  delete = async uid => {\r\n    await Firebase.deleteSlideshow(uid);\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.map(e => {\r\n      return <option value={e.uid}>{e.name}</option>;\r\n    });\r\n    const slideshows = this.props.slideshows.map(e => {\r\n      const vendor = this.props.vendors.find(v => v.uid === e.vendor_uid);\r\n      return (\r\n        <Carousel.Item>\r\n          <img\r\n            style={{\r\n              height: 500,\r\n              objectFit: \"cover\"\r\n            }}\r\n            className=\"d-block w-100\"\r\n            src={e.image_url}\r\n          />\r\n          <Carousel.Caption\r\n            style={{\r\n              background: \"rgba(0,0,0,0.5)\",\r\n              padding: 10,\r\n              borderRadius: 10\r\n            }}\r\n          >\r\n            <h3>{vendor.name}</h3>\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"button\"\r\n              style={{\r\n                margin: 15\r\n              }}\r\n              onClick={() => this.delete(e.uid)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Row className=\"justify-content-center\">\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Slideshow</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    {slideshows.length > 0 ? (\r\n                      <Carousel>{slideshows}</Carousel>\r\n                    ) : (\r\n                      <p>No Slideshows have been added yet</p>\r\n                    )}\r\n                    <hr></hr>\r\n                    <Form>\r\n                      <legend className=\"h4\">Add New Banner</legend>\r\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Vendor</Form.Label>\r\n                        <Form.Control\r\n                          onChange={e =>\r\n                            this.handler(\"vendor_uid\", e.target.value)\r\n                          }\r\n                          as=\"select\"\r\n                        >\r\n                          {vendors}\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"formGridPassword\">\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control\r\n                          onChange={this.fileHandler}\r\n                          type=\"file\"\r\n                          placeholder=\"Image\"\r\n                          accept=\"image/*\"\r\n                        />\r\n                      </Form.Group>\r\n                      <Button\r\n                        onClick={this.add}\r\n                        block\r\n                        variant=\"primary\"\r\n                        type=\"button\"\r\n                      >\r\n                        {this.state.isAdding ? (\r\n                          <Spinner animation=\"border\" variant=\"primary\" />\r\n                        ) : (\r\n                          \"Add Banner\"\r\n                        )}\r\n                      </Button>\r\n                    </Form>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Slideshow));\r\n","import { VendorActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst vendorMapStateToProps = state => {\r\n  return state.VendorReducer;\r\n};\r\nconst vendorMapDispatchToProps = dispatch => {\r\n  return {\r\n    updateLogin: user =>\r\n      dispatch({\r\n        type: VendorActionTypes.VENDOR_UPDATE_LOGIN_STATUS,\r\n        payload: user\r\n      }),\r\n    updateNotifications: notifications =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_NOTIFICATIONS,\r\n        payload: notifications\r\n      }),\r\n    updateReservations: reservations =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_RESERVATIONS,\r\n        payload: reservations\r\n      }),\r\n    updateReviews: reviews =>\r\n      dispatch({ type: VendorActionTypes.UPDATE_REVIEWS, payload: reviews }),\r\n    updateCustomers: customers =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_CUSTOMERS,\r\n        payload: customers\r\n      }),\r\n    updateCategories: categories =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_CATEGORIES,\r\n        payload: categories\r\n      }),\r\n    updateDishes: dishes =>\r\n      dispatch({ type: VendorActionTypes.UPDATE_DISHES, payload: dishes })\r\n  };\r\n};\r\nexport { vendorMapDispatchToProps, vendorMapStateToProps };\r\n","import React, { Component } from \"react\";\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport Logo from \"../../../Images/logo.png\";\r\nimport \"./Login.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  login = async () => {\r\n    const user = await Firebase.loginVendor(\r\n      this.state.email,\r\n      this.state.password\r\n    );\r\n    if (user) {\r\n      this.props.updateLogin(user);\r\n      setVendor(user);\r\n      // this.props.history.push(\"/vendor/home\");\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Login Unsuccessful\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row style={{ minHeight: \"100vh\" }}>\r\n          <Col\r\n            xs=\"12\"\r\n            md=\"6\"\r\n            className=\"d-none d-md-flex\"\r\n            style={{\r\n              background: \"white\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\"\r\n            }}\r\n          >\r\n            <img\r\n              style={{ width: \"50%\", objectFit: \"contain\" }}\r\n              src={Logo}\r\n            ></img>\r\n          </Col>\r\n          <Col\r\n            xs=\"12\"\r\n            md=\"6\"\r\n            style={{\r\n              background: \"#ba0fb4\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\"\r\n            }}\r\n          >\r\n            <Form\r\n              style={{\r\n                background: \"#fff\",\r\n                padding: 20,\r\n                borderRadius: 8,\r\n                width: \"90%\"\r\n              }}\r\n            >\r\n              <legend style={{ marginBottom: 40, textAlign: \"center\" }}>\r\n                Login to your Vendor Account\r\n              </legend>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  name=\"email\"\r\n                  onChange={this.inputHandler}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ marginBottom: 20 }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  name=\"password\"\r\n                  onChange={this.inputHandler}\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                onClick={this.login}\r\n                block\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n              >\r\n                Login\r\n              </Button>\r\n              <Row className=\"align-middle\" style={{ marginTop: 10 }}>\r\n                <Col xs=\"5\">\r\n                  <hr></hr>\r\n                </Col>\r\n                <Col xs=\"2\" className=\"text-center text-muted\">\r\n                  or\r\n                </Col>\r\n                <Col xs=\"5\">\r\n                  <hr></hr>\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ marginTop: 20 }}>\r\n                <Col>\r\n                  <Button block className=\"facebook bg-primary \" type=\"button\">\r\n                    Facebook Login\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Button block className=\"google bg-success\" type=\"button\">\r\n                    Google Login\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <hr style={{ marginTop: 30, marginBottom: 20 }}></hr>\r\n              <p className=\"text-center\">\r\n                Don't have an account?{\" \"}\r\n                <Link to=\"/vendor/register\">Click here to Register</Link>\r\n              </p>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(withRouter(Login));\r\n","import React, { Component } from \"react\";\r\nimport \"./VendorSidebar.css\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Badge, Dropdown } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../Config/VendorMapping\";\r\nimport Firebase from \"../../Firebase/Firebase\";\r\nclass VendorSidebar extends Component {\r\n  updateNotifications = async (notification_key, link) => {\r\n    await Firebase.updateNotificationSeen(\r\n      this.props.vendor.uid,\r\n      notification_key\r\n    );\r\n    this.props.history.push(link);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top bg-white\">\r\n          <Link className=\"navbar-brand\" to=\"/vendor/\">\r\n            <img style={{ width: \"80px\" }} src={Logo}></img>\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarCollapse\"\r\n            aria-controls=\"navbarCollapse\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon \"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n            <ul\r\n              className=\"navbar-nav mr-auto vendor-sidebar h-100 bg-white\"\r\n              id=\"navAccordion\"\r\n            >\r\n              <li className=\"nav-item active\">\r\n                <div className=\"d-none d-md-flex usaneTitle\">\r\n                  <Link\r\n                    className=\"d-flex justify-content-center align-items-center\"\r\n                    to=\"/vendor/\"\r\n                  >\r\n                    <img style={{ width: \"80%\" }} src={Logo}></img>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"mx-3\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/vendor/\" className=\"nav-link nav-link-custom \">\r\n                      <span className=\"ml-2\">Dashboard</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/menu\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Menu</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/upcoming\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Upcoming Reservations</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/past\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Past Reservations</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/reviews\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Reviews & Ratings</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/profile\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Profile Setting</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/vendor/\" className=\"nav-link nav-link-custom \">\r\n                      <span className=\"ml-2\">Logout</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-inline ml-auto mt-2 mt-md-0\"></form>\r\n            <div className=\"d-flex align-items-center p-2\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle\r\n                  style={{ width: 35 }}\r\n                  variant=\"link\"\r\n                  id=\"dropdown-basic\"\r\n                >\r\n                  <img\r\n                    style={{\r\n                      width: \"35px\",\r\n                      objectFit: \"cover\",\r\n                      height: \"35px\",\r\n                      borderRadius: \"35px\",\r\n                      border: \"solid 1px #ba0fb4\"\r\n                    }}\r\n                    src={\r\n                      this.props.vendor.photo_url\r\n                        ? this.props.vendor.photo_url\r\n                        : \"https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg-1024x683.jpg\"\r\n                    }\r\n                  ></img>\r\n                  <Badge\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 2,\r\n                      left: 28,\r\n                      height: 14,\r\n                      width: 14,\r\n                      borderRadius: 14,\r\n                      background: \"#ba0fb4\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bold\"\r\n                    }}\r\n                    pill\r\n                  >\r\n                    {this.props.notifications.length}\r\n                  </Badge>\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  {this.props.notifications.length === 0 ? (\r\n                    <Dropdown.Item>No notifications</Dropdown.Item>\r\n                  ) : (\r\n                    this.props.notifications.map(element => (\r\n                      <Dropdown.Item\r\n                        onClick={async () =>\r\n                          await this.updateNotifications(\r\n                            element.notification_key,\r\n                            \"/vendor/\"\r\n                          )\r\n                        }\r\n                      >\r\n                        {element.message}\r\n                      </Dropdown.Item>\r\n                    ))\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <main className=\"custom-content-wrapper\">\r\n          <div className=\"container\">{this.props.children}</div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(\r\n  connect(vendorMapStateToProps, vendorMapDispatchToProps)(VendorSidebar)\r\n);\r\n","const getMonth = month => {\r\n  switch (month) {\r\n    case 0:\r\n      return \"Jan\";\r\n    case 1:\r\n      return \"Feb\";\r\n    case 2:\r\n      return \"Mar\";\r\n    case 3:\r\n      return \"Apr\";\r\n    case 4:\r\n      return \"May\";\r\n    case 5:\r\n      return \"Jun\";\r\n    case 6:\r\n      return \"Jul\";\r\n    case 7:\r\n      return \"Aug\";\r\n    case 8:\r\n      return \"Sep\";\r\n    case 9:\r\n      return \"Oct\";\r\n    case 10:\r\n      return \"Nov\";\r\n    case 11:\r\n      return \"Dec\";\r\n  }\r\n};\r\nexport default getMonth;\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Card,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Form,\r\n  Table\r\n} from \"react-bootstrap\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label\r\n} from \"recharts\";\r\nimport \"./Home.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapDispatchToProps,\r\n  vendorMapStateToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport getMonth from \"../../../Config/Date\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\nclass Home extends Component {\r\n  state = {\r\n    available: 0\r\n  };\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      available: this.props.vendor.instant_data\r\n        ? this.props.vendor.instant_data.available\r\n        : 0\r\n    });\r\n  };\r\n  updateRestrictOrder = async () => {\r\n    await Firebase.restrictOrder(\r\n      !this.props.vendor.is_restrict_order,\r\n      this.props.vendor.uid\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n  };\r\n  updateClose = async () => {\r\n    await Firebase.updateReservationClose(\r\n      this.props.vendor.uid,\r\n      !this.props.vendor.close\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n  };\r\n  availableChangeHandler = e => {\r\n    const date = new Date();\r\n    const reservationsForToday = this.props.reservations.filter(\r\n      e =>\r\n        e.date ===\r\n        getMonth(date.getMonth()) +\r\n          \" \" +\r\n          date.getDate() +\r\n          \", \" +\r\n          date.getFullYear()\r\n    );\r\n    if (e.target.value < reservationsForToday.length) {\r\n      alert(\r\n        \"You can't set available reservations to less than than \" +\r\n          reservationsForToday.length\r\n      );\r\n      this.setState({\r\n        available: this.props.vendor.instant_data\r\n          ? this.props.vendor.instant_data.available\r\n          : 0\r\n      });\r\n    } else {\r\n      this.setState({\r\n        available: e.target.value\r\n      });\r\n    }\r\n  };\r\n  submitAvailableChanges = async () => {\r\n    await Firebase.updateAvailable(this.props.vendor.uid, this.state.available);\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n  };\r\n  render() {\r\n    const date = new Date();\r\n    const todayReservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrowReservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow2Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow3Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow4Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow5Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow6Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    const data = [\r\n      todayReservations,\r\n      tommorrowReservations,\r\n      tommorrow2Reservations,\r\n      tommorrow3Reservations,\r\n      tommorrow4Reservations,\r\n      tommorrow5Reservations,\r\n      tommorrow6Reservations\r\n    ];\r\n    const ajKiDate = new Date();\r\n    const ajKiReservations = this.props.reservations.filter(e => {\r\n      console.log(e);\r\n      return (\r\n        e.date ===\r\n        getMonth(ajKiDate.getMonth()) +\r\n          \" \" +\r\n          ajKiDate.getDate() +\r\n          \", \" +\r\n          ajKiDate.getFullYear()\r\n      );\r\n    });\r\n    const reservationsToRender = ajKiReservations.map(e => {\r\n      const customer = this.props.customers.find(c => c.uid === e.customer_uid);\r\n      return (\r\n        <tr>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 50,\r\n                height: 50,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={\r\n                customer && customer.photo_url\r\n                  ? customer.photo_url\r\n                  : \"https://img.pngio.com/profile-icon-png-image-free-download-searchpngcom-profile-icon-png-673_673.png\"\r\n              }\r\n            ></img>\r\n          </td>\r\n          <td colSpan=\"4\">\r\n            <strong>Customer Name: </strong>{\" \"}\r\n            {customer.name ? customer.name : \"Customer has been deleted\"}\r\n            <br></br>\r\n            <strong>Reservation Time: </strong> {e.time}\r\n            <br></br>\r\n            <strong>Number of Attendees: </strong> {e.attandee}\r\n            <br></br>\r\n            <strong>Number of Tables: </strong>{\" \"}\r\n            {Math.floor(Number(e.attandee / 5)) + 1}\r\n            <br></br>\r\n            <strong>Status of Reservation: </strong> {e.status}\r\n            <br></br>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Dashboard</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <h3 className=\"mt-2\">Edit Reservations</h3>\r\n                    {this.props.vendor.category === \"Restaurants\" ||\r\n                    this.props.vendor.category === \"Cafes\" ? (\r\n                      <>\r\n                        <p>Number of available Reservations</p>\r\n                        <InputGroup className=\"mt-3\">\r\n                          <FormControl\r\n                            placeholder=\"Number available reservations for today\"\r\n                            type=\"number\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            value={this.state.available}\r\n                            onChange={this.availableChangeHandler}\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              onClick={this.submitAvailableChanges}\r\n                              variant=\"primary\"\r\n                            >\r\n                              Confirm Change\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                      </>\r\n                    ) : null}\r\n                    <Form.Check\r\n                      type=\"switch\"\r\n                      checked={this.props.vendor.is_restrict_order}\r\n                      onClick={this.updateRestrictOrder}\r\n                      className=\"mt-2 ml-1\"\r\n                      id=\"custom-switch\"\r\n                      label=\"Stop Orders\"\r\n                    />\r\n                    <Form.Check\r\n                      type=\"switch\"\r\n                      checked={this.props.vendor.close}\r\n                      onClick={this.updateClose}\r\n                      className=\"mt-2 mb-4 ml-1\"\r\n                      id=\"another-switch\"\r\n                      label=\"Stop Reservations\"\r\n                    />\r\n                    <hr></hr>\r\n                    <h3 className=\"mt-2\">Upcoming Reservations</h3>\r\n                    <div className=\"d-flex justify-content-center align-items-center p-5\">\r\n                      <BarChart width={992} height={300} data={data}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\"></XAxis>\r\n                        <YAxis></YAxis>\r\n                        <Tooltip />\r\n                        <Bar dataKey=\"reservations\" fill=\"#82034d\" />\r\n                      </BarChart>\r\n                    </div>\r\n                    <hr></hr>\r\n                    <h3 className=\"mt-2\">Today's Reservations</h3>\r\n\r\n                    <Table striped hover responsive>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Customer Image</th>\r\n                          <th colSpan=\"4\">Description</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {reservationsToRender.length > 0 ? (\r\n                          reservationsToRender\r\n                        ) : (\r\n                          <strong>No Reservations For Today</strong>\r\n                        )}\r\n                      </tbody>\r\n                    </Table>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(vendorMapStateToProps, vendorMapDispatchToProps)(Home);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Accordion,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\n\r\nclass UpcomingReservations extends Component {\r\n  render() {\r\n    const date = new Date();\r\n    const yesterday = new Date().setDate(date.getDate() - 1);\r\n    const reservations = this.props.reservations.filter(element => {\r\n      const elementDate = new Date(element.date);\r\n      return elementDate > yesterday;\r\n    });\r\n\r\n    const reservationsToRender = {};\r\n    reservations.forEach(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      if (reservationsToRender[element.date]) {\r\n        reservationsToRender[element.date].arr.push({ ...element, customer });\r\n      } else {\r\n        const arr = [{ customer, ...element }];\r\n        reservationsToRender[element.date] = { arr };\r\n      }\r\n    });\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Upcoming Reservations</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Accordion>\r\n                      {Object.keys(reservationsToRender).map((key, index) => {\r\n                        const reserve = reservationsToRender[key];\r\n                        return (\r\n                          <Card>\r\n                            <Card.Header>\r\n                              <Accordion.Toggle\r\n                                as={Button}\r\n                                eventKey={\"\" + index}\r\n                              >\r\n                                {key} Upcoming Reservations\r\n                              </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey={\"\" + index}>\r\n                              <Card.Body>\r\n                                <Table striped hover responsive>\r\n                                  <thead>\r\n                                    <tr>\r\n                                      <th>Customer Image</th>\r\n                                      <th colSpan=\"4\">Description</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {reserve.arr.map(element => {\r\n                                      return (\r\n                                        <tr>\r\n                                          <td>\r\n                                            <img\r\n                                              style={{\r\n                                                width: 50,\r\n                                                height: 50,\r\n                                                borderRadius: 50,\r\n                                                objectFit: \"cover\"\r\n                                              }}\r\n                                              src={\r\n                                                element.customer.photo_url\r\n                                                  ? element.customer.photo_url\r\n                                                  : \"https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg-1024x683.jpg\"\r\n                                              }\r\n                                            ></img>\r\n                                          </td>\r\n                                          <td colSpan=\"4\">\r\n                                            <strong>Customer Name: </strong>{\" \"}\r\n                                            {element.customer.name}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Reservation Time:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.time}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Number of Attendees:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.attandee}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Number of Tables:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {Math.floor(\r\n                                              Number(element.attandee / 5)\r\n                                            ) + 1}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Status of Reservation:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.status}\r\n                                            <br></br>\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })}\r\n                                  </tbody>\r\n                                </Table>\r\n                              </Card.Body>\r\n                            </Accordion.Collapse>\r\n                          </Card>\r\n                        );\r\n                      })}\r\n                    </Accordion>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(UpcomingReservations);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Accordion,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\nclass PreviousReservations extends Component {\r\n  render() {\r\n    const date = new Date();\r\n    const reservations = this.props.reservations.filter(element => {\r\n      const elementDate = new Date(element.date);\r\n      return elementDate < date;\r\n    });\r\n\r\n    const reservationsToRender = {};\r\n    reservations.forEach(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      if (reservationsToRender[element.date]) {\r\n        reservationsToRender[element.date].arr.push({ ...element, customer });\r\n      } else {\r\n        const arr = [{ customer, ...element }];\r\n        reservationsToRender[element.date] = { arr };\r\n      }\r\n    });\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Previous Reservations</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Accordion>\r\n                      {Object.keys(reservationsToRender).map((key, index) => {\r\n                        const reserve = reservationsToRender[key];\r\n                        return (\r\n                          <Card>\r\n                            <Card.Header>\r\n                              <Accordion.Toggle\r\n                                as={Button}\r\n                                eventKey={\"\" + index}\r\n                              >\r\n                                {key} Upcoming Reservations\r\n                              </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey={\"\" + index}>\r\n                              <Card.Body>\r\n                                <Table striped hover responsive>\r\n                                  <thead>\r\n                                    <tr>\r\n                                      <th>Customer Image</th>\r\n                                      <th colSpan=\"4\">Description</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {reserve.arr.map(element => {\r\n                                      return (\r\n                                        <tr>\r\n                                          <td>\r\n                                            <img\r\n                                              style={{\r\n                                                width: 50,\r\n                                                height: 50,\r\n                                                borderRadius: 50,\r\n                                                objectFit: \"cover\"\r\n                                              }}\r\n                                              src={\r\n                                                element.customer.photo_url\r\n                                                  ? element.customer.photo_url\r\n                                                  : \"https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg-1024x683.jpg\"\r\n                                              }\r\n                                            ></img>\r\n                                          </td>\r\n                                          <td colSpan=\"4\">\r\n                                            <strong>Customer Name: </strong>{\" \"}\r\n                                            {element.customer.name}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Reservation Time:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.time}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Number of Attendees:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.attandee}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Number of Tables:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {Math.floor(\r\n                                              Number(element.attandee / 5)\r\n                                            ) + 1}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Status of Reservation:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.status}\r\n                                            <br></br>\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })}\r\n                                  </tbody>\r\n                                </Table>\r\n                              </Card.Body>\r\n                            </Accordion.Collapse>\r\n                          </Card>\r\n                        );\r\n                      })}\r\n                    </Accordion>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(PreviousReservations);\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Badge,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Form,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\n\r\nclass VendorVerifications extends Component {\r\n  state = {\r\n    modalShow: false,\r\n    selectedVendor: \"\",\r\n    procFee: 0,\r\n    date: new Date(),\r\n    name: \"\"\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(element => {\r\n      const condition = element.name\r\n        .toLowerCase()\r\n        .includes(this.state.name.toLowerCase(), 0);\r\n      return condition;\r\n    });\r\n    const unverified = vendors.filter(element => !element.is_verified);\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Row className=\"justify-content-center\">\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Vendors Verification</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Form.Row style={{ paddingTop: 10 }}>\r\n                      <Form.Group as={Col} controlId=\"formGridCity\">\r\n                        <Form.Control\r\n                          onChange={e =>\r\n                            this.setState({ name: e.target.value })\r\n                          }\r\n                          placeholder=\"Search\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Table striped hover responsive>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Image</th>\r\n                          <th>Name</th>\r\n                          <th>Email</th>\r\n                          <th>Reservation Price</th>\r\n                          <th>Status</th>\r\n                          <th></th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {unverified.map(element => {\r\n                          return (\r\n                            <>\r\n                              <tr>\r\n                                <td\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <img\r\n                                    style={{\r\n                                      width: 40,\r\n                                      height: 40,\r\n                                      borderRadius: 50,\r\n                                      objectFit: \"cover\"\r\n                                    }}\r\n                                    src={\r\n                                      element.photo_url\r\n                                        ? element.photo_url\r\n                                        : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                                    }\r\n                                  ></img>\r\n                                </td>\r\n                                <td>{element.name}</td>\r\n                                <td>{element.email}</td>\r\n                                <td>{element.reservation_fee}</td>\r\n                                <td>\r\n                                  {element.is_verified ? (\r\n                                    <Badge variant=\"success\">Verified</Badge>\r\n                                  ) : (\r\n                                    <Badge variant=\"danger\">Unerified</Badge>\r\n                                  )}\r\n                                </td>\r\n                                <td>\r\n                                  <Button\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        modalShow: true,\r\n                                        selectedVendor: element.uid\r\n                                      });\r\n                                    }}\r\n                                    variant=\"success\"\r\n                                    size=\"sm\"\r\n                                  >\r\n                                    Verify\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </Table>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>{\" \"}\r\n          <Footer></Footer>\r\n        </Header>\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Processing Fee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  Processing Fee\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                type=\"number\"\r\n                onChange={e => {\r\n                  this.setState({\r\n                    newProFee: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={async () => {\r\n                await Firebase.updateProcessingFeeAndVerify(\r\n                  this.state.newProFee,\r\n                  this.state.selectedVendor\r\n                );\r\n                this.setState({ modalShow: false });\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.setState({ modalShow: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(VendorVerifications)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport { Container, Row, Col, Card, Media } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\n\r\nclass Reviews extends Component {\r\n  render() {\r\n    const reviewsToRender = this.props.reviews.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, element.rating);\r\n      return (\r\n        <>\r\n          <Media as=\"li\">\r\n            <img\r\n              width={64}\r\n              height={64}\r\n              className=\"mr-5\"\r\n              style={{ objectFit: \"cover\", borderRadius: \"50%\" }}\r\n              src={\r\n                customer.photo_url\r\n                  ? customer.photo_url\r\n                  : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n              }\r\n              alt=\"Generic placeholder\"\r\n            />\r\n            <Media.Body>\r\n              <h5 style={{ fontWeight: \"bold\" }}>{customer.name}</h5>\r\n              <Row className=\"media-stars mb-3\">\r\n                {array.map(star => {\r\n                  return <ion-icon name={star}></ion-icon>;\r\n                })}\r\n              </Row>\r\n              <p>{element.comment}</p>\r\n            </Media.Body>\r\n          </Media>\r\n          <hr></hr>\r\n        </>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Reviews & Ratings</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <ul className=\"list-unstyled mt-5\">\r\n                      {reviewsToRender.length > 0 ? (\r\n                        reviewsToRender\r\n                      ) : (\r\n                        <h3>No reviews for you so far</h3>\r\n                      )}\r\n                    </ul>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(Reviews);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport \"./Menu.css\";\r\nexport default class Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Menu</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Row>\r\n                      <Col xs=\"12\" md=\"6\">\r\n                        <Card>\r\n                          <Card.Header draggable>\r\n                            <h4>Menu Categories</h4>\r\n                          </Card.Header>\r\n                          <Card.Body>\r\n                            <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                              <Col xs=\"8\">Desert</Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"create-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"close-circle-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                            </Row>\r\n                            <hr className=\"mb-4\"></hr>\r\n                            <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                              <Col xs=\"8\">Desert</Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"create-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"close-circle-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                            </Row>\r\n                            <hr className=\"mb-4\"></hr>\r\n                            <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                              <Col xs=\"8\">Desert</Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"create-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"close-circle-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                            </Row>\r\n                            <hr className=\"mb-4\"></hr>\r\n                            <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                              <Col xs=\"8\">Desert</Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"create-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"close-circle-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                            </Row>\r\n                            <hr className=\"mb-4\"></hr>\r\n                            <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                              <Col xs=\"8\">Desert</Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"create-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"close-circle-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                            </Row>\r\n                            <hr className=\"mb-4\"></hr>\r\n                            <div className=\"menu d-flex justify-content-center align-items-center\">\r\n                              <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n                            </div>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </Col>\r\n                      <Col xs=\"12\" md=\"6\">\r\n                        <Card>\r\n                          <Card.Header draggable>\r\n                            <h4>Menu Dishes</h4>\r\n                          </Card.Header>\r\n                          <Card.Body>\r\n                            <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                              <Col xs=\"8\">Cake</Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"create-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"close-circle-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                            </Row>\r\n                            <hr className=\"mb-4\"></hr>\r\n                            <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                              <Col xs=\"8\">Cake</Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"create-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"close-circle-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                            </Row>\r\n                            <hr className=\"mb-4\"></hr>\r\n                            <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                              <Col xs=\"8\">Cake</Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"create-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"close-circle-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                            </Row>\r\n                            <hr className=\"mb-4\"></hr>\r\n                            <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                              <Col xs=\"8\">Cake</Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"create-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"close-circle-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                            </Row>\r\n                            <hr className=\"mb-4\"></hr>\r\n                            <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                              <Col xs=\"8\">Cake</Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"create-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                              <Col xs=\"2\">\r\n                                <ion-icon\r\n                                  className=\"menu-icon\"\r\n                                  name=\"close-circle-outline\"\r\n                                ></ion-icon>\r\n                              </Col>\r\n                            </Row>\r\n                            <hr className=\"mb-4\"></hr>\r\n                            <div className=\"menu d-flex justify-content-center align-items-center\">\r\n                              <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n                            </div>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport {\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Spinner\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass EditProfile extends Component {\r\n  state = {\r\n    phone: \"\",\r\n    reservationFee: 0,\r\n    location: {\r\n      lat: 0,\r\n      long: 0\r\n    },\r\n    bankName: \"\",\r\n    accountName: \"\",\r\n    accountNumber: \"\",\r\n    address: \"\",\r\n    imageUploading: false,\r\n    vendorUpdating: false,\r\n    name: \"\"\r\n  };\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      phone: this.props.vendor.number,\r\n      reservationFee: this.props.vendor.reservation_fee,\r\n      location: {\r\n        lat: this.props.vendor.llocation.lat,\r\n        long: this.props.vendor.llocation.llong\r\n      },\r\n      bankName: this.props.vendor.bank_details.bank_name,\r\n      accountName: this.props.vendor.bank_details.account_name,\r\n      accountNumber: this.props.vendor.bank_details.accountNumber,\r\n      address: this.props.vendor.address,\r\n      name: this.props.vendor.name\r\n    });\r\n  };\r\n  updateImage = async e => {\r\n    this.setState({\r\n      imageUploading: true\r\n    });\r\n    await Firebase.updateVendorImage(e.target.files[0], this.props.vendor.uid);\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    this.setState({\r\n      imageUploading: false\r\n    });\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  submit = async () => {\r\n    this.setState({\r\n      imageUploading: true\r\n    });\r\n    await Firebase.updateVendor(\r\n      this.state.name,\r\n      this.state.phone,\r\n      this.state.reservationFee,\r\n      this.state.location.lat,\r\n      this.state.location.long,\r\n      this.state.accountNumber,\r\n      this.state.accountName,\r\n      this.state.bankName,\r\n      this.props.vendor.uid\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    this.setState({\r\n      imageUploading: false\r\n    });\r\n    this.props.history.push(\"/vendor/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Profile Setting</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                      <img\r\n                        style={{\r\n                          width: \"200px\",\r\n                          height: \"200px\",\r\n                          objectFit: \"cover\",\r\n                          borderRadius: \"50%\"\r\n                        }}\r\n                        src={\r\n                          this.props.vendor.photo_url\r\n                            ? this.props.vendor.photo_url\r\n                            : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                        }\r\n                      ></img>\r\n                      {this.state.imageUploading ? (\r\n                        <Spinner\r\n                          style={{ width: 30, height: 30 }}\r\n                          animation=\"border\"\r\n                          variant=\"dark\"\r\n                          className=\"mt-5\"\r\n                        />\r\n                      ) : (\r\n                        <Form.Group\r\n                          className=\"mt-5\"\r\n                          controlId=\"formGridAddress1\"\r\n                        >\r\n                          <Form.Control\r\n                            className=\"btn btn-primary\"\r\n                            accept=\"image/*\"\r\n                            onChange={this.updateImage}\r\n                            type=\"file\"\r\n                          />\r\n                        </Form.Group>\r\n                      )}\r\n                    </div>\r\n                    <hr className=\"my-5\"></hr>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                      <Form.Label>Vendor Name</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Vendor Name\"\r\n                        value={this.state.name}\r\n                        name=\"name\"\r\n                        onChange={this.inputHandler}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>Vendor Type</Form.Label>\r\n                      <Form.Control disabled as=\"select\">\r\n                        <option\r\n                          selected={\r\n                            this.props.vendor.category === \"Restaurants\"\r\n                          }\r\n                          value=\"Restaurant\"\r\n                        >\r\n                          Restaurant\r\n                        </option>\r\n                        <option\r\n                          selected={this.props.vendor.category === \"Cafes\"}\r\n                          value=\"Cafe\"\r\n                        >\r\n                          Cafe\r\n                        </option>\r\n                        <option\r\n                          selected={\r\n                            this.props.vendor.category === \"Escape Rooms\"\r\n                          }\r\n                          value=\"Escape Room\"\r\n                        >\r\n                          Escape Room\r\n                        </option>\r\n                        <option\r\n                          selected={this.props.vendor.category === \"Events\"}\r\n                          value=\"Event\"\r\n                        >\r\n                          Event\r\n                        </option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                      <Form.Label>Branch</Form.Label>\r\n                      <Form.Control disabled as=\"select\">\r\n                        <option\r\n                          selected={this.props.vendor.branch === \"Main\"}\r\n                          value=\"Main\"\r\n                        >\r\n                          Main\r\n                        </option>\r\n                        <option\r\n                          selected={this.props.vendor.branch === \"Sub\"}\r\n                          value=\"Sub\"\r\n                        >\r\n                          Sub\r\n                        </option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <hr className=\"my-5\"></hr>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                      <Form.Label>Email address</Form.Label>\r\n                      <Form.Control\r\n                        value={this.props.vendor.email}\r\n                        disabled\r\n                        type=\"email\"\r\n                        placeholder=\"Enter your Email Address\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                      <Form.Label>Phone Number</Form.Label>\r\n                      <Form.Control\r\n                        value={this.state.phone}\r\n                        name=\"phone\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your Phone\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                      <Form.Label>Reservation Fee</Form.Label>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>EGP</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                          value={this.state.reservationFee}\r\n                          name=\"reservationFee\"\r\n                          onChange={this.inputHandler}\r\n                          type=\"number\"\r\n                          aria-label=\"Amount (to the nearest dollar)\"\r\n                        />\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n                    <hr className=\"my-5\"></hr>\r\n                    <h3>Location</h3>\r\n                    <hr className=\"my-5\"></hr>\r\n                    <h3 className=\"mb-5\">Bank Details</h3>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                      <Form.Label>Bank Name</Form.Label>\r\n                      <Form.Control\r\n                        value={this.state.bankName}\r\n                        name=\"bankName\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your Bank Name\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                      <Form.Label>Account Name</Form.Label>\r\n                      <Form.Control\r\n                        value={this.state.accountName}\r\n                        name=\"accountName\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your Account Name\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                      <Form.Label>Account Number</Form.Label>\r\n                      <Form.Control\r\n                        value={this.state.accountNumber}\r\n                        name=\"phone\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"number\"\r\n                        placeholder=\"Enter your Account Number\"\r\n                      />\r\n                    </Form.Group>\r\n                    <hr className=\"my-5\"></hr>\r\n                    {this.state.vendorUpdating ? (\r\n                      <Spinner\r\n                        style={{ width: 30, height: 30 }}\r\n                        animation=\"border\"\r\n                        variant=\"dark\"\r\n                        className=\"mt-5\"\r\n                      />\r\n                    ) : (\r\n                      <Button\r\n                        onClick={this.submit}\r\n                        variant=\"primary\"\r\n                        size=\"lg\"\r\n                        block\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(withRouter(EditProfile));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapDispatchToProps,\r\n  vendorMapStateToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\nclass Registration extends Component {\r\n  state = {\r\n    image: null,\r\n    name: \"\",\r\n    vendorType: \"Restaurants\",\r\n    branch: \"Main\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    reservationFee: 0,\r\n    location: {\r\n      lat: 0,\r\n      long: 0\r\n    },\r\n    bankName: \"\",\r\n    accountName: \"\",\r\n    accountNumber: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    address: \"\"\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  fileInputHandler = e => {\r\n    console.log(e.target.files[0]);\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0]\r\n    });\r\n  };\r\n  register = async () => {\r\n    const user = await Firebase.createVendor(\r\n      this.state.email,\r\n      this.state.password,\r\n      this.state.address,\r\n      this.state.accountNumber,\r\n      this.state.accountName,\r\n      this.state.bankName,\r\n      this.state.branch,\r\n      this.state.vendorType,\r\n      this.state.location.lat,\r\n      this.state.location.long,\r\n      this.state.name,\r\n      this.state.phone,\r\n      this.state.image,\r\n      this.state.image.name.split(\".\")[\r\n        this.state.image.name.split(\".\").length - 1\r\n      ],\r\n      this.state.reservationFee\r\n    );\r\n    if (user) {\r\n      alert(\"Account has been registered\");\r\n      const vendor = await Firebase.loginVendor(\r\n        this.state.email,\r\n        this.state.password\r\n      );\r\n      this.props.updateLogin(vendor);\r\n      setVendor(vendor);\r\n      this.props.history.push(\"/vendor/\");\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Account could not be registered\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col\r\n              xs=\"12\"\r\n              style={{\r\n                padding: 50,\r\n                paddingTop: \"10vh\",\r\n                paddingBottom: \"10vh\",\r\n                backgroundColor: \"#ba0fb4\"\r\n              }}\r\n            >\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Vendor Registration</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <img\r\n                      style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        objectFit: \"cover\",\r\n                        borderRadius: \"50%\"\r\n                      }}\r\n                      src={\r\n                        this.state.image\r\n                          ? URL.createObjectURL(this.state.image)\r\n                          : \"https://img.pngio.com/profile-icon-png-image-free-download-searchpngcom-profile-icon-png-673_673.png\"\r\n                      }\r\n                    ></img>\r\n                    <Form.Group className=\"mt-5\" controlId=\"formGridAddress1\">\r\n                      <Form.Control\r\n                        className=\"btn btn-primary\"\r\n                        name=\"image\"\r\n                        accept=\"image/*\"\r\n                        onChange={this.fileInputHandler}\r\n                        type=\"file\"\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Form.Group controlId=\"formGroupEmail\">\r\n                    <Form.Label>Vendor Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"name\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Vendor Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label>Vendor Type</Form.Label>\r\n                    <Form.Control\r\n                      name=\"vendorType\"\r\n                      onChange={this.inputHandler}\r\n                      as=\"select\"\r\n                    >\r\n                      <option value=\"Restaurants\">Restaurant</option>\r\n                      <option value=\"Cafes\">Cafe</option>\r\n                      <option value=\"Escape Rooms\">Escape Room</option>\r\n                      <option value=\"Events\">Event</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                    <Form.Label>Branch</Form.Label>\r\n                    <Form.Control\r\n                      name=\"branch\"\r\n                      onChange={this.inputHandler}\r\n                      as=\"select\"\r\n                    >\r\n                      <option value=\"Main\">Main</option>\r\n                      <option value=\"Sub\">Sub</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      name=\"email\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"email\"\r\n                      placeholder=\"Enter your Email Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                      name=\"address\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                    <Form.Control\r\n                      name=\"phone\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Phone\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Reservation Fee</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>EGP</InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl\r\n                        name=\"reservationFee\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"number\"\r\n                        aria-label=\"Amount (to the nearest dollar)\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <p>Location</p>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <h3 className=\"mb-5\">Bank Details</h3>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Bank Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"bankName\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Bank Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput7\">\r\n                    <Form.Label>Account Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"accountName\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Account Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput6\">\r\n                    <Form.Label>Account Number</Form.Label>\r\n                    <Form.Control\r\n                      name=\"accountNumber\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"number\"\r\n                      placeholder=\"Enter your Account Number\"\r\n                    />\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n\r\n                  <h3 className=\"mb-5\">Change Password</h3>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput4\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      name=\"password\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"password\"\r\n                      placeholder=\"Enter your Password\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput5\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                      name=\"confirmPassword\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"password\"\r\n                      placeholder=\"Renter your Password\"\r\n                    />\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Button\r\n                    onClick={this.register}\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    block\r\n                  >\r\n                    Submit Registration\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(withRouter(Registration));\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../../Images/logo.mp4\";\r\nexport default class AccountUnverified extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ height: \"100vh\", background: \"white\" }}\r\n        className=\"flex-column d-flex align-items-center justify-content-center w-100\"\r\n      >\r\n        <video src={Logo} style={{ width: \"50%\" }} muted autoPlay></video>\r\n        <p className=\"text-muted\">\r\n          Please wait while your account is being verified by our\r\n          administrators.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport VendorLogin from \"../Pages/Vendor/Login/Login\";\r\nimport VendorHome from \"../Pages/Vendor/Home/Home\";\r\nimport UpcomingReservations from \"../Pages/Vendor/UpcomingReservations/UpcomingReservations\";\r\nimport PreviousReservations from \"../Pages/Vendor/PreviousReservations/PreviousReservations\";\r\nimport Reviews from \"../Pages/Vendor/Reviews/Reviews\";\r\nimport Menu from \"../Pages/Vendor/Menu/Menu\";\r\nimport EditProfile from \"../Pages/Vendor/EditProfile/EditProfile\";\r\nimport Registration from \"../Pages/Vendor/Registration/Registration\";\r\nimport { connect } from \"react-redux\";\r\nimport Logo from \"../Images/logo.mp4\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../Config/VendorMapping\";\r\nimport Firebase from \"../Firebase/Firebase\";\r\nimport { getVendor, setVendor } from \"../Config/localStorage\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport AccountUnverified from \"../Pages/Vendor/AccountUnverified/AccountUnverified\";\r\nclass VendorRouter extends Component {\r\n  state = { loading: true };\r\n  componentDidMount = async () => {\r\n    const vendorInitial = getVendor();\r\n    let vendor = await Firebase.getVendor(vendorInitial.uid);\r\n\r\n    if (vendor.is_verified !== vendorInitial.is_verified) {\r\n      setVendor(vendor);\r\n      window.location.reload();\r\n    } else {\r\n      if (vendor) {\r\n        const dishes = await Firebase.getDishesVendor(vendor.uid);\r\n        this.props.updateDishes(dishes);\r\n        const reviews = await Firebase.getReviews(vendor.uid);\r\n        this.props.updateReviews(reviews);\r\n        const categories = await Firebase.getCategories();\r\n        this.props.updateCategories(categories);\r\n        const customers = await Firebase.getCustomers();\r\n        this.props.updateCustomers(customers);\r\n        const notifications = await Firebase.getNotificationsVendor(vendor.uid);\r\n        this.props.updateNotifications(notifications);\r\n        const reservations = await Firebase.getReservationsVendor(vendor.uid);\r\n        this.props.updateReservations(reservations);\r\n\r\n        Firebase.vendorListenToDishes(snapshot => {\r\n          const updatedValue = snapshot.val();\r\n          let newDishes = [...this.props.dishes];\r\n          const foundIndex = newDishes.findIndex(\r\n            e => e.dish_key == updatedValue.dish_key\r\n          );\r\n          if (foundIndex >= 0) {\r\n            newDishes[foundIndex] = updatedValue;\r\n          } else {\r\n            if (updatedValue.uid === vendor.uid) {\r\n              newDishes.push(updatedValue);\r\n            }\r\n          }\r\n          this.props.updateDishes(newDishes);\r\n        });\r\n        Firebase.vendorListenToCategories(snapshot => {\r\n          const updatedValue = snapshot.val();\r\n          let newCategories = [...this.props.categories];\r\n          const foundIndex = newCategories.findIndex(\r\n            e => e.category_key == updatedValue.category_key\r\n          );\r\n          if (foundIndex >= 0) {\r\n            newCategories[foundIndex] = updatedValue;\r\n          } else {\r\n            newCategories.push(updatedValue);\r\n          }\r\n          this.props.updateCategories(newCategories);\r\n        }, vendor.uid);\r\n        Firebase.vendorListenToNotifications(snapshot => {\r\n          const updatedValue = snapshot.val();\r\n          let newNotifications = [...this.props.notifications];\r\n          const foundIndex = newNotifications.findIndex(\r\n            e => e.notification_key == updatedValue.notification_key\r\n          );\r\n          if (foundIndex >= 0) {\r\n            newNotifications[foundIndex] = updatedValue;\r\n          } else {\r\n            newNotifications.push(updatedValue);\r\n          }\r\n          this.props.updateNotifications(newNotifications);\r\n        }, vendor.uid);\r\n        Firebase.vendorListenToReservations(snapshot => {\r\n          const updatedValue = snapshot.val();\r\n          let newReservations = [...this.props.reservations];\r\n          const foundIndex = newReservations.findIndex(\r\n            e => e.reservation_key == updatedValue.reservation_key\r\n          );\r\n          if (foundIndex >= 0) {\r\n            newReservations[foundIndex] = updatedValue;\r\n          } else {\r\n            if (updatedValue.restaurant_uid === vendor.uid) {\r\n              newReservations.push(updatedValue);\r\n            }\r\n          }\r\n          this.props.updateReservations(newReservations);\r\n        });\r\n\r\n        this.props.updateLogin(vendor);\r\n      }\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n  render() {\r\n    return !this.state.loading ? (\r\n      <>\r\n        {this.props.vendor ? (\r\n          <>\r\n            {this.props.vendor.is_verified ? (\r\n              <>\r\n                <Route exact path=\"/vendor/\">\r\n                  <VendorHome></VendorHome>\r\n                </Route>\r\n                <Route exact path=\"/vendor/upcoming\">\r\n                  <UpcomingReservations></UpcomingReservations>\r\n                </Route>\r\n                <Route exact path=\"/vendor/past\">\r\n                  <PreviousReservations></PreviousReservations>\r\n                </Route>\r\n                <Route exact path=\"/vendor/reviews\">\r\n                  <Reviews></Reviews>\r\n                </Route>\r\n                <Route exact path=\"/vendor/menu\">\r\n                  <Menu></Menu>\r\n                </Route>\r\n                <Route exact path=\"/vendor/profile\">\r\n                  <EditProfile></EditProfile>\r\n                </Route>\r\n              </>\r\n            ) : (\r\n              <Route path=\"/vendor/\">\r\n                <AccountUnverified></AccountUnverified>\r\n              </Route>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/vendor/\">\r\n              <VendorLogin></VendorLogin>\r\n            </Route>\r\n            <Route exact path=\"/vendor/register\">\r\n              <Registration></Registration>\r\n            </Route>\r\n          </>\r\n        )}\r\n      </>\r\n    ) : (\r\n      <div\r\n        style={{ height: \"100vh\", background: \"white\" }}\r\n        className=\"flex-column d-flex align-items-center justify-content-center w-100\"\r\n      >\r\n        <video src={Logo} style={{ width: \"50%\" }} muted autoPlay loop></video>\r\n        <Spinner\r\n          style={{ width: 30, height: 30 }}\r\n          animation=\"border\"\r\n          variant=\"dark\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(VendorRouter);\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport Home from \"../Pages/Home/Home\";\r\nimport TermsAndConditions from \"../Pages/TermsAndConditions/TermsAndConditions\";\r\nimport PrivacyPolicy from \"../Pages/PrivacyPolicy/PrivacyPolicy\";\r\nimport Contact from \"../Pages/Contact/Contact\";\r\nimport AdminLogin from \"../Pages/Admin/Login/Login\";\r\nimport Dashboard from \"../Pages/Admin/Dashboard/Dashboard\";\r\nimport Vendor from \"../Pages/Admin/Vendor/Vendor\";\r\nimport Complaints from \"../Pages/Admin/Complaints/Complaints\";\r\nimport Reservations from \"../Pages/Admin/Reservations/Reservations\";\r\nimport Customer from \"../Pages/Admin/Customer/Customer\";\r\nimport DiscountVouchers from \"../Pages/Admin/DiscountVouchers/DiscountVouchers\";\r\nimport Slideshow from \"../Pages/Admin/Slideshow/Slideshow\";\r\nimport { mapDispatchToProps, mapStateToProps } from \"../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAdmin } from \"../Config/localStorage\";\r\nimport Firebase from \"../Firebase/Firebase\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport VendorLogin from \"../Pages/Vendor/Login/Login\";\r\nimport VendorHome from \"../Pages/Vendor/Home/Home\";\r\nimport UpcomingReservations from \"../Pages/Vendor/UpcomingReservations/UpcomingReservations\";\r\nimport PreviousReservations from \"../Pages/Vendor/PreviousReservations/PreviousReservations\";\r\nimport VendorVerifications from \"../Pages/Admin/VendorVerifications/VendorVerifications\";\r\nimport Reviews from \"../Pages/Vendor/Reviews/Reviews\";\r\nimport Menu from \"../Pages/Vendor/Menu/Menu\";\r\nimport EditProfile from \"../Pages/Vendor/EditProfile/EditProfile\";\r\nimport Registration from \"../Pages/Vendor/Registration/Registration\";\r\nimport VendorRouter from \"./VendorRouter\";\r\nclass Router extends Component {\r\n  state = {\r\n    loading: true\r\n  };\r\n  componentDidMount = async () => {\r\n    const admin = getAdmin();\r\n    if (admin) {\r\n      const vendors = await Firebase.getRestaurants();\r\n      this.props.updateVendors(vendors);\r\n      const reviews = await Firebase.getAllReviews();\r\n      this.props.updateReviews(reviews);\r\n      const complaints = await Firebase.getComplaints();\r\n      this.props.updateComplaints(complaints);\r\n      const customers = await Firebase.getCustomers();\r\n      this.props.updateCustomers(customers);\r\n      const vouchers = await Firebase.getDiscountVouchers();\r\n      this.props.updateDiscountVouchers(vouchers);\r\n      const notifications = await Firebase.getNotifications(admin.uid);\r\n      this.props.updateNotifications(notifications);\r\n      const reservations = await Firebase.getReservations();\r\n      this.props.updateReservations(reservations);\r\n      const slideshows = await Firebase.getSlideShows();\r\n      this.props.updateSlideshows(slideshows);\r\n      Firebase.listenToVendors(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newVendors = [...this.props.vendors];\r\n        const foundIndex = newVendors.findIndex(e => e.uid == updatedValue.uid);\r\n        if (foundIndex >= 0) {\r\n          newVendors[foundIndex] = updatedValue;\r\n        } else {\r\n          newVendors.push(updatedValue);\r\n        }\r\n        this.props.updateVendors(newVendors);\r\n      });\r\n      Firebase.listenToComplaints(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newComplaints = [...this.props.complaints];\r\n        const foundIndex = newComplaints.findIndex(\r\n          e => e.complaint_key == updatedValue.complaint_key\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newComplaints[foundIndex] = updatedValue;\r\n        } else {\r\n          newComplaints.push(updatedValue);\r\n        }\r\n        this.props.updateComplaints(newComplaints);\r\n      });\r\n      Firebase.listenToCustomers(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newCustomers = [...this.props.customers];\r\n        const foundIndex = newCustomers.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newCustomers[foundIndex] = updatedValue;\r\n        } else {\r\n          newCustomers.push(updatedValue);\r\n        }\r\n        this.props.updateCustomers(newCustomers);\r\n      });\r\n      Firebase.listenToDiscountVouchers(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newVouchers = [...this.props.vouchers];\r\n        const foundIndex = newVouchers.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newVouchers[foundIndex] = updatedValue;\r\n        } else {\r\n          newVouchers.push(updatedValue);\r\n        }\r\n        this.props.updateDiscountVouchers(newVouchers);\r\n      });\r\n      Firebase.listenToNotifications(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newNotifications = [...this.props.notifications];\r\n        const foundIndex = newNotifications.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newNotifications[foundIndex] = updatedValue;\r\n        } else {\r\n          newNotifications.push(updatedValue);\r\n        }\r\n        this.props.updateNotifications(newNotifications);\r\n      });\r\n      Firebase.listenToReservations(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newReservations = [...this.props.reservations];\r\n        const foundIndex = newReservations.findIndex(\r\n          e => e.reservation_key == updatedValue.reservation_key\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newReservations[foundIndex] = updatedValue;\r\n        } else {\r\n          newReservations.push(updatedValue);\r\n        }\r\n        this.props.updateReservations(newReservations);\r\n      });\r\n      Firebase.listenToReviews(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newReviews = [...this.props.reviews];\r\n        const foundIndex = newReviews.findIndex(e => e.uid == updatedValue.uid);\r\n        if (foundIndex >= 0) {\r\n          newReviews[foundIndex] = updatedValue;\r\n        } else {\r\n          newReviews.push(updatedValue);\r\n        }\r\n        this.props.updateReviews(newReviews);\r\n      });\r\n\r\n      Firebase.listenToSlideShows(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newSlideshows = [...this.props.slideshows];\r\n        const foundIndex = newSlideshows.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newSlideshows[foundIndex] = updatedValue;\r\n        } else {\r\n          newSlideshows.push(updatedValue);\r\n        }\r\n        this.props.updateSlideshows(newSlideshows);\r\n      });\r\n      this.props.updateLogin(admin);\r\n    }\r\n    this.setState({ loading: false });\r\n  };\r\n  render() {\r\n    return this.state.loading ? (\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        <Spinner\r\n          style={{ width: 65, height: 65 }}\r\n          animation=\"border\"\r\n          variant=\"primary\"\r\n        />\r\n      </div>\r\n    ) : (\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home></Home>\r\n          </Route>\r\n          <Route exact path=\"/contact\">\r\n            <Contact></Contact>\r\n          </Route>\r\n          <Route exact path=\"/terms\">\r\n            <TermsAndConditions></TermsAndConditions>\r\n          </Route>\r\n          <Route exact path=\"/privacy\">\r\n            <PrivacyPolicy></PrivacyPolicy>\r\n          </Route>\r\n          {this.props.loggedInAdmin !== null ? (\r\n            <>\r\n              <Route exact path=\"/admin/\">\r\n                <Dashboard></Dashboard>\r\n              </Route>\r\n              <Route exact path=\"/admin/vendor/:uid\">\r\n                <Vendor></Vendor>\r\n              </Route>\r\n              <Route exact path=\"/admin/complaints\">\r\n                <Complaints></Complaints>\r\n              </Route>\r\n              <Route exact path=\"/admin/customer/:uid\">\r\n                <Customer></Customer>\r\n              </Route>\r\n              <Route exact path=\"/admin/discount\">\r\n                <DiscountVouchers></DiscountVouchers>\r\n              </Route>\r\n              <Route exact path=\"/admin/reservations\">\r\n                <Reservations></Reservations>\r\n              </Route>\r\n              <Route exact path=\"/admin/slideshow\">\r\n                <Slideshow></Slideshow>\r\n              </Route>\r\n              <Route exact path=\"/admin/verification\">\r\n                <VendorVerifications></VendorVerifications>\r\n              </Route>\r\n            </>\r\n          ) : (\r\n            <Route exact path=\"/admin/\">\r\n              <AdminLogin></AdminLogin>\r\n            </Route>\r\n          )}\r\n          <VendorRouter></VendorRouter>\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Router);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./Store/Store\";\nimport Router from \"./Navigation/Router\";\nimport Firebase from \"./Firebase/Firebase\";\n\nexport default class App extends Component {\n  componentDidMount = async () => {\n    // const vendor = await Firebase.createVendor(\n    //   \"vendor123123@gmail.com\",\n    //   \"123123\",\n    //   \"123 Street\",\n    //   \"123123123\",\n    //   \"Account Name\",\n    //   \"Habib Bank\",\n    //   \"Main\",\n    //   \"Restaurants\",\n    //   37.78510473148223,\n    //   -122.4023187160492,\n    //   \"Restaurent\",\n    //   \"03330431506\",\n    //   null,\n    //   \"\",\n    //   \"123123\"\n    // );\n  };\n  render() {\n    return (\n      <Provider store={Store}>\n        <Router></Router>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.2d5cad77.mp4\";"],"sourceRoot":""}