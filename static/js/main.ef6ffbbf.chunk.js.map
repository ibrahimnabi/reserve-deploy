{"version":3,"sources":["Reducers/VendorReducer.js","Actions/ActionTypes.js","Reducers/AdminReducer.js","Store/Store.js","Components/HomeNavbar/HomeNavbar.js","Components/Footer/Footer.js","Components/FooterAndButtons/FooterAndButtons.js","Pages/Home/Home.js","Pages/TermsAndConditions/TermsAndConditions.js","Pages/PrivacyPolicy/PrivacyPolicy.js","Pages/Contact/Contact.js","Config/index.js","Firebase/Firebase.js","Config/localStorage.js","Config/AdminMapping.js","Pages/Admin/Login/Login.js","Components/AdminNavbar/AdminNavbar.js","Pages/Admin/Dashboard/Dashboard.js","Pages/Admin/Vendor/Vendor.js","Pages/Admin/Complaints/Complaints.js","Pages/Admin/Reservations/Reservations.js","Pages/Admin/Customer/Customer.js","Pages/Admin/DiscountVouchers/DiscountVouchers.js","Pages/Admin/Slideshow/Slideshow.js","Navigation/Router.js","App.js","serviceWorker.js","index.js","Images/logo.png","Images/logo.mp4"],"names":["initialState","VendorReducer","state","type","payload","AdminActionTypes","loggedInAdmin","reservations","vendors","notifications","complaints","vouchers","reviews","customers","slideshows","AdminReducer","store","createStore","combineReducers","HomeNavbar","className","to","style","width","src","Logo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Footer","FooterAndButtons","href","Home","autoPlay","controls","muted","TermsAndConditions","PrivacyPolicy","Contact","email","subject","message","changeState","name","value","setState","sendMail","a","async","trim","templateParams","from_name","to_name","reply_to","message_html","emailjs","templateParams2","alert","props","history","push","for","onChange","e","target","placeholder","aria-describedby","rows","onClick","this","withRouter","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firebase","uploadSlideShowImage","file","uid","extension","console","log","ref","storage","imageRef","child","put","response","getDownloadURL","Firebase","login","password","auth","signInWithEmailAndPassword","user","getAdmin","database","once","getReservations","val","Object","keys","map","key","getRestaurants","restaurants","getDishes","dishes","getReviews","ratings","getAllReviews","forEach","data","k","getComplaints","getCustomers","getNotifications","addDiscountVoucher","code","expDate","maxUses","vendor_type","set","numberOfUses","isBlocked","getDiscountVouchers","discounts","listenToNotifications","callBack","on","listenToVendors","listenToReviews","listenToComplaints","listenToDiscountVouchers","listenToReservations","listenToDishes","listenToCustomers","deleteVendor","remove","restrictOrder","update","is_restrict_order","updateProcessingFee","processing_fee","updateProcessingFeeAndVerify","is_number_verified","is_verified","updateDiscountVoucher","addSlideShow","vendor_uid","image_url","listenToSlideShows","getSlideShows","deleteSlideshow","deleteDiscount","setAdmin","localStorage","setItem","JSON","stringify","parse","getItem","removeAdmin","removeItem","mapStateToProps","mapDispatchToProps","dispatch","updateLogin","updateComplaints","updateDiscountVouchers","updateNotifications","updateReservations","updateReviews","updateCustomers","updateVendors","updateSlideshows","Login","window","location","reload","marginTop","htmlFor","connect","AdminNavbar","logout","filter","Dropdown","Item","Navbar","bg","expand","Brand","Toggle","Collapse","Nav","Link","variant","Badge","pill","length","Menu","Button","Dashboard","modalShow","selectedVendor","procFee","date","Date","clickHandler","element","toLowerCase","includes","category","escapeRooms","cafes","events","unverified","Container","Row","Col","xs","Card","Header","Body","Form","paddingTop","paddingBottom","Group","as","controlId","Control","Tabs","defaultActiveKey","Tab","eventKey","title","Table","striped","hover","responsive","height","borderRadius","objectFit","photo_url","Pagination","First","Prev","Next","Last","reservation_fee","size","Modal","aria-labelledby","centered","show","onHide","closeButton","Title","InputGroup","Prepend","Text","FormControl","newProFee","Vendor","address","branch","close","instant_data","available","is_email_verfied","llocation","lat","llong","number","bank_details","accountNumber","account_name","bank_name","checkDate","weekStart","setDate","getDate","getDay","weekEnd","componentDidMount","vendor","find","match","params","restaurant_uid","reviewsCustomerAndVendorJoin","customer","c","customer_uid","restaurant","array","fill","rating","deleteHandler","reservationsToRender","badgeVariant","status","photo","time","attandee","complaintsToRender","Media","alt","redirectToVendor","description","md","Check","checked","label","star","comment","Complaints","Reservations","minDate","maxDate","vendorType","redirectToCustomer","condition","Label","Customer","r","reservation","reviewsToRender","review","complaint","DiscountVouchers","selected_uid","showModal","add","handler","dateHandler","splitDate","split","block","splitExpDate","Number","class","animation","Slideshow","fileNameSplit","fileHandler","files","delete","v","Carousel","Caption","background","padding","margin","accept","Router","loading","admin","snapshot","updatedValue","newVendors","foundIndex","findIndex","newComplaints","newCustomers","newVouchers","newNotifications","newReservations","newReviews","newSlideshows","display","alignItems","justifyContent","Spinner","basename","exact","path","App","Store","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ef6ffbbf.chunk.js","sourcesContent":["const initialState = {};\r\n\r\nconst VendorReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default VendorReducer;\r\n","const AdminActionTypes = {\r\n  ADMIN_UPDATE_LOGIN_STATUS: \"ADMIN_UPDATE_LOGIN_STATUS\",\r\n  UPDATE_NOTIFICATIONS: \"UPDATE_NOTIFICATIONS\",\r\n  UPDATE_VENDORS: \"UPDATE_VENDORS\",\r\n  UPDATE_RESERVATIONS: \"UPDATE_RESERVATIONS\",\r\n  UPDATE_COMPLAINTS: \"UPDATE_COMPLAINTS\",\r\n  UPDATE_DISCOUNT_VOUCHERS: \"UPDATE_DISCOUNT_VOUCHERS\",\r\n  UPDATE_REVIEWS: \"UPDATE_REVIEWS\",\r\n  UPDATE_CUSTOMERS: \"UPDATE_CUSTOMERS\",\r\n  UPDATE_SLIDESHOW: \"UPDATE_SLIDESHOW\"\r\n};\r\nconst VendorActionTypes = {\r\n  ADMIN_UPDATE_LOGIN_STATUS: \"ADMIN_UPDATE_LOGIN_STATUS\",\r\n  UPDATE_NOTIFICATIONS: \"UPDATE_NOTIFICATIONS\",\r\n  UPDATE_VENDORS: \"UPDATE_VENDORS\",\r\n  UPDATE_RESERVATIONS: \"UPDATE_RESERVATIONS\",\r\n  UPDATE_COMPLAINTS: \"UPDATE_COMPLAINTS\",\r\n  UPDATE_DISCOUNT_VOUCHERS: \"UPDATE_DISCOUNT_VOUCHERS\",\r\n  UPDATE_REVIEWS: \"UPDATE_REVIEWS\"\r\n};\r\nexport { AdminActionTypes, VendorActionTypes };\r\n","import { AdminActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  loggedInAdmin: null,\r\n  reservations: [],\r\n  vendors: [],\r\n  notifications: [],\r\n  complaints: [],\r\n  vouchers: [],\r\n  reviews: [],\r\n  customers: [],\r\n  slideshows: []\r\n};\r\nconst AdminReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case AdminActionTypes.ADMIN_UPDATE_LOGIN_STATUS:\r\n      return { ...state, loggedInAdmin: payload };\r\n\r\n    case AdminActionTypes.UPDATE_COMPLAINTS:\r\n      return { ...state, complaints: payload };\r\n\r\n    case AdminActionTypes.UPDATE_DISCOUNT_VOUCHERS:\r\n      return { ...state, vouchers: payload };\r\n\r\n    case AdminActionTypes.UPDATE_NOTIFICATIONS:\r\n      return { ...state, notifications: payload };\r\n\r\n    case AdminActionTypes.UPDATE_RESERVATIONS:\r\n      return { ...state, reservations: payload };\r\n\r\n    case AdminActionTypes.UPDATE_REVIEWS:\r\n      return { ...state, reviews: payload };\r\n\r\n    case AdminActionTypes.UPDATE_VENDORS:\r\n      return { ...state, vendors: payload };\r\n\r\n    case AdminActionTypes.UPDATE_CUSTOMERS:\r\n      return { ...state, customers: payload };\r\n    case AdminActionTypes.UPDATE_SLIDESHOW:\r\n      return { ...state, slideshows: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AdminReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport VendorReducer from \"../Reducers/VendorReducer\";\r\nimport AdminReducer from \"../Reducers/AdminReducer\";\r\n\r\nconst store = createStore(combineReducers({ VendorReducer, AdminReducer }));\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport \"./HomeNavbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class HomeNavbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"home-navbar navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img\r\n            style={{\r\n              width: \"100px\"\r\n            }}\r\n            src={Logo}\r\n          ></img>\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\"></ul>\r\n          <div className=\"login-buttons my-2 my-lg-0\">\r\n            <Link\r\n              to=\"/vendor/login\"\r\n              className=\"btn text-light btn-primary my-2 my-sm-0\"\r\n            >\r\n              Vendor Login\r\n            </Link>\r\n            <Link\r\n              to=\"/admin/\"\r\n              className=\"btn text-light btn-primary mx-2 my-2 my-sm-0\"\r\n            >\r\n              Admin Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"row bg-light\">\r\n        <p className=\"col-12 col-md-3 order-md-first order-last\">\r\n          &copy;Reserve 2020\r\n        </p>\r\n        <div className=\"offset-md-4 col-12 col-md-4 offet-5 row\">\r\n          <Link className=\" col-12 col-md-4 text-md-right\" to=\"/contact\">\r\n            Contact\r\n          </Link>\r\n          <Link className=\" col-12 col-md-4\" to=\"/terms\">\r\n            Terms & Conditions\r\n          </Link>\r\n          <Link className=\" col-12 col-md-4\" to=\"/privacy\">\r\n            Privacy Policy\r\n          </Link>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nexport default class FooterAndButtons extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className=\"flex social-btns\">\r\n            <a className=\"app-btn blu flex vert\" href=\"https://www.apple.com\">\r\n              <i className=\"fab fa-apple\"></i>\r\n              <p className=\"text\">\r\n                Available on the <br />{\" \"}\r\n                <span className=\"big-txt\">App Store</span>\r\n              </p>\r\n            </a>\r\n\r\n            <a className=\"app-btn blu flex vert\" href=\"https://www.google.com\">\r\n              <i className=\"fab fa-google-play\"></i>\r\n              <p className=\"text\">\r\n                Get it on <br /> <span className=\"big-txt\">Google Play</span>\r\n              </p>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"container-fluid\">\r\n          <Footer></Footer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Logo from \"../../Images/logo.mp4\";\r\nimport \"./Home.css\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nimport FooterAndButtons from \"../../Components/FooterAndButtons/FooterAndButtons\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <video\r\n              autoPlay={true}\r\n              controls={false}\r\n              muted\r\n              className=\"logo\"\r\n              src={Logo}\r\n            ></video>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./TermsAndConditions.css\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport FooterAndButtons from \"../../Components/FooterAndButtons/FooterAndButtons\";\r\nexport default class TermsAndConditions extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./PrivacyPolicy.css\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nimport FooterAndButtons from \"../../Components/FooterAndButtons/FooterAndButtons\";\r\nexport default class PrivacyPolicy extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nimport \"./Contact.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FooterAndButtons from \"../../Components/FooterAndButtons/FooterAndButtons\";\r\nclass Contact extends Component {\r\n  state = {\r\n    email: \"\",\r\n    subject: \"Complaint\",\r\n    message: \"\"\r\n  };\r\n  changeState = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  sendMail = async () => {\r\n    if (\r\n      this.state.email.trim() !== \"\" &&\r\n      this.state.subject.trim() !== \"\" &&\r\n      this.state.message.trim() !== \"\"\r\n    ) {\r\n      let templateParams = {\r\n        from_name: this.state.email.trim(),\r\n        to_name: \"ibrahimnabi80@gmail.com\",\r\n        reply_to: this.state.email.trim(),\r\n        subject: this.state.subject,\r\n        message_html: this.state.message\r\n      };\r\n      emailjs.send(\r\n        \"reserve_contact\",\r\n        \"template_KiH1F4zS\",\r\n        templateParams,\r\n        \"user_aVbbjsfKbS0Qub1NMA29M\"\r\n      );\r\n      let templateParams2 = {\r\n        from_name: \"ibrahimnabi80@gmail.com\",\r\n        to_name: this.state.email.trim(),\r\n        subject: \"Response\",\r\n        message_html:\r\n          \"We received your message and we will reply soon. Your inquiry id is 001\"\r\n      };\r\n      emailjs.send(\r\n        \"reserve_contact\",\r\n        \"template_KiH1F4zS\",\r\n        templateParams2,\r\n        \"user_aVbbjsfKbS0Qub1NMA29M\"\r\n      );\r\n      alert(\"We received your message and we will reply soon\");\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      alert(\"Please fill all field before submitting.\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <div className=\"container\">\r\n          <form className=\" contact-form\">\r\n            <legend>Contact Form</legend>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleFormControlSelect1\">Select Subject</label>\r\n              <select\r\n                onChange={e => this.changeState(\"subject\", e.target.value)}\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlSelect1\"\r\n              >\r\n                <option value=\"Complaint\">Complaint</option>\r\n                <option value=\"Inquiry\">Inquiry</option>\r\n                <option value=\"Feedback\">Feedback</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Enter Your Email Address</label>\r\n              <input\r\n                onChange={e => this.changeState(\"email\", e.target.value)}\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                placeholder=\"Email Address\"\r\n                aria-describedby=\"emailHelp\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleFormControlTextarea1\">\r\n                Enter Your Message\r\n              </label>\r\n              <textarea\r\n                onChange={e => this.changeState(\"message\", e.target.value)}\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlTextarea1\"\r\n                rows=\"3\"\r\n                placeholder=\"Message\"\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              onClick={this.sendMail}\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Contact);\r\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyB7qtP77Rx3HmirB5lyWJ90RYeMu4TVnyc\",\r\n  authDomain: \"reserve-restaurant-80ec7.firebaseapp.com\",\r\n  databaseURL: \"https://reserve-restaurant-80ec7.firebaseio.com\",\r\n  projectId: \"reserve-restaurant-80ec7\",\r\n  storageBucket: \"reserve-restaurant-80ec7.appspot.com\",\r\n  messagingSenderId: \"1022182989367\",\r\n  appId: \"1:1022182989367:web:12692d873c484a842be9b2\",\r\n  measurementId: \"G-CSDM8VMGL4\"\r\n};\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyDpsl140hY7lCFfPw_CV9fxbDsbbU2YN6U\",\r\n//   authDomain: \"reserve-1d4e1.firebaseapp.com\",\r\n//   databaseURL: \"https://reserve-1d4e1.firebaseio.com\",\r\n//   projectId: \"reserve-1d4e1\",\r\n//   storageBucket: \"reserve-1d4e1.appspot.com\",\r\n//   messagingSenderId: \"1028452700122\",\r\n//   appId: \"1:1028452700122:web:852c13d9b3cd2045227ae3\",\r\n//   measurementId: \"G-T7D59TGW8L\"\r\n// };\r\nexport default firebaseConfig;\r\n","import * as firebase from \"firebase\";\r\nimport firebaseConfig from \"../Config\";\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nconst getAdmin = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/admin/\" + uid)\r\n    .once(\"value\");\r\n};\r\nconst login = async (email, password) => {\r\n  const response = await app.auth().signInWithEmailAndPassword(email, password);\r\n  return response.user;\r\n};\r\nconst getReservations = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const reservations = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return reservations;\r\n};\r\nconst getRestaurants = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const restaurants = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return restaurants;\r\n};\r\nconst getDishes = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const dishes = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return dishes;\r\n};\r\nconst getReviews = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/ratings/\" + uid)\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const ratings = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return ratings;\r\n};\r\nconst getNotifications = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  if (value) {\r\n    const notifications = Object.keys(value).map(key => {\r\n      return value[key];\r\n    });\r\n    return notifications;\r\n  }\r\n  return [];\r\n};\r\nconst getAllReviews = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/ratings/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const ratings = [];\r\n  Object.keys(value).forEach(key => {\r\n    const data = Object.keys(value[key]).map(k => value[key][k]);\r\n    ratings.push(...data);\r\n  });\r\n  return ratings;\r\n};\r\nconst getComplaints = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/complaints/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const complaints = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return complaints;\r\n};\r\nconst getSlideShows = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/slideshows/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  if (value) {\r\n    const slideshows = Object.keys(value).map(key => {\r\n      return value[key];\r\n    });\r\n    return slideshows;\r\n  }\r\n  return [];\r\n};\r\nconst getCustomers = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/customers/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const customers = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return customers;\r\n};\r\nconst addDiscountVoucher = async (code, expDate, maxUses, vendor_type) => {\r\n  const key = await app\r\n    .database()\r\n    .ref(\"/discounts\")\r\n    .push();\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + key.key)\r\n    .set({\r\n      code,\r\n      expDate,\r\n      maxUses,\r\n      numberOfUses: 0,\r\n      isBlocked: false,\r\n      uid: key.key,\r\n      vendor_type\r\n    });\r\n};\r\nconst updateDiscountVoucher = async (uid, isBlocked) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + uid)\r\n    .update({\r\n      isBlocked\r\n    });\r\n};\r\nconst getDiscountVouchers = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/discounts/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const discounts = value\r\n    ? Object.keys(value).map(key => {\r\n        return value[key];\r\n      })\r\n    : [];\r\n  return discounts;\r\n};\r\nconst listenToNotifications = async (callBack, uid) => {\r\n  app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToVendors = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToReviews = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/reviews/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToSlideShows = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/slideshows/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst deleteVendor = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .remove();\r\n};\r\nconst deleteDiscount = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + uid)\r\n    .remove();\r\n};\r\nconst deleteSlideshow = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/slideshows/\" + uid)\r\n    .remove();\r\n};\r\nconst listenToComplaints = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/complaints/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToDiscountVouchers = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/discounts/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToReservations = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToDishes = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToCustomers = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/customers/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst restrictOrder = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      is_restrict_order: value\r\n    });\r\n};\r\nconst updateProcessingFee = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      processing_fee: value + \"\"\r\n    });\r\n};\r\nconst updateProcessingFeeAndVerify = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      processing_fee: value + \"\",\r\n      is_number_verified: true,\r\n      is_verified: true\r\n    });\r\n};\r\nconst addSlideShow = async (file, extension, vendor_uid) => {\r\n  const key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/slideshows/\")\r\n      .push()\r\n  ).key;\r\n  console.log(\"uid = \", key);\r\n  const image_url = await uploadSlideShowImage(file, key, extension);\r\n  console.log(\"image_url = \", image_url);\r\n  await app\r\n    .database()\r\n    .ref(\"/slideshows/\" + key)\r\n    .set({\r\n      uid: key,\r\n      vendor_uid,\r\n      image_url\r\n    });\r\n};\r\nconst uploadSlideShowImage = async (file, uid, extension) => {\r\n  console.log(\"uu uid = \", uid);\r\n  console.log(\"extension = \", extension);\r\n  console.log(\"file = \", file);\r\n  const ref = app.storage().ref(\"/slideshows/\");\r\n  var imageRef = ref.child(uid + \".\" + extension);\r\n  const response = await imageRef.put(file);\r\n  return response.ref.getDownloadURL();\r\n};\r\nconst Firebase = {\r\n  login,\r\n  getAdmin,\r\n  getReservations,\r\n  getRestaurants,\r\n  getDishes,\r\n  getReviews,\r\n  getAllReviews,\r\n  getComplaints,\r\n  getCustomers,\r\n  getNotifications,\r\n  addDiscountVoucher,\r\n  getDiscountVouchers,\r\n  listenToNotifications,\r\n  listenToVendors,\r\n  listenToReviews,\r\n  listenToComplaints,\r\n  listenToDiscountVouchers,\r\n  listenToReservations,\r\n  listenToDishes,\r\n  listenToCustomers,\r\n  deleteVendor,\r\n  restrictOrder,\r\n  updateProcessingFee,\r\n  updateProcessingFeeAndVerify,\r\n  updateDiscountVoucher,\r\n  addSlideShow,\r\n  listenToSlideShows,\r\n  getSlideShows,\r\n  deleteSlideshow,\r\n  deleteDiscount\r\n};\r\nexport default Firebase;\r\n","const setAdmin = user => {\r\n  localStorage.setItem(\"admin\", JSON.stringify(user));\r\n};\r\nconst getAdmin = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"admin\"));\r\n  return user;\r\n};\r\nconst removeAdmin = () => {\r\n  localStorage.removeItem(\"admin\");\r\n};\r\n\r\nexport { setAdmin, getAdmin, removeAdmin };\r\n","import { AdminActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst mapStateToProps = state => {\r\n  return state.AdminReducer;\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateLogin: user =>\r\n      dispatch({\r\n        type: AdminActionTypes.ADMIN_UPDATE_LOGIN_STATUS,\r\n        payload: user\r\n      }),\r\n    updateComplaints: complaints =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_COMPLAINTS,\r\n        payload: complaints\r\n      }),\r\n    updateDiscountVouchers: vouchers =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_DISCOUNT_VOUCHERS,\r\n        payload: vouchers\r\n      }),\r\n    updateNotifications: notifications =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_NOTIFICATIONS,\r\n        payload: notifications\r\n      }),\r\n    updateReservations: reservations =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_RESERVATIONS,\r\n        payload: reservations\r\n      }),\r\n    updateReviews: reviews =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_REVIEWS, payload: reviews }),\r\n    updateCustomers: customers =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_CUSTOMERS, payload: customers }),\r\n    updateVendors: vendors =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_VENDORS, payload: vendors }),\r\n    updateSlideshows: slideshows =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_SLIDESHOW, payload: slideshows })\r\n  };\r\n};\r\nexport { mapDispatchToProps, mapStateToProps };\r\n","import React, { Component } from \"react\";\r\nimport \"./Login.css\";\r\nimport Logo from \"../../../Images/logo.png\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setAdmin } from \"../../../Config/localStorage\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  changeState = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  login = async () => {\r\n    if (this.state.email.trim() !== \"\" && this.state.password.trim() !== \"\") {\r\n      const user = await Firebase.login(this.state.email, this.state.password);\r\n      setAdmin(user);\r\n      this.props.updateLogin(user);\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Your have to fill all fields in order to login\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <HomeNavbar></HomeNavbar> */}\r\n        <div className=\"container \">\r\n          <div className=\"row justify-content-center\">\r\n            <img\r\n              style={{\r\n                width: \"20%\",\r\n                marginTop: \"10vh\"\r\n              }}\r\n              src={Logo}\r\n            ></img>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <form className=\"loginAdmin col-10 col-md-6\">\r\n              <legend>Admin Login</legend>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">\r\n                  Enter Your Email Address\r\n                </label>\r\n                <input\r\n                  onChange={e => this.changeState(\"email\", e.target.value)}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  placeholder=\"Email Address\"\r\n                  aria-describedby=\"emailHelp\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Enter Your Password</label>\r\n                <input\r\n                  onChange={e => this.changeState(\"password\", e.target.value)}\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n              <button\r\n                onClick={this.login}\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                Login\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        {/* <Footer></Footer> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport \"./AdminNavbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeAdmin } from \"../../Config/localStorage\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../../Config/AdminMapping\";\r\nclass AdminNavbar extends Component {\r\n  logout = async () => {\r\n    removeAdmin();\r\n    this.props.updateLogin(null);\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(e => !e.is_verified);\r\n    const notifications = vendors.map(e => {\r\n      return (\r\n        <Dropdown.Item>\r\n          <Link to={\"/admin/vendor/\" + e.uid}>Verify New Vendor {e.name}</Link>\r\n        </Dropdown.Item>\r\n      );\r\n    });\r\n    return (\r\n      <Navbar className=\"admin-nav\" bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand>\r\n          <Link to=\"/admin/\">\r\n            <img style={{ width: 100 }} src={Logo}></img>\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto admin-nav-links\">\r\n            <Nav.Link>\r\n              <Link to=\"/admin\">Vendors</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/reservations\">Reservations</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/discount\">Discount Vouchers</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/complaints\">Complaints</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/slideshow\">Slideshow</Link>\r\n            </Nav.Link>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">\r\n                <ion-icon name=\"notifications-outline\"></ion-icon>\r\n                <Badge pill className=\"notifications\" variant=\"primary\">\r\n                  {vendors.length}\r\n                </Badge>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                {notifications.length ? (\r\n                  notifications\r\n                ) : (\r\n                  <Dropdown.Item>No notifications</Dropdown.Item>\r\n                )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Nav>\r\n          <Link>\r\n            <Button\r\n              onClick={this.logout}\r\n              type=\"button\"\r\n              variant=\"outline-primary\"\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminNavbar);\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Tabs,\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Pagination,\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"./Dashboard.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nclass Dashboard extends Component {\r\n  state = {\r\n    modalShow: false,\r\n    selectedVendor: \"\",\r\n    procFee: 0,\r\n    date: new Date(),\r\n    name: \"\"\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(element => {\r\n      const condition = element.name\r\n        .toLowerCase()\r\n        .includes(this.state.name.toLowerCase(), 0);\r\n      return condition;\r\n    });\r\n    const restaurants = vendors.filter(\r\n      element => element.category === \"Restaurants\" && element.is_verified\r\n    );\r\n    const escapeRooms = vendors.filter(\r\n      element => element.category === \"Escape Rooms\" && element.is_verified\r\n    );\r\n    const cafes = vendors.filter(\r\n      element => element.category === \"Cafes\" && element.is_verified\r\n    );\r\n    const events = vendors.filter(\r\n      element => element.category === \"Events\" && element.is_verified\r\n    );\r\n    const unverified = vendors.filter(element => !element.is_verified);\r\n\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xs={12}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Vendors</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Form.Row style={{ paddingTop: 10, paddingBottom: 10 }}>\r\n                    <Form.Group as={Col} controlId=\"formGridCity\">\r\n                      <Form.Control\r\n                        onChange={e => this.setState({ name: e.target.value })}\r\n                        placeholder=\"Search\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                  <Tabs\r\n                    variant=\"pills\"\r\n                    defaultActiveKey=\"Restaurants\"\r\n                    id=\"noanim-tab-example\"\r\n                  >\r\n                    <Tab eventKey=\"Restaurants\" title=\"Restaurants\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {restaurants.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <td>\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={element.photo_url}\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unverified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Cafe\" title=\"Cafe\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {cafes.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <td>\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={element.photo_url}\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unerified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Escape Rooms\" title=\"Escape Rooms\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {escapeRooms.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <td>\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={element.photo_url}\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unerified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Event Organizers\" title=\"Event Organizers\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {events.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <td>\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={element.photo_url}\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unerified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Unverified\" title=\"Unverified\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Reservation Price</th>\r\n                            <th>Status</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {unverified.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr>\r\n                                  <td\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={\r\n                                        element.photo_url\r\n                                          ? element.photo_url\r\n                                          : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                                      }\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>{element.reservation_fee}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unerified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                  <td>\r\n                                    <Button\r\n                                      onClick={() => {\r\n                                        this.setState({\r\n                                          modalShow: true,\r\n                                          selectedVendor: element.uid\r\n                                        });\r\n                                      }}\r\n                                      variant=\"success\"\r\n                                      size=\"sm\"\r\n                                    >\r\n                                      Verify\r\n                                    </Button>\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                  </Tabs>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>{\" \"}\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Processing Fee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  Processing Fee\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                type=\"number\"\r\n                onChange={e => {\r\n                  this.setState({\r\n                    newProFee: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={async () => {\r\n                await Firebase.updateProcessingFeeAndVerify(\r\n                  this.state.newProFee,\r\n                  this.state.selectedVendor\r\n                );\r\n                this.setState({ modalShow: false });\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.setState({ modalShow: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Dashboard));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  Pagination,\r\n  Table,\r\n  Badge,\r\n  Media,\r\n  Form,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport \"./Vendor.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nclass Vendor extends Component {\r\n  state = {\r\n    address: \"\",\r\n    branch: \"\",\r\n    category: \"\",\r\n    close: false,\r\n    email: \"\",\r\n    instant_data: {\r\n      available: 0\r\n    },\r\n    modalShow: false,\r\n    is_email_verfied: false,\r\n    is_number_verified: false,\r\n    is_restrict_order: false,\r\n    is_verified: false,\r\n    llocation: {\r\n      lat: 0,\r\n      llong: 0\r\n    },\r\n    name: \"\",\r\n    number: \"\",\r\n    photo_url: \"\",\r\n    reservation_fee: \"0\",\r\n    processing_fee: \"0\",\r\n    uid: \"LEa50vSb5KTbwvz3FgToiDwvzKm1\",\r\n    bank_details: {\r\n      accountNumber: \"\",\r\n      account_name: \"\",\r\n      bank_name: \"\"\r\n    },\r\n    reviews: [],\r\n    newProFee: 0\r\n  };\r\n  restrictOrder = async uid => {\r\n    await Firebase.restrictOrder(!this.state.is_restrict_order, uid);\r\n    this.setState({\r\n      is_restrict_order: !this.state.is_restrict_order\r\n    });\r\n  };\r\n  checkDate = date => {\r\n    var weekStart = new Date();\r\n    weekStart.setDate(weekStart.getDate() - weekStart.getDay());\r\n    weekStart.setDate(weekStart.getDate() - 30);\r\n    var weekEnd = new Date(+weekStart);\r\n    weekEnd.setDate(weekEnd.getDate() + 30);\r\n    return date >= weekStart && date <= weekEnd;\r\n  };\r\n  componentDidMount = async () => {\r\n    const vendor = this.props.vendors.find(\r\n      element => element.uid === this.props.match.params.uid\r\n    );\r\n    console.log(vendor);\r\n    this.setState({\r\n      ...vendor\r\n    });\r\n    const reviews = this.props.reviews.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    let reviewsCustomerAndVendorJoin = reviews.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const restaurant = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, element.rating);\r\n      return {\r\n        ...element,\r\n        customer,\r\n        restaurant,\r\n        array\r\n      };\r\n    });\r\n    this.setState({\r\n      reviews: reviewsCustomerAndVendorJoin\r\n    });\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/customer/\" + uid);\r\n  };\r\n  deleteHandler = async () => {\r\n    await Firebase.deleteVendor(this.state.uid);\r\n    this.props.history.push(\"/admin/\");\r\n  };\r\n  render() {\r\n    const reservations = this.props.reservations.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    console.log(this.props.reservations);\r\n    const reservationsToRender = reservations.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        element.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : element.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.clickHandler(customer.uid)}>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={customer.photo}\r\n            ></img>\r\n          </td>\r\n          <td>{customer.name}</td>\r\n          <td>{element.time}</td>\r\n          <td>{element.date}</td>\r\n          <td>{element.attandee}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{element.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    console.log(reservationsToRender);\r\n    const complaints = this.props.complaints.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    const complaintsToRender = complaints.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      return customer ? (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              customer.photo\r\n                ? customer.photo\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{customer.name}</h5>\r\n            <Row className=\"ml-1\">\r\n              <h6 onClick={this.redirectToVendor}>{vendor.name}</h6>\r\n            </Row>\r\n            <Row className=\"ml-1\">\r\n              <h6 className=\"text-muted\">{element.title}</h6>\r\n            </Row>\r\n            <p>{element.description}</p>\r\n            <p>\r\n              Date of Complaint:{\" \"}\r\n              <small className=\"text-muted\">{element.date}</small>\r\n            </p>\r\n          </Media.Body>\r\n        </Media>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"12\" md=\"3\">\r\n              <Card>\r\n                <Card.Body>\r\n                  <img\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: 200,\r\n                      objectFit: \"cover\"\r\n                    }}\r\n                    src={this.state.photo_url}\r\n                  ></img>\r\n                  <hr></hr>\r\n                  <p className=\"h5\">\r\n                    {this.state.name}\r\n                    {this.state.is_verified ? null : (\r\n                      <small className=\"text-muted text-danger\">\r\n                        {\" \"}\r\n                        (Verification Pending)\r\n                      </small>\r\n                    )}\r\n                  </p>\r\n                  <p className=\"text-muted\">{this.state.category}</p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Branch:{\" \"}\r\n                    <span className=\"text-muted\">{this.state.branch}</span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Phone:{\" \"}\r\n                    <span className=\"text-muted\">{this.state.number}</span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Email:{\" \"}\r\n                    <span className=\"text-muted\">{this.state.email}</span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Bank Name:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      {this.state.bank_details.bank_name}\r\n                    </span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Account Name:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      {this.state.bank_details.account_name}\r\n                    </span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Account Number:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      {this.state.bank_details.accountNumber}\r\n                    </span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Reservation Fee:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      $ {this.state.reservation_fee}\r\n                    </span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Processing Fee:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      $ {this.state.processing_fee}\r\n                    </span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Last Months Reservation Revenue:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      ${\" \"}\r\n                      {this.state.reservation_fee *\r\n                        reservations.filter(e => {\r\n                          const date = new Date(e.date);\r\n                          return this.checkDate(date);\r\n                        }).length}\r\n                    </span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Last Months Processing Revenue:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      ${\" \"}\r\n                      {this.state.processing_fee *\r\n                        reservations.filter(e => {\r\n                          const date = new Date(e.date);\r\n                          return this.checkDate(date);\r\n                        }).length}\r\n                    </span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Available Reservations:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      {this.state.instant_data.available}\r\n                    </span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <Form.Check\r\n                    checked={this.state.is_restrict_order}\r\n                    type=\"switch\"\r\n                    id=\"custom-switch\"\r\n                    label=\"Stop Reservations\"\r\n                    onChange={() => this.restrictOrder(this.state.uid)}\r\n                  />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"mt-3 mt-md-0 mb-5\" xs=\"12\" md=\"9\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Vendor Details</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row className=\" p-4\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          modalShow: true\r\n                        });\r\n                      }}\r\n                      variant=\"primary\"\r\n                      className=\"mx-2\"\r\n                    >\r\n                      {this.state.is_verified\r\n                        ? \"Edit Processing Fee\"\r\n                        : \"Approve Verification\"}\r\n                    </Button>\r\n                    <Button\r\n                      onClick={this.deleteHandler}\r\n                      variant=\"danger\"\r\n                      className=\"mx-2\"\r\n                    >\r\n                      {this.state.is_verified\r\n                        ? \"Remove Vendor\"\r\n                        : \"Reject Verification\"}\r\n                    </Button>\r\n                  </Row>\r\n                  <hr></hr>\r\n                  <h3>Location</h3>\r\n                  <div className=\"map\">\r\n                    <h1>Map will be displayed here</h1>\r\n                  </div>\r\n                  <hr></hr>\r\n                  {reservationsToRender.length > 0 ? (\r\n                    <>\r\n                      <h3>Reservations</h3>\r\n                      <Table responsive striped hover>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Customer Name</th>\r\n                            <th>Reservation Time</th>\r\n                            <th>Date of Reservation</th>\r\n                            <th>Number of Attendees</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>{reservationsToRender}</tbody>\r\n                      </Table>\r\n                    </>\r\n                  ) : (\r\n                    <p>No Reservations Found</p>\r\n                  )}\r\n                  <hr></hr>\r\n                  {this.state.reviews.length > 0 ? (\r\n                    <>\r\n                      <h3>Reviews</h3>\r\n                      <ul className=\"list-unstyled mt-5\">\r\n                        {this.state.reviews.map(element => {\r\n                          return (\r\n                            <Media as=\"li\">\r\n                              <img\r\n                                width={64}\r\n                                height={64}\r\n                                className=\"mr-3\"\r\n                                style={{ objectFit: \"cover\" }}\r\n                                src={\r\n                                  element.customer.photo\r\n                                    ? element.customer.photo\r\n                                    : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                                }\r\n                                alt=\"Generic placeholder\"\r\n                              />\r\n                              <Media.Body>\r\n                                <h5>{element.customer.name}</h5>\r\n                                <Row className=\"media-stars \">\r\n                                  {element.array.map(star => {\r\n                                    return <ion-icon name={star}></ion-icon>;\r\n                                  })}\r\n                                </Row>\r\n                                <p>{element.comment}</p>\r\n                              </Media.Body>\r\n                            </Media>\r\n                          );\r\n                        })}\r\n                      </ul>\r\n                    </>\r\n                  ) : (\r\n                    <p>No Reviews for this Vendor</p>\r\n                  )}\r\n                  <hr></hr>\r\n                  {complaintsToRender.length > 0 ? (\r\n                    <>\r\n                      <h3>Complaints</h3>\r\n                      <ul className=\"list-unstyled mt-5\">\r\n                        {complaintsToRender}\r\n                      </ul>\r\n                    </>\r\n                  ) : (\r\n                    <p>No Complaints for this Vendor</p>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Processing Fee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  Processing Fee\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                type=\"number\"\r\n                onChange={e => {\r\n                  this.setState({\r\n                    newProFee: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={async () => {\r\n                if (this.state.is_verified) {\r\n                  await Firebase.updateProcessingFee(\r\n                    this.state.newProFee,\r\n                    this.state.uid\r\n                  );\r\n                } else {\r\n                  await Firebase.updateProcessingFeeAndVerify(\r\n                    this.state.newProFee,\r\n                    this.state.uid\r\n                  );\r\n                }\r\n                this.setState({ modalShow: false });\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              {this.state.is_verified ? \"Update\" : \"Verify\"}\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.setState({ modalShow: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Vendor));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport { Card, Pagination, Row, Media, Container } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\n\r\nclass Complaints extends Component {\r\n  redirectToVendor = async () => {\r\n    this.props.history.push(\"/admin/vendor\");\r\n  };\r\n  render() {\r\n    const complaintsToRender = this.props.complaints.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const condition = customer && vendor;\r\n      return condition ? (\r\n        <>\r\n          <Media as=\"li\">\r\n            <img\r\n              width={64}\r\n              height={64}\r\n              className=\"mr-3\"\r\n              style={{ objectFit: \"cover\" }}\r\n              src={\r\n                customer.photo\r\n                  ? customer.photo\r\n                  : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n              }\r\n              alt=\"Generic placeholder\"\r\n            />\r\n            <Media.Body>\r\n              <h5>{customer.name}</h5>\r\n              <Row className=\"ml-1\">\r\n                <h6 onClick={this.redirectToVendor}>{vendor.name}</h6>\r\n              </Row>\r\n              <Row className=\"ml-1\">\r\n                <h6 className=\"text-muted\">{element.title}</h6>\r\n              </Row>\r\n              <p>{element.description}</p>\r\n              <p>\r\n                Date of Complaint:{\" \"}\r\n                <small className=\"text-muted\">{element.date}</small>\r\n              </p>\r\n            </Media.Body>\r\n          </Media>\r\n          <hr></hr>\r\n        </>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Card className=\"my-3\">\r\n            <Card.Header>\r\n              <h1>Complaints</h1>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <ul className=\"list-unstyled mt-5\">{complaintsToRender}</ul>\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Complaints));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Pagination,\r\n  Container,\r\n  Card,\r\n  Table,\r\n  Badge,\r\n  Form,\r\n  Col\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Reservations extends Component {\r\n  state = {\r\n    vendor: \"\",\r\n    customer: \"\",\r\n    minDate: null,\r\n    maxDate: null,\r\n    vendorType: \"All\"\r\n  };\r\n  redirectToCustomer = async uid => {\r\n    this.props.history.push(\"/admin/customer/\" + uid);\r\n  };\r\n  render() {\r\n    const reservationsToRender = this.props.reservations.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      console.log(\"----------------------\");\r\n      console.log(vendor);\r\n      console.log(\"----------------------\");\r\n\r\n      const date = new Date(element.date);\r\n      const minDate = new Date(this.state.minDate);\r\n      const maxDate = new Date(this.state.maxDate);\r\n      const condition =\r\n        vendor.name\r\n          .toLowerCase()\r\n          .includes(this.state.vendor.toLowerCase(), 0) &&\r\n        (this.state.vendorType === \"All\" ||\r\n          this.state.vendorType === vendor.category) &&\r\n        customer.name\r\n          .toLowerCase()\r\n          .includes(this.state.customer.toLowerCase(), 0) &&\r\n        (!this.state.minDate ||\r\n          !this.state.maxDate ||\r\n          (date >= minDate && date <= maxDate));\r\n      const badgeVariant =\r\n        element.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : element.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return condition ? (\r\n        <tr onClick={() => this.redirectToCustomer(customer.uid)}>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={customer.photo}\r\n            ></img>\r\n          </td>\r\n          <td>{customer.name}</td>\r\n          <td>{vendor ? vendor.name : \"Vendor Deleted\"}</td>\r\n          <td>{element.time}</td>\r\n          <td>{element.date}</td>\r\n          <td>{element.attandee}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{element.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Card className=\"my-3\">\r\n            <Card.Header>\r\n              <h1>Reservations</h1>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form.Row style={{ paddingTop: 10 }}>\r\n                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                  <Form.Label>Vendor Type</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    onChange={e =>\r\n                      this.setState({ vendorType: e.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"All\">All</option>\r\n                    <option value=\"Restaurants\">Restaurants</option>\r\n                    <option value=\"Cafes\">Cafes</option>\r\n                    <option value=\"Escape Rooms\">Escape Rooms</option>\r\n                    <option value=\"Events\">Events</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row style={{ paddingTop: 10 }}>\r\n                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                  <Form.Label>Vendor Name</Form.Label>\r\n                  <Form.Control\r\n                    onChange={e => this.setState({ vendor: e.target.value })}\r\n                    placeholder=\"Search By Vendor\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                  <Form.Label>Customer Name</Form.Label>\r\n                  <Form.Control\r\n                    onChange={e => this.setState({ customer: e.target.value })}\r\n                    placeholder=\"Search By Customer\"\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row style={{ paddingTop: 10 }}>\r\n                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                  <Form.Label>Min Date</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    onChange={e => this.setState({ minDate: e.target.value })}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridCity\">\r\n                  <Form.Label>Max Date</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    onChange={e => this.setState({ maxDate: e.target.value })}\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Table responsive striped hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Customer Image</th>\r\n                    <th>Customer Name</th>\r\n                    <th>Vendor Name</th>\r\n                    <th>Reservation Time</th>\r\n                    <th>Date of Reservation</th>\r\n                    <th>Number of Attendees</th>\r\n                    <th>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{reservationsToRender}</tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Reservations));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Table,\r\n  Pagination,\r\n  Media,\r\n  Badge\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nclass Customer extends Component {\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const customer = this.props.customers.find(\r\n      e => e.uid === this.props.match.params.uid\r\n    );\r\n    const reservations = this.props.reservations.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const complaints = this.props.complaints.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const reviews = this.props.reviews.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const reservationsToRender = reservations.map(reservation => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === reservation.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        reservation.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : reservation.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.clickHandler(vendor.uid)}>\r\n          <td>\r\n            <img\r\n              src={vendor ? vendor.photo_url : \"\"}\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                objectFit: \"cover\",\r\n                borderRadius: 40\r\n              }}\r\n            ></img>\r\n          </td>\r\n          <td>{vendor ? vendor.name : \"Vendor Deleted\"}</td>\r\n          <td>{reservation.time}</td>\r\n          <td>{reservation.date}</td>\r\n          <td>{reservation.attandee}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{reservation.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    const reviewsToRender = reviews.map(review => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === review.restaurant_uid\r\n      );\r\n\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, review.rating);\r\n      return (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              vendor.photo_url\r\n                ? vendor.photo_url\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{vendor.name}</h5>\r\n            <Row className=\"media-stars \">\r\n              {array.map(e => (\r\n                <ion-icon name={e}></ion-icon>\r\n              ))}\r\n            </Row>\r\n            <p>{review.comment}</p>\r\n          </Media.Body>\r\n        </Media>\r\n      );\r\n    });\r\n    const complaintsToRender = complaints.map(complaint => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === complaint.restaurant_uid\r\n      );\r\n\r\n      return (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              vendor.photo_url\r\n                ? vendor.photo_url\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{vendor.name}</h5>\r\n            <Row className=\"ml-1\">\r\n              <h6 className=\"text-muted\">{vendor.title}</h6>\r\n            </Row>\r\n            <p>{complaint.description}</p>\r\n            <p>\r\n              Date of Complaint:{\" \"}\r\n              <small className=\"text-muted\">{complaint.date}</small>\r\n            </p>\r\n          </Media.Body>\r\n        </Media>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"12\" md=\"3\">\r\n              <Card>\r\n                <Card.Body>\r\n                  <img\r\n                    style={{ width: \"100%\", height: 200, objectFit: \"cover\" }}\r\n                    src={customer.photo}\r\n                  ></img>\r\n                  <hr></hr>\r\n                  <p className=\"h5\">{customer.name}</p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Phone: <span className=\"text-muted\">{customer.number}</span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Email: <span className=\"text-muted\">{customer.email}</span>\r\n                  </p>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"mt-3 mt-md-0 mb-5\" xs=\"12\" md=\"9\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Customer History</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <h3>Reservations</h3>\r\n                  <Table responsive striped hover>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Image</th>\r\n                        <th>Vendor Name</th>\r\n                        <th>Reservation Time</th>\r\n                        <th>Date of Registration</th>\r\n                        <th>Number of Tables/Attendees</th>\r\n                        <th>Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>{reservationsToRender}</tbody>\r\n                  </Table>\r\n\r\n                  <hr></hr>\r\n                  {reviewsToRender.length > 0 ? (\r\n                    <>\r\n                      <h3>Reviews</h3>\r\n                      <ul className=\"list-unstyled mt-5\">{reviewsToRender}</ul>\r\n                    </>\r\n                  ) : (\r\n                    <p>No Reviews by this customer</p>\r\n                  )}\r\n                  <hr></hr>\r\n\r\n                  {complaintsToRender.length > 0 ? (\r\n                    <>\r\n                      <h3>Complaints</h3>\r\n                      <ul className=\"list-unstyled mt-5\">\r\n                        {complaintsToRender}\r\n                      </ul>\r\n                    </>\r\n                  ) : (\r\n                    <p>No Complaints by this customer</p>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Customer));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Pagination,\r\n  Table,\r\n  Badge,\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Modal\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport \"./DiscountVouchers.css\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nclass DiscountVouchers extends Component {\r\n  state = {\r\n    code: \"\",\r\n    expDate: \"\",\r\n    maxUses: 0,\r\n    vendor_type: \"Restaurants\",\r\n    show: false,\r\n    selected_uid: \"\"\r\n  };\r\n  showModal = () => {\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n  add = async () => {\r\n    await Firebase.addDiscountVoucher(\r\n      this.state.code,\r\n      this.state.expDate,\r\n      this.state.maxUses,\r\n      this.state.vendor_type\r\n    );\r\n    window.location.reload();\r\n  };\r\n  handler = (name, value) => {\r\n    console.log(value);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  dateHandler = e => {\r\n    const splitDate = e.target.value.split(\"-\");\r\n\r\n    this.setState({\r\n      expDate: splitDate[2] + \"/\" + splitDate[1] + \"/\" + splitDate[0]\r\n    });\r\n  };\r\n  block = async (uid, value) => {\r\n    await Firebase.updateDiscountVoucher(uid, !value);\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.map(e => {\r\n      return <option value={e.uid}>{e.name}</option>;\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Card className=\"my-3\">\r\n            <Card.Header>\r\n              <h1>Discount Vouchers</h1>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form>\r\n                <legend className=\"h4\">Add Discount Voucher</legend>\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>Code</Form.Label>\r\n                    <Form.Control\r\n                      onChange={e => this.handler(\"code\", e.target.value)}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Code\"\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"expiryDate\">\r\n                    <Form.Label>Expiry Date</Form.Label>\r\n                    <Form.Control\r\n                      onChange={this.dateHandler}\r\n                      type=\"date\"\r\n                      placeholder=\"Expiry Date\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                  <Form.Label>Vendor Type</Form.Label>\r\n                  <Form.Control\r\n                    onChange={e => this.handler(\"vendor_type\", e.target.value)}\r\n                    as=\"select\"\r\n                  >\r\n                    <option value={\"Restaurants\"}>{\"Restaurants\"}</option>\r\n                    <option value={\"Cafes\"}>{\"Cafes\"}</option>\r\n                    <option value={\"Escape Rooms\"}>{\"Escape Rooms\"}</option>\r\n                    <option value={\"Events\"}>{\"Events\"}</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formGridPassword\">\r\n                  <Form.Label>Max Number of Uses</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    placeholder=\"Max Uses\"\r\n                    value={this.state.maxUses}\r\n                    onChange={e => {\r\n                      if (e.target.value >= 0) {\r\n                        this.handler(\"maxUses\", e.target.value);\r\n                      }\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n                <Button\r\n                  onClick={this.add}\r\n                  block\r\n                  variant=\"primary\"\r\n                  type=\"button\"\r\n                >\r\n                  Add New Voucher\r\n                </Button>\r\n              </Form>\r\n              <hr></hr>\r\n              <Table striped hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Code</th>\r\n                    <th>Times Used</th>\r\n                    <th>Max Uses</th>\r\n                    <th>Expiry Date</th>\r\n                    <th>Vendor Type</th>\r\n                    <th>Status</th>\r\n                    <th>Change Status</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.props.vouchers.map(element => {\r\n                    const date = new Date();\r\n                    const splitExpDate = element.expDate.split(\"/\");\r\n                    const expDate = new Date(\r\n                      Number(splitExpDate[2]),\r\n                      Number(splitExpDate[1]) - 1,\r\n                      Number(splitExpDate[0])\r\n                    );\r\n                    const condition =\r\n                      element.isBlocked ||\r\n                      Number(element.maxUses) <= Number(element.numberOfUses) ||\r\n                      date > expDate;\r\n                    return (\r\n                      <tr>\r\n                        <td>{element.code}</td>\r\n                        <td>{element.numberOfUses}</td>\r\n\r\n                        <td>{element.maxUses}</td>\r\n                        <td>{element.expDate}</td>\r\n                        <td>{element.vendor_type}</td>\r\n                        <td>\r\n                          <Badge variant={condition ? \"danger\" : \"success\"}>\r\n                            {condition ? \"Unavailable\" : \"Available\"}\r\n                          </Badge>\r\n                        </td>\r\n                        <td\r\n                          onClick={() => {\r\n                            this.block(element.uid, element.isBlocked);\r\n                          }}\r\n                        >\r\n                          <ion-icon\r\n                            class={\r\n                              condition\r\n                                ? \"blockButton text-success\"\r\n                                : \"blockButton text-danger\"\r\n                            }\r\n                            name={\r\n                              condition\r\n                                ? \"checkmark-circle-outline\"\r\n                                : \"close-circle-outline\"\r\n                            }\r\n                          ></ion-icon>\r\n                        </td>\r\n                        <td\r\n                          onClick={async () => {\r\n                            this.setState({\r\n                              selected_uid: element.uid\r\n                            });\r\n                            this.showModal();\r\n                          }}\r\n                        >\r\n                          <ion-icon\r\n                            class=\"blockButton text-danger\"\r\n                            name=\"trash-outline\"\r\n                          ></ion-icon>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n              {/* <Pagination>\r\n                <Pagination.First />\r\n                <Pagination.Prev />\r\n                <Pagination.Item>{1}</Pagination.Item>\r\n                <Pagination.Item>{2}</Pagination.Item>\r\n                <Pagination.Item>{3}</Pagination.Item>\r\n                <Pagination.Item>{4}</Pagination.Item>\r\n                <Pagination.Item>{5}</Pagination.Item>\r\n                <Pagination.Next />\r\n                <Pagination.Last />\r\n              </Pagination> */}\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n        <Modal\r\n          centered\r\n          show={this.state.show}\r\n          onHide={this.showModal}\r\n          animation={true}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Are you sure you want to delete this voucher?\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={async () => {\r\n                await Firebase.deleteDiscount(this.state.selected_uid);\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              Yes\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={this.showModal}>\r\n              No\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DiscountVouchers);\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Pagination,\r\n  Container,\r\n  Card,\r\n  Table,\r\n  Badge,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Carousel\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\n\r\nclass Slideshow extends Component {\r\n  state = {\r\n    file: null,\r\n    vendor_uid: \"\"\r\n  };\r\n  handler = (name, value) => {\r\n    console.log(value);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  add = async () => {\r\n    const fileNameSplit = this.state.file.name.split(\".\");\r\n    const extension = fileNameSplit[fileNameSplit.length - 1];\r\n    await Firebase.addSlideShow(\r\n      this.state.file,\r\n      extension,\r\n      this.state.vendor_uid\r\n    );\r\n    window.location.reload();\r\n  };\r\n  fileHandler = e => {\r\n    this.setState({\r\n      file: e.target.files[0]\r\n    });\r\n  };\r\n  delete = async uid => {\r\n    await Firebase.deleteSlideshow(uid);\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.map(e => {\r\n      return <option value={e.uid}>{e.name}</option>;\r\n    });\r\n    const slideshows = this.props.slideshows.map(e => {\r\n      const vendor = this.props.vendors.find(v => v.uid === e.vendor_uid);\r\n      return (\r\n        <Carousel.Item>\r\n          <img\r\n            style={{\r\n              height: 500,\r\n              objectFit: \"cover\"\r\n            }}\r\n            className=\"d-block w-100\"\r\n            src={e.image_url}\r\n          />\r\n          <Carousel.Caption\r\n            style={{\r\n              background: \"rgba(0,0,0,0.5)\",\r\n              padding: 10,\r\n              borderRadius: 10\r\n            }}\r\n          >\r\n            <h3>{vendor.name}</h3>\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"button\"\r\n              style={{\r\n                margin: 15\r\n              }}\r\n              onClick={() => this.delete(e.uid)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xs={12}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Slideshow</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  {slideshows.length > 0 ? (\r\n                    <Carousel>{slideshows}</Carousel>\r\n                  ) : (\r\n                    <p>No Slideshows have been added yet</p>\r\n                  )}\r\n                  <hr></hr>\r\n                  <Form>\r\n                    <legend className=\"h4\">Add New Banner</legend>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>Vendor</Form.Label>\r\n                      <Form.Control\r\n                        onChange={e =>\r\n                          this.handler(\"vendor_uid\", e.target.value)\r\n                        }\r\n                        as=\"select\"\r\n                      >\r\n                        {vendors}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGridPassword\">\r\n                      <Form.Label>Image</Form.Label>\r\n                      <Form.Control\r\n                        onChange={this.fileHandler}\r\n                        type=\"file\"\r\n                        placeholder=\"Image\"\r\n                        accept=\"image/*\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Button\r\n                      onClick={this.add}\r\n                      block\r\n                      variant=\"primary\"\r\n                      type=\"button\"\r\n                    >\r\n                      Add Banner\r\n                    </Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Slideshow));\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { BrowserRouter, Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport Home from \"../Pages/Home/Home\";\r\nimport TermsAndConditions from \"../Pages/TermsAndConditions/TermsAndConditions\";\r\nimport PrivacyPolicy from \"../Pages/PrivacyPolicy/PrivacyPolicy\";\r\nimport Contact from \"../Pages/Contact/Contact\";\r\nimport AdminLogin from \"../Pages/Admin/Login/Login\";\r\nimport Dashboard from \"../Pages/Admin/Dashboard/Dashboard\";\r\nimport Vendor from \"../Pages/Admin/Vendor/Vendor\";\r\nimport Complaints from \"../Pages/Admin/Complaints/Complaints\";\r\nimport Reservations from \"../Pages/Admin/Reservations/Reservations\";\r\nimport Customer from \"../Pages/Admin/Customer/Customer\";\r\nimport DiscountVouchers from \"../Pages/Admin/DiscountVouchers/DiscountVouchers\";\r\nimport Slideshow from \"../Pages/Admin/Slideshow/Slideshow\";\r\nimport { mapDispatchToProps, mapStateToProps } from \"../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAdmin } from \"../Config/localStorage\";\r\nimport Firebase from \"../Firebase/Firebase\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport FooterAndButtons from \"../Components/FooterAndButtons/FooterAndButtons\";\r\nclass Router extends Component {\r\n  state = {\r\n    loading: true\r\n  };\r\n  componentDidMount = async () => {\r\n    const admin = getAdmin();\r\n    if (admin) {\r\n      const vendors = await Firebase.getRestaurants();\r\n      this.props.updateVendors(vendors);\r\n      const reviews = await Firebase.getAllReviews();\r\n      this.props.updateReviews(reviews);\r\n      const complaints = await Firebase.getComplaints();\r\n      this.props.updateComplaints(complaints);\r\n      const customers = await Firebase.getCustomers();\r\n      this.props.updateCustomers(customers);\r\n      const vouchers = await Firebase.getDiscountVouchers();\r\n      this.props.updateDiscountVouchers(vouchers);\r\n      const notifications = await Firebase.getNotifications(admin.uid);\r\n      this.props.updateNotifications(notifications);\r\n      const reservations = await Firebase.getReservations();\r\n      this.props.updateReservations(reservations);\r\n      const slideshows = await Firebase.getSlideShows();\r\n      this.props.updateSlideshows(slideshows);\r\n      Firebase.listenToVendors(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newVendors = [...this.props.vendors];\r\n        const foundIndex = newVendors.findIndex(e => e.uid == updatedValue.uid);\r\n        if (foundIndex >= 0) {\r\n          newVendors[foundIndex] = updatedValue;\r\n        } else {\r\n          newVendors.push(updatedValue);\r\n        }\r\n        this.props.updateVendors(newVendors);\r\n      });\r\n      Firebase.listenToComplaints(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newComplaints = [...this.props.complaints];\r\n        const foundIndex = newComplaints.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newComplaints[foundIndex] = updatedValue;\r\n        } else {\r\n          newComplaints.push(updatedValue);\r\n        }\r\n        this.props.updateComplaints(newComplaints);\r\n      });\r\n      Firebase.listenToCustomers(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newCustomers = [...this.props.customers];\r\n        const foundIndex = newCustomers.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newCustomers[foundIndex] = updatedValue;\r\n        } else {\r\n          newCustomers.push(updatedValue);\r\n        }\r\n        this.props.updateCustomers(newCustomers);\r\n      });\r\n      Firebase.listenToDiscountVouchers(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newVouchers = [...this.props.vouchers];\r\n        const foundIndex = newVouchers.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newVouchers[foundIndex] = updatedValue;\r\n        } else {\r\n          newVouchers.push(updatedValue);\r\n        }\r\n        this.props.updateDiscountVouchers(newVouchers);\r\n      });\r\n      Firebase.listenToNotifications(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newNotifications = [...this.props.notifications];\r\n        const foundIndex = newNotifications.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newNotifications[foundIndex] = updatedValue;\r\n        } else {\r\n          newNotifications.push(updatedValue);\r\n        }\r\n        this.props.updateNotifications(newNotifications);\r\n      });\r\n      Firebase.listenToReservations(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newReservations = [...this.props.reservations];\r\n        const foundIndex = newReservations.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newReservations[foundIndex] = updatedValue;\r\n        } else {\r\n          newReservations.push(updatedValue);\r\n        }\r\n        this.props.updateReservations(newReservations);\r\n      });\r\n      Firebase.listenToReviews(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newReviews = [...this.props.reviews];\r\n        const foundIndex = newReviews.findIndex(e => e.uid == updatedValue.uid);\r\n        if (foundIndex >= 0) {\r\n          newReviews[foundIndex] = updatedValue;\r\n        } else {\r\n          newReviews.push(updatedValue);\r\n        }\r\n        this.props.updateReviews(newReviews);\r\n      });\r\n\r\n      Firebase.listenToSlideShows(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newSlideshows = [...this.props.slideshows];\r\n        const foundIndex = newSlideshows.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newSlideshows[foundIndex] = updatedValue;\r\n        } else {\r\n          newSlideshows.push(updatedValue);\r\n        }\r\n        this.props.updateSlideshows(newSlideshows);\r\n      });\r\n      this.props.updateLogin(admin);\r\n    }\r\n    this.setState({ loading: false });\r\n  };\r\n  render() {\r\n    return this.state.loading ? (\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        <Spinner\r\n          style={{ width: 65, height: 65 }}\r\n          animation=\"border\"\r\n          variant=\"primary\"\r\n        />\r\n      </div>\r\n    ) : (\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home></Home>\r\n          </Route>\r\n          <Route exact path=\"/contact\">\r\n            <Contact></Contact>\r\n          </Route>\r\n          <Route exact path=\"/terms\">\r\n            <TermsAndConditions></TermsAndConditions>\r\n          </Route>\r\n          <Route exact path=\"/privacy\">\r\n            <PrivacyPolicy></PrivacyPolicy>\r\n          </Route>\r\n          {this.props.loggedInAdmin !== null ? (\r\n            <>\r\n              <Route exact path=\"/admin/\">\r\n                <Dashboard></Dashboard>\r\n              </Route>\r\n              <Route exact path=\"/admin/vendor/:uid\">\r\n                <Vendor></Vendor>\r\n              </Route>\r\n              <Route exact path=\"/admin/complaints\">\r\n                <Complaints></Complaints>\r\n              </Route>\r\n              <Route exact path=\"/admin/customer/:uid\">\r\n                <Customer></Customer>\r\n              </Route>\r\n              <Route exact path=\"/admin/discount\">\r\n                <DiscountVouchers></DiscountVouchers>\r\n              </Route>\r\n              <Route exact path=\"/admin/reservations\">\r\n                <Reservations></Reservations>\r\n              </Route>\r\n              <Route exact path=\"/admin/slideshow\">\r\n                <Slideshow></Slideshow>\r\n              </Route>\r\n            </>\r\n          ) : (\r\n            <Route exact path=\"/admin/\">\r\n              <AdminLogin></AdminLogin>\r\n            </Route>\r\n          )}\r\n        </Switch>\r\n        <FooterAndButtons></FooterAndButtons>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Router);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./Store/Store\";\nimport Router from \"./Navigation/Router\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={Store}>\n        <Router></Router>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.4361f2b5.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.2d5cad77.mp4\";"],"sourceRoot":""}