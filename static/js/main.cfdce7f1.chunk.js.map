{"version":3,"sources":["Reducers/VendorReducer.js","Actions/ActionTypes.js","Reducers/AdminReducer.js","Store/Store.js","Components/HomeNavbar/HomeNavbar.js","Components/Footer/Footer.js","Pages/Home/Home.js","Pages/TermsAndConditions/TermsAndConditions.js","Pages/PrivacyPolicy/PrivacyPolicy.js","Pages/Contact/Contact.js","Config/index.js","Firebase/Firebase.js","Config/localStorage.js","Config/AdminMapping.js","Pages/Admin/Login/Login.js","Components/AdminNavbar/AdminNavbar.js","Pages/Admin/Dashboard/Dashboard.js","Pages/Admin/Vendor/Vendor.js","Pages/Admin/Complaints/Complaints.js","Pages/Admin/Reservations/Reservations.js","Pages/Admin/Customer/Customer.js","Pages/Admin/DiscountVouchers/DiscountVouchers.js","Navigation/Router.js","App.js","serviceWorker.js","index.js","Images/logo.png","Images/logo.mp4"],"names":["initialState","VendorReducer","state","type","payload","AdminActionTypes","loggedInAdmin","reservations","vendors","notifications","complaints","vouchers","reviews","customers","AdminReducer","store","createStore","combineReducers","HomeNavbar","className","href","style","width","src","Logo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Footer","Home","autoPlay","controls","muted","TermsAndConditions","PrivacyPolicy","Contact","email","subject","message","changeState","name","value","setState","sendMail","a","async","trim","templateParams","from_name","to_name","reply_to","message_html","emailjs","templateParams2","alert","props","history","push","for","onChange","e","target","placeholder","aria-describedby","rows","onClick","this","withRouter","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firebase","Firebase","login","password","auth","signInWithEmailAndPassword","response","user","getAdmin","uid","database","ref","once","getReservations","val","Object","keys","map","key","getRestaurants","restaurants","getDishes","dishes","getReviews","ratings","getAllReviews","forEach","data","k","getComplaints","getCustomers","getNotifications","addDiscountVoucher","code","expDate","maxUses","set","numberOfUses","isBlocked","getDiscountVouchers","discounts","listenToNotifications","callBack","on","listenToVendors","listenToReviews","listenToComplaints","listenToDiscountVouchers","listenToReservations","listenToDishes","listenToCustomers","deleteVendor","remove","restrictOrder","update","is_restrict_order","updateProcessingFee","processing_fee","updateProcessingFeeAndVerify","is_number_verified","is_verified","updateDiscountVoucher","setAdmin","localStorage","setItem","JSON","stringify","parse","getItem","removeAdmin","removeItem","mapStateToProps","mapDispatchToProps","dispatch","updateLogin","updateComplaints","updateDiscountVouchers","updateNotifications","updateReservations","updateReviews","updateCustomers","updateVendors","Login","marginTop","htmlFor","connect","AdminNavbar","logout","filter","Dropdown","Item","Navbar","bg","expand","Brand","Toggle","Collapse","Nav","Link","variant","Badge","pill","length","Menu","Button","Dashboard","modalShow","selectedVendor","procFee","clickHandler","element","category","escapeRooms","cafes","events","unverified","Container","Row","Col","xs","Card","Header","Body","Tabs","defaultActiveKey","Tab","eventKey","title","Table","striped","hover","responsive","height","borderRadius","objectFit","photo_url","Pagination","First","Prev","Next","Last","reservation_fee","size","Modal","aria-labelledby","centered","show","onHide","closeButton","Title","InputGroup","Prepend","Text","FormControl","newProFee","Vendor","address","branch","close","instant_data","available","is_email_verfied","llocation","lat","llong","number","bank_details","accountNumber","account_name","bank_name","componentDidMount","vendor","find","match","params","console","log","restaurant_uid","reviewsCustomerAndVendorJoin","customer","c","customer_uid","restaurant","array","fill","rating","deleteHandler","reservationsToRender","badgeVariant","status","photo","time","date","attandee","complaintsToRender","Media","as","alt","redirectToVendor","description","md","Form","Check","isValid","label","star","comment","window","location","reload","Complaints","Reservations","redirectToCustomer","reservation_key","Customer","r","reservation","reviewsToRender","review","complaint","DiscountVouchers","add","handler","dateHandler","splitDate","split","block","Group","controlId","Label","Control","Date","splitExpDate","Number","condition","class","Router","loading","admin","snapshot","updatedValue","newVendors","foundIndex","findIndex","newComplaints","newCustomers","newVouchers","newNotifications","newReservations","newReviews","display","alignItems","justifyContent","Spinner","animation","basename","exact","path","App","Store","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.cfdce7f1.chunk.js","sourcesContent":["const initialState = {};\r\n\r\nconst VendorReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default VendorReducer;\r\n","const AdminActionTypes = {\r\n  ADMIN_UPDATE_LOGIN_STATUS: \"ADMIN_UPDATE_LOGIN_STATUS\",\r\n  UPDATE_NOTIFICATIONS: \"UPDATE_NOTIFICATIONS\",\r\n  UPDATE_VENDORS: \"UPDATE_VENDORS\",\r\n  UPDATE_RESERVATIONS: \"UPDATE_RESERVATIONS\",\r\n  UPDATE_COMPLAINTS: \"UPDATE_COMPLAINTS\",\r\n  UPDATE_DISCOUNT_VOUCHERS: \"UPDATE_DISCOUNT_VOUCHERS\",\r\n  UPDATE_REVIEWS: \"UPDATE_REVIEWS\",\r\n  UPDATE_CUSTOMERS: \"UPDATE_CUSTOMERS\"\r\n};\r\nconst VendorActionTypes = {\r\n  ADMIN_UPDATE_LOGIN_STATUS: \"ADMIN_UPDATE_LOGIN_STATUS\",\r\n  UPDATE_NOTIFICATIONS: \"UPDATE_NOTIFICATIONS\",\r\n  UPDATE_VENDORS: \"UPDATE_VENDORS\",\r\n  UPDATE_RESERVATIONS: \"UPDATE_RESERVATIONS\",\r\n  UPDATE_COMPLAINTS: \"UPDATE_COMPLAINTS\",\r\n  UPDATE_DISCOUNT_VOUCHERS: \"UPDATE_DISCOUNT_VOUCHERS\",\r\n  UPDATE_REVIEWS: \"UPDATE_REVIEWS\"\r\n};\r\nexport { AdminActionTypes, VendorActionTypes };\r\n","import { AdminActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  loggedInAdmin: null,\r\n  reservations: [],\r\n  vendors: [],\r\n  notifications: [],\r\n  complaints: [],\r\n  vouchers: [],\r\n  reviews: [],\r\n  customers: []\r\n};\r\nconst AdminReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case AdminActionTypes.ADMIN_UPDATE_LOGIN_STATUS:\r\n      return { ...state, loggedInAdmin: payload };\r\n\r\n    case AdminActionTypes.UPDATE_COMPLAINTS:\r\n      return { ...state, complaints: payload };\r\n\r\n    case AdminActionTypes.UPDATE_DISCOUNT_VOUCHERS:\r\n      return { ...state, vouchers: payload };\r\n\r\n    case AdminActionTypes.UPDATE_NOTIFICATIONS:\r\n      return { ...state, notifications: payload };\r\n\r\n    case AdminActionTypes.UPDATE_RESERVATIONS:\r\n      return { ...state, reservations: payload };\r\n\r\n    case AdminActionTypes.UPDATE_REVIEWS:\r\n      return { ...state, reviews: payload };\r\n\r\n    case AdminActionTypes.UPDATE_VENDORS:\r\n      return { ...state, vendors: payload };\r\n\r\n    case AdminActionTypes.UPDATE_CUSTOMERS:\r\n      return { ...state, customers: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AdminReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport VendorReducer from \"../Reducers/VendorReducer\";\r\nimport AdminReducer from \"../Reducers/AdminReducer\";\r\n\r\nconst store = createStore(combineReducers({ VendorReducer, AdminReducer }));\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport \"./HomeNavbar.css\";\r\nexport default class HomeNavbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"home-navbar navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          <img\r\n            style={{\r\n              width: \"100px\"\r\n            }}\r\n            src={Logo}\r\n          ></img>\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\"></ul>\r\n          <div className=\"login-buttons my-2 my-lg-0\">\r\n            <a\r\n              href=\"/vendor/login\"\r\n              className=\"btn text-light btn-primary my-2 my-sm-0\"\r\n            >\r\n              Vendor Login\r\n            </a>\r\n            <a\r\n              href=\"/admin/\"\r\n              className=\"btn text-light btn-primary mx-2 my-2 my-sm-0\"\r\n            >\r\n              Admin Login\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"row bg-light\">\r\n        <p className=\"col-12 col-md-3 order-md-first order-last\">\r\n          &copy;Reserve 2020\r\n        </p>\r\n        <div className=\"offset-md-4 col-12 col-md-4 offet-5 row\">\r\n          <a className=\" col-12 col-md-4 text-md-right\" href=\"/contact\">\r\n            Contact\r\n          </a>\r\n          <a className=\" col-12 col-md-4\" href=\"/terms\">\r\n            Terms & Conditions\r\n          </a>\r\n          <a className=\" col-12 col-md-4\" href=\"/privacy\">\r\n            Privacy Policy\r\n          </a>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Logo from \"../../Images/logo.mp4\";\r\nimport \"./Home.css\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <video\r\n              autoPlay={true}\r\n              controls={false}\r\n              muted\r\n              className=\"logo\"\r\n              src={Logo}\r\n            ></video>\r\n          </div>\r\n          <div className=\"flex social-btns\">\r\n            <a className=\"app-btn blu flex vert\" href=\"https://www.apple.com\">\r\n              <i className=\"fab fa-apple\"></i>\r\n              <p className=\"text\">\r\n                Available on the <br />{\" \"}\r\n                <span className=\"big-txt\">App Store</span>\r\n              </p>\r\n            </a>\r\n\r\n            <a className=\"app-btn blu flex vert\" href=\"https://www.google.com\">\r\n              <i className=\"fab fa-google-play\"></i>\r\n              <p className=\"text\">\r\n                Get it on <br /> <span className=\"big-txt\">Google Play</span>\r\n              </p>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"container-fluid\">\r\n          <Footer></Footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./TermsAndConditions.css\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nexport default class TermsAndConditions extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./PrivacyPolicy.css\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nexport default class PrivacyPolicy extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nimport \"./Contact.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass Contact extends Component {\r\n  state = {\r\n    email: \"\",\r\n    subject: \"Complaint\",\r\n    message: \"\"\r\n  };\r\n  changeState = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  sendMail = async () => {\r\n    if (\r\n      this.state.email.trim() !== \"\" &&\r\n      this.state.subject.trim() !== \"\" &&\r\n      this.state.message.trim() !== \"\"\r\n    ) {\r\n      let templateParams = {\r\n        from_name: this.state.email.trim(),\r\n        to_name: \"ibrahimnabi80@gmail.com\",\r\n        reply_to: this.state.email.trim(),\r\n        subject: this.state.subject,\r\n        message_html: this.state.message\r\n      };\r\n      emailjs.send(\r\n        \"reserve_contact\",\r\n        \"template_KiH1F4zS\",\r\n        templateParams,\r\n        \"user_aVbbjsfKbS0Qub1NMA29M\"\r\n      );\r\n      let templateParams2 = {\r\n        from_name: \"ibrahimnabi80@gmail.com\",\r\n        to_name: this.state.email.trim(),\r\n        subject: \"Response\",\r\n        message_html:\r\n          \"We received your message and we will reply soon. Your inquiry id is 001\"\r\n      };\r\n      emailjs.send(\r\n        \"reserve_contact\",\r\n        \"template_KiH1F4zS\",\r\n        templateParams2,\r\n        \"user_aVbbjsfKbS0Qub1NMA29M\"\r\n      );\r\n      alert(\"We received your message and we will reply soon\");\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      alert(\"Please fill all field before submitting.\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <div className=\"container\">\r\n          <form className=\" contact-form\">\r\n            <legend>Contact Form</legend>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleFormControlSelect1\">Select Subject</label>\r\n              <select\r\n                onChange={e => this.changeState(\"subject\", e.target.value)}\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlSelect1\"\r\n              >\r\n                <option value=\"Complaint\">Complaint</option>\r\n                <option value=\"Inquiry\">Inquiry</option>\r\n                <option value=\"Feedback\">Feedback</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Enter Your Email Address</label>\r\n              <input\r\n                onChange={e => this.changeState(\"email\", e.target.value)}\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                placeholder=\"Email Address\"\r\n                aria-describedby=\"emailHelp\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleFormControlTextarea1\">\r\n                Enter Your Message\r\n              </label>\r\n              <textarea\r\n                onChange={e => this.changeState(\"message\", e.target.value)}\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlTextarea1\"\r\n                rows=\"3\"\r\n                placeholder=\"Message\"\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              onClick={this.sendMail}\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Contact);\r\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyB7qtP77Rx3HmirB5lyWJ90RYeMu4TVnyc\",\r\n  authDomain: \"reserve-restaurant-80ec7.firebaseapp.com\",\r\n  databaseURL: \"https://reserve-restaurant-80ec7.firebaseio.com\",\r\n  projectId: \"reserve-restaurant-80ec7\",\r\n  storageBucket: \"reserve-restaurant-80ec7.appspot.com\",\r\n  messagingSenderId: \"1022182989367\",\r\n  appId: \"1:1022182989367:web:12692d873c484a842be9b2\",\r\n  measurementId: \"G-CSDM8VMGL4\"\r\n};\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyDpsl140hY7lCFfPw_CV9fxbDsbbU2YN6U\",\r\n//   authDomain: \"reserve-1d4e1.firebaseapp.com\",\r\n//   databaseURL: \"https://reserve-1d4e1.firebaseio.com\",\r\n//   projectId: \"reserve-1d4e1\",\r\n//   storageBucket: \"reserve-1d4e1.appspot.com\",\r\n//   messagingSenderId: \"1028452700122\",\r\n//   appId: \"1:1028452700122:web:852c13d9b3cd2045227ae3\",\r\n//   measurementId: \"G-T7D59TGW8L\"\r\n// };\r\nexport default firebaseConfig;\r\n","import * as firebase from \"firebase\";\r\nimport firebaseConfig from \"../Config\";\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nconst getAdmin = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/admin/\" + uid)\r\n    .once(\"value\");\r\n};\r\nconst login = async (email, password) => {\r\n  const response = await app.auth().signInWithEmailAndPassword(email, password);\r\n  return response.user;\r\n};\r\nconst getReservations = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const reservations = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return reservations;\r\n};\r\nconst getRestaurants = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const restaurants = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return restaurants;\r\n};\r\nconst getDishes = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const dishes = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return dishes;\r\n};\r\nconst getReviews = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/ratings/\" + uid)\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const ratings = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return ratings;\r\n};\r\nconst getNotifications = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  if (value) {\r\n    const notifications = Object.keys(value).map(key => {\r\n      return value[key];\r\n    });\r\n    return notifications;\r\n  }\r\n  return [];\r\n};\r\nconst getAllReviews = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/ratings/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const ratings = [];\r\n  Object.keys(value).forEach(key => {\r\n    const data = Object.keys(value[key]).map(k => value[key][k]);\r\n    ratings.push(...data);\r\n  });\r\n  return ratings;\r\n};\r\nconst getComplaints = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/complaints/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const complaints = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return complaints;\r\n};\r\nconst getCustomers = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/customers/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const customers = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return customers;\r\n};\r\nconst addDiscountVoucher = async (code, expDate, maxUses) => {\r\n  const key = await app\r\n    .database()\r\n    .ref(\"/discounts\")\r\n    .push();\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + key.key)\r\n    .set({\r\n      code,\r\n      expDate,\r\n      maxUses,\r\n      numberOfUses: 0,\r\n      isBlocked: false,\r\n      uid: key.key\r\n    });\r\n};\r\nconst updateDiscountVoucher = async (uid, isBlocked) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + uid)\r\n    .update({\r\n      isBlocked\r\n    });\r\n};\r\nconst getDiscountVouchers = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/discounts/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const discounts = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return discounts;\r\n};\r\nconst listenToNotifications = async (callBack, uid) => {\r\n  app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToVendors = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToReviews = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/reviews/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst deleteVendor = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .remove();\r\n};\r\nconst listenToComplaints = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/complaints/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToDiscountVouchers = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/discounts/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToReservations = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToDishes = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToCustomers = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/customers/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst restrictOrder = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      is_restrict_order: value\r\n    });\r\n};\r\nconst updateProcessingFee = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      processing_fee: value + \"\"\r\n    });\r\n};\r\nconst updateProcessingFeeAndVerify = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      processing_fee: value + \"\",\r\n      is_number_verified: true,\r\n      is_verified: true\r\n    });\r\n};\r\nconst Firebase = {\r\n  login,\r\n  getAdmin,\r\n  getReservations,\r\n  getRestaurants,\r\n  getDishes,\r\n  getReviews,\r\n  getAllReviews,\r\n  getComplaints,\r\n  getCustomers,\r\n  getNotifications,\r\n  addDiscountVoucher,\r\n  getDiscountVouchers,\r\n  listenToNotifications,\r\n  listenToVendors,\r\n  listenToReviews,\r\n  listenToComplaints,\r\n  listenToDiscountVouchers,\r\n  listenToReservations,\r\n  listenToDishes,\r\n  listenToCustomers,\r\n  deleteVendor,\r\n  restrictOrder,\r\n  updateProcessingFee,\r\n  updateProcessingFeeAndVerify,\r\n  updateDiscountVoucher\r\n};\r\nexport default Firebase;\r\n","const setAdmin = user => {\r\n  localStorage.setItem(\"admin\", JSON.stringify(user));\r\n};\r\nconst getAdmin = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"admin\"));\r\n  return user;\r\n};\r\nconst removeAdmin = () => {\r\n  localStorage.removeItem(\"admin\");\r\n};\r\n\r\nexport { setAdmin, getAdmin, removeAdmin };\r\n","import { AdminActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst mapStateToProps = state => {\r\n  return state.AdminReducer;\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateLogin: user =>\r\n      dispatch({\r\n        type: AdminActionTypes.ADMIN_UPDATE_LOGIN_STATUS,\r\n        payload: user\r\n      }),\r\n    updateComplaints: complaints =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_COMPLAINTS,\r\n        payload: complaints\r\n      }),\r\n    updateDiscountVouchers: vouchers =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_DISCOUNT_VOUCHERS,\r\n        payload: vouchers\r\n      }),\r\n    updateNotifications: notifications =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_NOTIFICATIONS,\r\n        payload: notifications\r\n      }),\r\n    updateReservations: reservations =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_RESERVATIONS,\r\n        payload: reservations\r\n      }),\r\n    updateReviews: reviews =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_REVIEWS, payload: reviews }),\r\n    updateCustomers: customers =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_CUSTOMERS, payload: customers }),\r\n    updateVendors: vendors =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_VENDORS, payload: vendors })\r\n  };\r\n};\r\nexport { mapDispatchToProps, mapStateToProps };\r\n","import React, { Component } from \"react\";\r\nimport \"./Login.css\";\r\nimport Logo from \"../../../Images/logo.png\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setAdmin } from \"../../../Config/localStorage\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  changeState = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  login = async () => {\r\n    if (this.state.email.trim() !== \"\" && this.state.password.trim() !== \"\") {\r\n      const user = await Firebase.login(this.state.email, this.state.password);\r\n      setAdmin(user);\r\n      this.props.updateLogin(user);\r\n    } else {\r\n      alert(\"Your have to fill all fields in order to login\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <HomeNavbar></HomeNavbar> */}\r\n        <div className=\"container \">\r\n          <div className=\"row justify-content-center\">\r\n            <img\r\n              style={{\r\n                width: \"20%\",\r\n                marginTop: \"10vh\"\r\n              }}\r\n              src={Logo}\r\n            ></img>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <form className=\"loginAdmin col-10 col-md-6\">\r\n              <legend>Admin Login</legend>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">\r\n                  Enter Your Email Address\r\n                </label>\r\n                <input\r\n                  onChange={e => this.changeState(\"email\", e.target.value)}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  placeholder=\"Email Address\"\r\n                  aria-describedby=\"emailHelp\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Enter Your Password</label>\r\n                <input\r\n                  onChange={e => this.changeState(\"password\", e.target.value)}\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n              <button\r\n                onClick={this.login}\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                Login\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        {/* <Footer></Footer> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport \"./AdminNavbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeAdmin } from \"../../Config/localStorage\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../../Config/AdminMapping\";\r\nclass AdminNavbar extends Component {\r\n  logout = async () => {\r\n    removeAdmin();\r\n    this.props.updateLogin(null);\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(e => !e.is_verified);\r\n    const notifications = vendors.map(e => {\r\n      return (\r\n        <Dropdown.Item href=\"#/action-1\">\r\n          Verify New Vendor {e.name}\r\n        </Dropdown.Item>\r\n      );\r\n    });\r\n    return (\r\n      <Navbar className=\"admin-nav\" bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/admin/\">\r\n          <img style={{ width: 100 }} src={Logo}></img>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto admin-nav-links\">\r\n            <Nav.Link href=\"/admin\">Vendors</Nav.Link>\r\n            <Nav.Link href=\"/admin/reservations\">Reservations</Nav.Link>\r\n            <Nav.Link href=\"/admin/discount\">Discount Vouchers</Nav.Link>\r\n            <Nav.Link href=\"/admin/complaints\">Complaints</Nav.Link>\r\n            <Nav.Link href=\"/admin/slideshow\">Slideshow</Nav.Link>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">\r\n                <ion-icon name=\"notifications-outline\"></ion-icon>\r\n                <Badge pill className=\"notifications\" variant=\"primary\">\r\n                  {vendors.length}\r\n                </Badge>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>{notifications}</Dropdown.Menu>\r\n            </Dropdown>\r\n          </Nav>\r\n          <Link>\r\n            <Button\r\n              onClick={this.logout}\r\n              type=\"button\"\r\n              variant=\"outline-primary\"\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminNavbar);\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Tabs,\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Pagination,\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"./Dashboard.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nclass Dashboard extends Component {\r\n  state = {\r\n    modalShow: false,\r\n    selectedVendor: \"\",\r\n    procFee: 0\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const restaurants = this.props.vendors.filter(\r\n      element => element.category === \"Restaurants\" && element.is_verified\r\n    );\r\n    const escapeRooms = this.props.vendors.filter(\r\n      element => element.category === \"Escape Rooms\" && element.is_verified\r\n    );\r\n    const cafes = this.props.vendors.filter(\r\n      element => element.category === \"Cafes\" && element.is_verified\r\n    );\r\n    const events = this.props.vendors.filter(\r\n      element => element.category === \"Events\" && element.is_verified\r\n    );\r\n    const unverified = this.props.vendors.filter(\r\n      element => !element.is_verified\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xs={12}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Vendors</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Tabs\r\n                    variant=\"pills\"\r\n                    defaultActiveKey=\"Restaurants\"\r\n                    id=\"noanim-tab-example\"\r\n                  >\r\n                    <Tab eventKey=\"Restaurants\" title=\"Restaurants\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {restaurants.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <td>\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={element.photo_url}\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unverified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Cafe\" title=\"Cafe\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {cafes.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <td>\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={element.photo_url}\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unerified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Escape Rooms\" title=\"Escape Rooms\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {escapeRooms.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <td>\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={element.photo_url}\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unerified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Event Organizers\" title=\"Event Organizers\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {events.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <td>\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={element.photo_url}\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unerified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Unverified\" title=\"Unverified\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Reservation Price</th>\r\n                            <th>Status</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {unverified.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr>\r\n                                  <td\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={\r\n                                        element.photo_url\r\n                                          ? element.photo_url\r\n                                          : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                                      }\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>{element.reservation_fee}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unerified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                  <td>\r\n                                    <Button\r\n                                      onClick={() => {\r\n                                        this.setState({\r\n                                          modalShow: true,\r\n                                          selectedVendor: element.uid\r\n                                        });\r\n                                      }}\r\n                                      variant=\"success\"\r\n                                      size=\"sm\"\r\n                                    >\r\n                                      Verify\r\n                                    </Button>\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                  </Tabs>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>{\" \"}\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Processing Fee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  Processing Fee\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                type=\"number\"\r\n                onChange={e => {\r\n                  this.setState({\r\n                    newProFee: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={async () => {\r\n                await Firebase.updateProcessingFeeAndVerify(\r\n                  this.state.newProFee,\r\n                  this.state.selectedVendor\r\n                );\r\n                this.setState({ modalShow: false });\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.setState({ modalShow: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Dashboard));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  Pagination,\r\n  Table,\r\n  Badge,\r\n  Media,\r\n  Form,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport \"./Vendor.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nclass Vendor extends Component {\r\n  state = {\r\n    address: \"\",\r\n    branch: \"\",\r\n    category: \"\",\r\n    close: false,\r\n    email: \"\",\r\n    instant_data: {\r\n      available: 0\r\n    },\r\n    modalShow: false,\r\n    is_email_verfied: false,\r\n    is_number_verified: false,\r\n    is_restrict_order: false,\r\n    is_verified: false,\r\n    llocation: {\r\n      lat: 0,\r\n      llong: 0\r\n    },\r\n    name: \"\",\r\n    number: \"\",\r\n    photo_url: \"\",\r\n    reservation_fee: \"0\",\r\n    processing_fee: \"0\",\r\n    uid: \"LEa50vSb5KTbwvz3FgToiDwvzKm1\",\r\n    bank_details: {\r\n      accountNumber: \"\",\r\n      account_name: \"\",\r\n      bank_name: \"\"\r\n    },\r\n    reviews: [],\r\n    newProFee: 0\r\n  };\r\n  restrictOrder = async uid => {\r\n    await Firebase.restrictOrder(!this.state.is_restrict_order, uid);\r\n    this.setState({\r\n      is_restrict_order: !this.state.is_restrict_order\r\n    });\r\n  };\r\n  componentDidMount = async () => {\r\n    const vendor = this.props.vendors.find(\r\n      element => element.uid === this.props.match.params.uid\r\n    );\r\n    console.log(vendor);\r\n    this.setState({\r\n      ...vendor\r\n    });\r\n    const reviews = this.props.reviews.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    let reviewsCustomerAndVendorJoin = reviews.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const restaurant = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, element.rating);\r\n      return {\r\n        ...element,\r\n        customer,\r\n        restaurant,\r\n        array\r\n      };\r\n    });\r\n    this.setState({\r\n      reviews: reviewsCustomerAndVendorJoin\r\n    });\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/customer/\" + uid);\r\n  };\r\n  deleteHandler = async () => {\r\n    await Firebase.deleteVendor(this.state.uid);\r\n    this.props.history.push(\"/admin/\");\r\n  };\r\n  render() {\r\n    const reservations = this.props.reservations.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    console.log(this.props.reservations);\r\n    const reservationsToRender = reservations.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        element.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : element.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.clickHandler(customer.uid)}>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={customer.photo}\r\n            ></img>\r\n          </td>\r\n          <td>{customer.name}</td>\r\n          <td>{element.time}</td>\r\n          <td>{element.date}</td>\r\n          <td>{element.attandee}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{element.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    console.log(reservationsToRender);\r\n    const complaints = this.props.complaints.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    const complaintsToRender = complaints.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      return customer ? (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              customer.photo\r\n                ? customer.photo\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{customer.name}</h5>\r\n            <Row className=\"ml-1\">\r\n              <h6 onClick={this.redirectToVendor}>{vendor.name}</h6>\r\n            </Row>\r\n            <Row className=\"ml-1\">\r\n              <h6 className=\"text-muted\">{element.title}</h6>\r\n            </Row>\r\n            <p>{element.description}</p>\r\n            <p>\r\n              Date of Complaint:{\" \"}\r\n              <small className=\"text-muted\">{element.date}</small>\r\n            </p>\r\n          </Media.Body>\r\n        </Media>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"12\" md=\"3\">\r\n              <Card>\r\n                <Card.Body>\r\n                  <img\r\n                    style={{ width: \"100%\", height: 200, objectFit: \"cover\" }}\r\n                    src={this.state.photo_url}\r\n                  ></img>\r\n                  <hr></hr>\r\n                  <p className=\"h5\">{this.state.name}</p>\r\n                  <p className=\"text-muted\">{this.state.category}</p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Branch:{\" \"}\r\n                    <span className=\"text-muted\">{this.state.branch}</span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Phone:{\" \"}\r\n                    <span className=\"text-muted\">{this.state.number}</span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Email:{\" \"}\r\n                    <span className=\"text-muted\">{this.state.email}</span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Bank Name:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      {this.state.bank_details.bank_name}\r\n                    </span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Account Name:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      {this.state.bank_details.account_name}\r\n                    </span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Account Number:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      {this.state.bank_details.accountNumber}\r\n                    </span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Reservation Fee:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      $ {this.state.reservation_fee}\r\n                    </span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Processing Fee:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      $ {this.state.processing_fee}\r\n                    </span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Available Reservations:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      {this.state.instant_data.available}\r\n                    </span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <Form.Check\r\n                    isValid={this.state.is_restrict_order}\r\n                    type=\"switch\"\r\n                    id=\"custom-switch\"\r\n                    label=\"Stop Reservations\"\r\n                    onChange={() => this.restrictOrder(this.state.uid)}\r\n                  />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"mt-3 mt-md-0 mb-5\" xs=\"12\" md=\"9\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Vendor Details</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row className=\" p-4\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          modalShow: true\r\n                        });\r\n                      }}\r\n                      variant=\"primary\"\r\n                      className=\"mx-2\"\r\n                    >\r\n                      Edit Processing Fee\r\n                    </Button>\r\n                    <Button\r\n                      onClick={this.deleteHandler}\r\n                      variant=\"danger\"\r\n                      className=\"mx-2\"\r\n                    >\r\n                      Remove Vendor\r\n                    </Button>\r\n                  </Row>\r\n                  <hr></hr>\r\n                  <h3>Location</h3>\r\n                  <div className=\"map\">\r\n                    <h1>Map will be displayed here</h1>\r\n                  </div>\r\n                  <hr></hr>\r\n                  <h3>Reservations</h3>\r\n                  <Table responsive striped hover>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>ID</th>\r\n                        <th>Customer Name</th>\r\n                        <th>Reservation Time</th>\r\n                        <th>Date of Reservation</th>\r\n                        <th>Number of Tables/Attendees</th>\r\n                        <th>Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>{reservationsToRender}</tbody>\r\n                  </Table>\r\n                  <hr></hr>\r\n                  <h3>Reviews</h3>\r\n                  <ul className=\"list-unstyled mt-5\">\r\n                    {this.state.reviews.map(element => {\r\n                      return (\r\n                        <Media as=\"li\">\r\n                          <img\r\n                            width={64}\r\n                            height={64}\r\n                            className=\"mr-3\"\r\n                            style={{ objectFit: \"cover\" }}\r\n                            src={\r\n                              element.customer.photo\r\n                                ? element.customer.photo\r\n                                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                            }\r\n                            alt=\"Generic placeholder\"\r\n                          />\r\n                          <Media.Body>\r\n                            <h5>{element.customer.name}</h5>\r\n                            <Row className=\"media-stars \">\r\n                              {element.array.map(star => {\r\n                                return <ion-icon name={star}></ion-icon>;\r\n                              })}\r\n                            </Row>\r\n                            <p>{element.comment}</p>\r\n                          </Media.Body>\r\n                        </Media>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                  <hr></hr>\r\n                  <h3>Complaints</h3>\r\n                  <ul className=\"list-unstyled mt-5\">{complaintsToRender}</ul>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Processing Fee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  Processing Fee\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                type=\"number\"\r\n                onChange={e => {\r\n                  this.setState({\r\n                    newProFee: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={async () => {\r\n                await Firebase.updateProcessingFee(\r\n                  this.state.newProFee,\r\n                  this.state.uid\r\n                );\r\n                this.setState({ modalShow: false });\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.setState({ modalShow: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Vendor));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport { Card, Pagination, Row, Media, Container } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\n\r\nclass Complaints extends Component {\r\n  redirectToVendor = async () => {\r\n    this.props.history.push(\"/admin/vendor\");\r\n  };\r\n  render() {\r\n    const complaintsToRender = this.props.complaints.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const condition = customer && vendor;\r\n      return condition ? (\r\n        <>\r\n          <Media as=\"li\">\r\n            <img\r\n              width={64}\r\n              height={64}\r\n              className=\"mr-3\"\r\n              style={{ objectFit: \"cover\" }}\r\n              src={\r\n                customer.photo\r\n                  ? customer.photo\r\n                  : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n              }\r\n              alt=\"Generic placeholder\"\r\n            />\r\n            <Media.Body>\r\n              <h5>{customer.name}</h5>\r\n              <Row className=\"ml-1\">\r\n                <h6 onClick={this.redirectToVendor}>{vendor.name}</h6>\r\n              </Row>\r\n              <Row className=\"ml-1\">\r\n                <h6 className=\"text-muted\">{element.title}</h6>\r\n              </Row>\r\n              <p>{element.description}</p>\r\n              <p>\r\n                Date of Complaint:{\" \"}\r\n                <small className=\"text-muted\">{element.date}</small>\r\n              </p>\r\n            </Media.Body>\r\n          </Media>\r\n          <hr></hr>\r\n        </>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Card className=\"my-3\">\r\n            <Card.Header>\r\n              <h1>Complaints</h1>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <ul className=\"list-unstyled mt-5\">{complaintsToRender}</ul>\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Complaints));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport { Pagination, Container, Card, Table, Badge } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Reservations extends Component {\r\n  redirectToCustomer = async uid => {\r\n    this.props.history.push(\"/admin/customer/\" + uid);\r\n  };\r\n  render() {\r\n    const reservationsToRender = this.props.reservations.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        element.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : element.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.redirectToCustomer(customer.uid)}>\r\n          <td>{element.reservation_key}</td>\r\n          <td>{customer.name}</td>\r\n          <td>{vendor ? vendor.name : \"Vendor Deleted\"}</td>\r\n          <td>{element.time}</td>\r\n          <td>{element.date}</td>\r\n          <td>{element.attandee}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{element.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Card className=\"my-3\">\r\n            <Card.Header>\r\n              <h1>Reservations</h1>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Table responsive striped hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Customer Name</th>\r\n                    <th>Restaurant Name</th>\r\n                    <th>Reservation Time</th>\r\n                    <th>Date of Reservation</th>\r\n                    <th>Number of Tables/Attendees</th>\r\n                    <th>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{reservationsToRender}</tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Reservations));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Table,\r\n  Pagination,\r\n  Media,\r\n  Badge\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nclass Customer extends Component {\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const customer = this.props.customers.find(\r\n      e => e.uid === this.props.match.params.uid\r\n    );\r\n    const reservations = this.props.reservations.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const complaints = this.props.complaints.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const reviews = this.props.reviews.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const reservationsToRender = reservations.map(reservation => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === reservation.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        reservation.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : reservation.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.clickHandler(vendor.uid)}>\r\n          <td>\r\n            <img\r\n              src={vendor ? vendor.photo_url : \"\"}\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                objectFit: \"cover\",\r\n                borderRadius: 40\r\n              }}\r\n            ></img>\r\n          </td>\r\n          <td>{vendor ? vendor.name : \"Vendor Deleted\"}</td>\r\n          <td>{reservation.time}</td>\r\n          <td>{reservation.date}</td>\r\n          <td>{reservation.attandee}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{reservation.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    const reviewsToRender = reviews.map(review => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === review.restaurant_uid\r\n      );\r\n\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, review.rating);\r\n      return (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              vendor.photo_url\r\n                ? vendor.photo_url\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{vendor.name}</h5>\r\n            <Row className=\"media-stars \">\r\n              {array.map(e => (\r\n                <ion-icon name={e}></ion-icon>\r\n              ))}\r\n            </Row>\r\n            <p>{review.comment}</p>\r\n          </Media.Body>\r\n        </Media>\r\n      );\r\n    });\r\n    const complaintsToRender = complaints.map(complaint => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === complaint.restaurant_uid\r\n      );\r\n\r\n      return (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              vendor.photo_url\r\n                ? vendor.photo_url\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{vendor.name}</h5>\r\n            <Row className=\"ml-1\">\r\n              <h6 className=\"text-muted\">{vendor.title}</h6>\r\n            </Row>\r\n            <p>{complaint.description}</p>\r\n            <p>\r\n              Date of Complaint:{\" \"}\r\n              <small className=\"text-muted\">{complaint.date}</small>\r\n            </p>\r\n          </Media.Body>\r\n        </Media>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"12\" md=\"3\">\r\n              <Card>\r\n                <Card.Body>\r\n                  <img\r\n                    style={{ width: \"100%\", height: 200, objectFit: \"cover\" }}\r\n                    src={customer.photo}\r\n                  ></img>\r\n                  <hr></hr>\r\n                  <p className=\"h5\">{customer.name}</p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Phone: <span className=\"text-muted\">{customer.number}</span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Email: <span className=\"text-muted\">{customer.email}</span>\r\n                  </p>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"mt-3 mt-md-0 mb-5\" xs=\"12\" md=\"9\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Customer History</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <h3>Reservations</h3>\r\n                  <Table responsive striped hover>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Image</th>\r\n                        <th>Vendor Name</th>\r\n                        <th>Reservation Time</th>\r\n                        <th>Date of Registration</th>\r\n                        <th>Number of Tables/Attendees</th>\r\n                        <th>Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>{reservationsToRender}</tbody>\r\n                  </Table>\r\n\r\n                  <hr></hr>\r\n                  <h3>Reviews</h3>\r\n                  <ul className=\"list-unstyled mt-5\">{reviewsToRender} </ul>\r\n\r\n                  <hr></hr>\r\n\r\n                  <h3>Complaints</h3>\r\n                  <ul className=\"list-unstyled mt-5\">{complaintsToRender}</ul>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Customer));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Pagination,\r\n  Table,\r\n  Badge,\r\n  Form,\r\n  Button,\r\n  Col\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport \"./DiscountVouchers.css\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nclass DiscountVouchers extends Component {\r\n  state = {\r\n    code: \"\",\r\n    expDate: \"\",\r\n    maxUses: 0\r\n  };\r\n  add = async () => {\r\n    await Firebase.addDiscountVoucher(\r\n      this.state.code,\r\n      this.state.expDate,\r\n      this.state.maxUses\r\n    );\r\n    window.location.reload();\r\n  };\r\n  handler = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  dateHandler = e => {\r\n    const splitDate = e.target.value.split(\"-\");\r\n\r\n    this.setState({\r\n      expDate: splitDate[2] + \"/\" + splitDate[1] + \"/\" + splitDate[0]\r\n    });\r\n  };\r\n  block = async (uid, value) => {\r\n    await Firebase.updateDiscountVoucher(uid, !value);\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Card className=\"my-3\">\r\n            <Card.Header>\r\n              <h1>Discount Vouchers</h1>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form>\r\n                <legend className=\"h4\">Add Discount Voucher</legend>\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>Code</Form.Label>\r\n                    <Form.Control\r\n                      onChange={e => this.handler(\"code\", e.target.value)}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Code\"\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"expiryDate\">\r\n                    <Form.Label>Expiry Date</Form.Label>\r\n                    <Form.Control\r\n                      onChange={this.dateHandler}\r\n                      type=\"date\"\r\n                      placeholder=\"Expiry Date\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group controlId=\"formGridPassword\">\r\n                  <Form.Label>Max Number of Uses</Form.Label>\r\n                  <Form.Control\r\n                    onChange={e => this.handler(\"maxUses\", e.target.value)}\r\n                    type=\"number\"\r\n                    placeholder=\"Max Uses\"\r\n                  />\r\n                </Form.Group>\r\n                <Button\r\n                  onClick={this.add}\r\n                  block\r\n                  variant=\"primary\"\r\n                  type=\"button\"\r\n                >\r\n                  Add New Voucher\r\n                </Button>\r\n              </Form>\r\n              <hr></hr>\r\n              <Table striped hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Code</th>\r\n                    <th>Times Used</th>\r\n                    <th>Max Uses</th>\r\n                    <th>Date of Creation</th>\r\n                    <th>Status</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.props.vouchers.map(element => {\r\n                    const date = new Date();\r\n                    const splitExpDate = element.expDate.split(\"/\");\r\n                    const expDate = new Date(\r\n                      Number(splitExpDate[2]),\r\n                      Number(splitExpDate[1]) - 1,\r\n                      Number(splitExpDate[0])\r\n                    );\r\n                    const condition =\r\n                      element.isBlocked ||\r\n                      Number(element.maxUses) <= Number(element.numberOfUses) ||\r\n                      date > expDate;\r\n                    return (\r\n                      <tr>\r\n                        <td>{element.code}</td>\r\n                        <td>{element.numberOfUses}</td>\r\n\r\n                        <td>{element.maxUses}</td>\r\n                        <td>{element.expDate}</td>\r\n                        <td>\r\n                          <Badge variant={condition ? \"danger\" : \"success\"}>\r\n                            {condition ? \"Unavailable\" : \"Available\"}\r\n                          </Badge>\r\n                        </td>\r\n                        <td\r\n                          onClick={() => {\r\n                            this.block(element.uid, element.isBlocked);\r\n                          }}\r\n                        >\r\n                          <ion-icon\r\n                            class={\r\n                              condition\r\n                                ? \"blockButton text-success\"\r\n                                : \"blockButton text-danger\"\r\n                            }\r\n                            name={\r\n                              condition\r\n                                ? \"checkmark-circle-outline\"\r\n                                : \"close-circle-outline\"\r\n                            }\r\n                          ></ion-icon>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n              {/* <Pagination>\r\n                <Pagination.First />\r\n                <Pagination.Prev />\r\n                <Pagination.Item>{1}</Pagination.Item>\r\n                <Pagination.Item>{2}</Pagination.Item>\r\n                <Pagination.Item>{3}</Pagination.Item>\r\n                <Pagination.Item>{4}</Pagination.Item>\r\n                <Pagination.Item>{5}</Pagination.Item>\r\n                <Pagination.Next />\r\n                <Pagination.Last />\r\n              </Pagination> */}\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DiscountVouchers);\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { BrowserRouter, Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport Home from \"../Pages/Home/Home\";\r\nimport TermsAndConditions from \"../Pages/TermsAndConditions/TermsAndConditions\";\r\nimport PrivacyPolicy from \"../Pages/PrivacyPolicy/PrivacyPolicy\";\r\nimport Contact from \"../Pages/Contact/Contact\";\r\nimport AdminLogin from \"../Pages/Admin/Login/Login\";\r\nimport Dashboard from \"../Pages/Admin/Dashboard/Dashboard\";\r\nimport Vendor from \"../Pages/Admin/Vendor/Vendor\";\r\nimport Complaints from \"../Pages/Admin/Complaints/Complaints\";\r\nimport Reservations from \"../Pages/Admin/Reservations/Reservations\";\r\nimport Customer from \"../Pages/Admin/Customer/Customer\";\r\nimport DiscountVouchers from \"../Pages/Admin/DiscountVouchers/DiscountVouchers\";\r\nimport { mapDispatchToProps, mapStateToProps } from \"../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAdmin } from \"../Config/localStorage\";\r\nimport Firebase from \"../Firebase/Firebase\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nclass Router extends Component {\r\n  state = {\r\n    loading: true\r\n  };\r\n  componentDidMount = async () => {\r\n    const admin = getAdmin();\r\n    if (admin) {\r\n      const vendors = await Firebase.getRestaurants();\r\n      this.props.updateVendors(vendors);\r\n      const reviews = await Firebase.getAllReviews();\r\n      this.props.updateReviews(reviews);\r\n      const complaints = await Firebase.getComplaints();\r\n      this.props.updateComplaints(complaints);\r\n      const customers = await Firebase.getCustomers();\r\n      this.props.updateCustomers(customers);\r\n      const vouchers = await Firebase.getDiscountVouchers();\r\n      this.props.updateDiscountVouchers(vouchers);\r\n      const notifications = await Firebase.getNotifications(admin.uid);\r\n      this.props.updateNotifications(notifications);\r\n      const reservations = await Firebase.getReservations();\r\n      this.props.updateReservations(reservations);\r\n      Firebase.listenToVendors(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newVendors = [...this.props.vendors];\r\n        const foundIndex = newVendors.findIndex(e => e.uid == updatedValue.uid);\r\n        if (foundIndex >= 0) {\r\n          newVendors[foundIndex] = updatedValue;\r\n        } else {\r\n          newVendors.push(updatedValue);\r\n        }\r\n        this.props.updateVendors(newVendors);\r\n      });\r\n      Firebase.listenToComplaints(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newComplaints = [...this.props.complaints];\r\n        const foundIndex = newComplaints.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newComplaints[foundIndex] = updatedValue;\r\n        } else {\r\n          newComplaints.push(updatedValue);\r\n        }\r\n        this.props.updateComplaints(newComplaints);\r\n      });\r\n      Firebase.listenToCustomers(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newCustomers = [...this.props.customers];\r\n        const foundIndex = newCustomers.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newCustomers[foundIndex] = updatedValue;\r\n        } else {\r\n          newCustomers.push(updatedValue);\r\n        }\r\n        this.props.updateCustomers(newCustomers);\r\n      });\r\n      Firebase.listenToDiscountVouchers(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newVouchers = [...this.props.vouchers];\r\n        const foundIndex = newVouchers.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newVouchers[foundIndex] = updatedValue;\r\n        } else {\r\n          newVouchers.push(updatedValue);\r\n        }\r\n        this.props.updateDiscountVouchers(newVouchers);\r\n      });\r\n      Firebase.listenToNotifications(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newNotifications = [...this.props.notifications];\r\n        const foundIndex = newNotifications.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newNotifications[foundIndex] = updatedValue;\r\n        } else {\r\n          newNotifications.push(updatedValue);\r\n        }\r\n        this.props.updateNotifications(newNotifications);\r\n      });\r\n      Firebase.listenToReservations(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newReservations = [...this.props.reservations];\r\n        const foundIndex = newReservations.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newReservations[foundIndex] = updatedValue;\r\n        } else {\r\n          newReservations.push(updatedValue);\r\n        }\r\n        this.props.updateReservations(newReservations);\r\n      });\r\n      Firebase.listenToReviews(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newReviews = [...this.props.reviews];\r\n        const foundIndex = newReviews.findIndex(e => e.uid == updatedValue.uid);\r\n        if (foundIndex >= 0) {\r\n          newReviews[foundIndex] = updatedValue;\r\n        } else {\r\n          newReviews.push(updatedValue);\r\n        }\r\n        this.props.updateReviews(newReviews);\r\n      });\r\n\r\n      this.props.updateLogin(admin);\r\n    }\r\n    this.setState({ loading: false });\r\n  };\r\n  render() {\r\n    return this.state.loading ? (\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        <Spinner\r\n          style={{ width: 65, height: 65 }}\r\n          animation=\"border\"\r\n          variant=\"primary\"\r\n        />\r\n      </div>\r\n    ) : (\r\n      <HashRouter basename=\"/reserve-deploy\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home></Home>\r\n          </Route>\r\n          <Route exact path=\"/contact\">\r\n            <Contact></Contact>\r\n          </Route>\r\n          <Route exact path=\"/terms\">\r\n            <TermsAndConditions></TermsAndConditions>\r\n          </Route>\r\n          <Route exact path=\"/privacy\">\r\n            <PrivacyPolicy></PrivacyPolicy>\r\n          </Route>\r\n          {this.props.loggedInAdmin !== null ? (\r\n            <>\r\n              <Route exact path=\"/admin/\">\r\n                <Dashboard></Dashboard>\r\n              </Route>\r\n              <Route exact path=\"/admin/vendor/:uid\">\r\n                <Vendor></Vendor>\r\n              </Route>\r\n              <Route exact path=\"/admin/complaints\">\r\n                <Complaints></Complaints>\r\n              </Route>\r\n              <Route exact path=\"/admin/customer/:uid\">\r\n                <Customer></Customer>\r\n              </Route>\r\n              <Route exact path=\"/admin/discount\">\r\n                <DiscountVouchers></DiscountVouchers>\r\n              </Route>\r\n              <Route exact path=\"/admin/reservations\">\r\n                <Reservations></Reservations>\r\n              </Route>\r\n              <Route exact path=\"/admin/slideshow\">\r\n                <Reservations></Reservations>\r\n              </Route>\r\n            </>\r\n          ) : (\r\n            <Route exact path=\"/admin/\">\r\n              <AdminLogin></AdminLogin>\r\n            </Route>\r\n          )}\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Router);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./Store/Store\";\nimport Router from \"./Navigation/Router\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={Store}>\n        <Router></Router>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.4361f2b5.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.2d5cad77.mp4\";"],"sourceRoot":""}