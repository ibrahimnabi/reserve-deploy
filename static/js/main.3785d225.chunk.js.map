{"version":3,"sources":["Images/logo.png","Actions/ActionTypes.js","Reducers/VendorReducer.js","Reducers/AdminReducer.js","Store/Store.js","Components/HomeNavbar/HomeNavbar.js","Components/Footer/Footer.js","Components/FooterAndButtons/FooterAndButtons.js","Pages/Home/Home.js","Pages/TermsAndConditions/TermsAndConditions.js","Pages/PrivacyPolicy/PrivacyPolicy.js","Pages/Contact/Contact.js","Config/index.js","Firebase/Firebase.js","Config/localStorage.js","Config/AdminMapping.js","Pages/Admin/Login/Login.js","Components/Sidebar/Header.js","Pages/Admin/Dashboard/Dashboard.js","Components/AdminNavbar/AdminNavbar.js","Pages/Admin/Vendor/Vendor.js","Pages/Admin/Complaints/Complaints.js","Pages/Admin/Reservations/Reservations.js","Pages/Admin/Customer/Customer.js","Pages/Admin/DiscountVouchers/DiscountVouchers.js","Pages/Admin/Slideshow/Slideshow.js","Config/VendorMapping.js","Pages/Vendor/Login/Login.js","Components/VendorSidebar/VendorSidebar.js","Config/Date.js","Pages/Vendor/Home/Home.js","Pages/Vendor/UpcomingReservations/UpcomingReservations.js","Pages/Vendor/PreviousReservations/PreviousReservations.js","Pages/Admin/VendorVerifications/VendorVerifications.js","Pages/Vendor/Reviews/Reviews.js","Pages/Vendor/Menu/Menu.js","Pages/Vendor/EditProfile/EditProfile.js","Pages/Vendor/Registration/Registration.js","Pages/Vendor/AccountUnverified/AccountUnverified.js","Pages/Vendor/RegistrationSocial/RegistrationSocial.js","Navigation/VendorRouter.js","Navigation/Router.js","App.js","serviceWorker.js","index.js","Images/logo.mp4"],"names":["module","exports","AdminActionTypes","VendorActionTypes","initialState","vendor","reservations","reviews","customers","categories","dishes","notifications","registrationInfo","name","email","uid","photoUrl","VendorReducer","state","type","payload","loggedInAdmin","vendors","complaints","vouchers","slideshows","AdminReducer","store","createStore","combineReducers","HomeNavbar","className","to","style","width","src","Logo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Footer","FooterAndButtons","href","Home","autoPlay","controls","muted","TermsAndConditions","PrivacyPolicy","Contact","subject","message","changeState","value","setState","sendMail","a","async","trim","templateParams","from_name","to_name","reply_to","message_html","emailjs","templateParams2","alert","props","history","push","for","onChange","e","target","placeholder","aria-describedby","rows","onClick","this","withRouter","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firebase","registerVendorEmail","password","auth","createUserWithEmailAndPassword","user","uploadVendorImage","image","extension","storageRef","storage","ref","child","put","uploadedFile","getDownloadURL","uploadDishImage","uploadRoomImage","getAdmin","database","once","response","val","getVendor","uploadSlideShowImage","file","imageRef","Firebase","login","signInWithEmailAndPassword","admin","getReservations","Object","keys","map","key","getRestaurants","restaurants","getDishes","getReviews","ratings","getAllReviews","forEach","data","k","getComplaints","getCustomers","getNotifications","addDiscountVoucher","code","expDate","maxUses","vendor_type","percentage","set","numberOfUses","isBlocked","getDiscountVouchers","discounts","listenToNotifications","callBack","on","listenToVendors","listenToReviews","listenToComplaints","listenToDiscountVouchers","listenToReservations","listenToDishes","listenToCustomers","deleteVendor","remove","restrictOrder","update","is_restrict_order","updateProcessingFee","processing_fee","updateProcessingFeeAndVerify","is_number_verified","is_verified","updateDiscountVoucher","addSlideShow","vendor_uid","image_url","listenToSlideShows","getSlideShows","deleteSlideshow","deleteDiscount","loginVendor","createVendor","address","accountNumber","account_name","bank_name","branch","category","lat","llong","number","photo","photo_extension","reservation_fee","photo_url","bank_details","llocation","is_email_verified","close","getCategories","console","log","responseValue","getReservationsVendor","filteredReservations","filter","restaurant_uid","getNotificationsVendor","getDishesVendor","filteredDishes","vendorListenToCategories","cb","vendorListenToDishes","vendorListenToNotifications","vendorListenToReservations","updateNotificationSeen","notification_key","isSeen","updateReservationClose","updateAvailable","instant_data","available","Number","updateVendor","updateVendorImage","imageNameSplit","split","length","loginVendorFacebook","provider","FacebookAuthProvider","signInWithPopup","result","loginVendorGoogle","GoogleAuthProvider","createVendorSocial","addCategory","category_key","deleteCategory","updateCategory","addDish","ingredients","price","dish_key","imageSplit","deleteDish","updateDishImage","updateDish","updateEventsInstant","number_of_tables","table_fee","addRoom","room_description","total_participants","room_key","room_image_url","time_slots","addRoomTimeSlot","time_slot","time_slot_key","hide","updateEventsReservationFee","hideUnhideRoomTimeSlot","deleteRoomTimeSlot","deleteRoom","editRoomDescription","setAdmin","localStorage","setItem","JSON","stringify","parse","getItem","removeAdmin","removeItem","setVendor","removeVendor","mapStateToProps","mapDispatchToProps","dispatch","updateLogin","updateComplaints","updateDiscountVouchers","updateNotifications","updateReservations","updateReviews","updateCustomers","updateVendors","updateSlideshows","Login","isLoggingIn","inValidLogin","window","location","reload","objectFit","height","htmlFor","Spinner","animation","variant","connect","Header","logout","Dropdown","Item","class","margin","Toggle","Badge","pill","Menu","children","Dashboard","modalShow","selectedVendor","procFee","date","Date","clickHandler","element","toLowerCase","includes","escapeRooms","cafes","events","Container","Row","Col","xs","Card","Body","Form","paddingTop","paddingBottom","Group","as","controlId","Control","Tabs","defaultActiveKey","Tab","eventKey","title","Table","striped","hover","responsive","borderRadius","AdminNavbar","Navbar","bg","expand","Brand","Collapse","Nav","Link","Button","Vendor","is_email_verfied","newProFee","checkDate","weekStart","setDate","getDate","weekEnd","componentDidMount","find","match","params","reviewsCustomerAndVendorJoin","customer","c","customer_uid","restaurant","array","fill","rating","deleteHandler","reservationsToRender","badgeVariant","status","time","attandee","Math","floor","complaintsToRender","Media","alt","redirectToVendor","description","currentReservations","totalTables","r","md","Check","checked","label","star","comment","Modal","size","aria-labelledby","centered","show","onHide","closeButton","Title","InputGroup","Prepend","Text","FormControl","Complaints","Reservations","minDate","maxDate","vendorType","redirectToCustomer","condition","Label","Customer","reservation","reviewsToRender","review","complaint","DiscountVouchers","selected_uid","isAdding","showModal","add","handler","dateHandler","splitDate","block","splitExpDate","Slideshow","fileNameSplit","fileHandler","files","delete","v","Carousel","Caption","background","padding","accept","vendorMapStateToProps","vendorMapDispatchToProps","updateCategories","updateDishes","updateRegistrationSocial","socialInfo","inputHandler","facebookLogin","displayName","photoURL","googleLogin","fluid","minHeight","display","alignItems","justifyContent","marginBottom","textAlign","marginTop","VendorSidebar","link","border","position","top","left","color","fontWeight","getMonth","month","numberOfTables","tableFee","reservationFee","addRoomModalVisible","addRoomName","addRoomDescription","addRoomTotalParticipants","addRoomImage","addTimeSlotSlot","addTimeSlotRoom","addTimeSlotModal","editRoomKey","editRoomModal","setAddRoomModelVisible","setEditRoomModalVisible","setAddTimeSlotModelVisible","updateRestrictOrder","updateClose","availableChangeHandler","reservationsForToday","getFullYear","submitAvailableChanges","updateEvents","filehandler","todayReservations","tommorrowReservations","tommorrow2Reservations","tommorrow3Reservations","tommorrow4Reservations","tommorrow5Reservations","ajKiDate","ajKiReservations","rooms","t","reservedBy","reserves","reservation_for","colSpan","Append","room","URL","createObjectURL","showSecond","format","use12Hours","inputReadOnly","strokeDasharray","dataKey","UpcomingReservations","yesterday","arr","Accordion","index","reserve","PreviousReservations","VendorVerifications","unverified","Reviews","addCategoryModalVisible","addDishesModalVisible","editCategoryModalVisible","editDishesModalVisible","addCategoryName","updateCategoryName","categoryToUpdate","addDishImage","addDishName","addDishCategory","addDishPrice","addDishIngredients","updateDishImageUrl","updateDishName","updateDishCategory","updateDishPrice","updateDishIngredients","updateDishKey","setAddCategoryVisible","setAddDishesVisible","setEditCategoryVisible","setEditDishesVisible","fileInputHandler","dishFileInputHandler","draggable","cat","selected","EditProfile","phone","long","bankName","accountName","imageUploading","vendorUpdating","updateImage","submit","disabled","Registration","confirmPassword","register","backgroundColor","AccountUnverified","RegistrationSocial","VendorRouter","loading","vendorInitial","snapshot","updatedValue","newDishes","foundIndex","findIndex","newCategories","newNotifications","newReservations","reservation_key","loop","exact","path","Router","newVendors","newComplaints","complaint_key","newCustomers","newVouchers","newReviews","newSlideshows","basename","App","Store","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3785d225.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4361f2b5.png\";","const AdminActionTypes = {\r\n  ADMIN_UPDATE_LOGIN_STATUS: \"ADMIN_UPDATE_LOGIN_STATUS\",\r\n  UPDATE_NOTIFICATIONS: \"UPDATE_NOTIFICATIONS\",\r\n  UPDATE_VENDORS: \"UPDATE_VENDORS\",\r\n  UPDATE_RESERVATIONS: \"UPDATE_RESERVATIONS\",\r\n  UPDATE_COMPLAINTS: \"UPDATE_COMPLAINTS\",\r\n  UPDATE_DISCOUNT_VOUCHERS: \"UPDATE_DISCOUNT_VOUCHERS\",\r\n  UPDATE_REVIEWS: \"UPDATE_REVIEWS\",\r\n  UPDATE_CUSTOMERS: \"UPDATE_CUSTOMERS\",\r\n  UPDATE_SLIDESHOW: \"UPDATE_SLIDESHOW\"\r\n};\r\nconst VendorActionTypes = {\r\n  VENDOR_UPDATE_LOGIN_STATUS: \"VENDOR_UPDATE_LOGIN_STATUS\",\r\n  UPDATE_NOTIFICATIONS: \"UPDATE_NOTIFICATIONS\",\r\n  UPDATE_CUSTOMERS: \"UPDATE_CUSTOMERS\",\r\n  UPDATE_RESERVATIONS: \"UPDATE_RESERVATIONS\",\r\n  UPDATE_REVIEWS: \"UPDATE_REVIEWS\",\r\n  UPDATE_DISHES: \"UPDATE_DISHES\",\r\n  UPDATE_CATEGORIES: \"UPDATE_CATEGORIES\",\r\n  UPDATE_REGISTRATION_SOCIAL: \"UPDATE_REGISTRATION_SOCIAL\"\r\n};\r\nexport { AdminActionTypes, VendorActionTypes };\r\n","import { VendorActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  vendor: null,\r\n  reservations: [],\r\n  reviews: [],\r\n  customers: [],\r\n  categories: [],\r\n  dishes: [],\r\n  notifications: [],\r\n  registrationInfo: {\r\n    name: \"\",\r\n    email: \"\",\r\n    uid: \"\",\r\n    photoUrl: \"\"\r\n  }\r\n};\r\n\r\nconst VendorReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case VendorActionTypes.UPDATE_CATEGORIES: {\r\n      return { ...state, categories: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_CUSTOMERS: {\r\n      return { ...state, customers: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_DISHES: {\r\n      return { ...state, dishes: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_NOTIFICATIONS: {\r\n      return { ...state, notifications: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_RESERVATIONS: {\r\n      return { ...state, reservations: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_REVIEWS: {\r\n      return { ...state, reviews: payload };\r\n    }\r\n    case VendorActionTypes.VENDOR_UPDATE_LOGIN_STATUS: {\r\n      return { ...state, vendor: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_REGISTRATION_SOCIAL: {\r\n      return { ...state, registrationInfo: payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default VendorReducer;\r\n","import { AdminActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  loggedInAdmin: null,\r\n  reservations: [],\r\n  vendors: [],\r\n  notifications: [],\r\n  complaints: [],\r\n  vouchers: [],\r\n  reviews: [],\r\n  customers: [],\r\n  slideshows: []\r\n};\r\nconst AdminReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case AdminActionTypes.ADMIN_UPDATE_LOGIN_STATUS:\r\n      return { ...state, loggedInAdmin: payload };\r\n\r\n    case AdminActionTypes.UPDATE_COMPLAINTS:\r\n      return { ...state, complaints: payload };\r\n\r\n    case AdminActionTypes.UPDATE_DISCOUNT_VOUCHERS:\r\n      return { ...state, vouchers: payload };\r\n\r\n    case AdminActionTypes.UPDATE_NOTIFICATIONS:\r\n      return { ...state, notifications: payload };\r\n\r\n    case AdminActionTypes.UPDATE_RESERVATIONS:\r\n      return { ...state, reservations: payload };\r\n\r\n    case AdminActionTypes.UPDATE_REVIEWS:\r\n      return { ...state, reviews: payload };\r\n\r\n    case AdminActionTypes.UPDATE_VENDORS:\r\n      return { ...state, vendors: payload };\r\n\r\n    case AdminActionTypes.UPDATE_CUSTOMERS:\r\n      return { ...state, customers: payload };\r\n    case AdminActionTypes.UPDATE_SLIDESHOW:\r\n      return { ...state, slideshows: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AdminReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport VendorReducer from \"../Reducers/VendorReducer\";\r\nimport AdminReducer from \"../Reducers/AdminReducer\";\r\n\r\nconst store = createStore(combineReducers({ VendorReducer, AdminReducer }));\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport \"./HomeNavbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class HomeNavbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"home-navbar navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img\r\n            style={{\r\n              width: \"100px\"\r\n            }}\r\n            src={Logo}\r\n          ></img>\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\"></ul>\r\n          <div className=\"login-buttons my-2 my-lg-0\">\r\n            <Link\r\n              to=\"/vendor/\"\r\n              className=\"btn text-light btn-primary my-2 my-sm-0\"\r\n            >\r\n              Vendor Login\r\n            </Link>\r\n            <Link\r\n              to=\"/admin/\"\r\n              className=\"btn text-light btn-primary mx-2 my-2 my-sm-0\"\r\n            >\r\n              Admin Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"row footer\">\r\n        <p className=\"col-12 col-md-2 order-md-first order-last\">\r\n          &copy;Reserve 2020\r\n        </p>\r\n        <div className=\"offset-md-4 col-12 col-md-6 offet-4 row\">\r\n          <Link className=\" col-12 col-md-4 text-md-right\" to=\"/contact\">\r\n            Contact\r\n          </Link>\r\n          <Link className=\" col-12 col-md-4\" to=\"/terms\">\r\n            Terms & Conditions\r\n          </Link>\r\n          <Link className=\" col-12 col-md-4\" to=\"/privacy\">\r\n            Privacy Policy\r\n          </Link>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nexport default class FooterAndButtons extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className=\"flex social-btns\">\r\n            <a className=\"app-btn blu flex vert\" href=\"https://www.apple.com\">\r\n              <i className=\"fab fa-apple\"></i>\r\n              <p className=\"text\">\r\n                Available on the <br />{\" \"}\r\n                <span className=\"big-txt\">App Store</span>\r\n              </p>\r\n            </a>\r\n\r\n            <a className=\"app-btn blu flex vert\" href=\"https://www.google.com\">\r\n              <i className=\"fab fa-google-play\"></i>\r\n              <p className=\"text\">\r\n                Get it on <br /> <span className=\"big-txt\">Google Play</span>\r\n              </p>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"container-fluid\">\r\n          <Footer></Footer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Logo from \"../../Images/logo.mp4\";\r\nimport \"./Home.css\";\r\nimport FooterAndButtons from \"../../Components/FooterAndButtons/FooterAndButtons\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <video\r\n              autoPlay={true}\r\n              controls={false}\r\n              muted\r\n              className=\"logo\"\r\n              src={Logo}\r\n            ></video>\r\n          </div>\r\n        </div>\r\n        <FooterAndButtons></FooterAndButtons>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./TermsAndConditions.css\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nexport default class TermsAndConditions extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./PrivacyPolicy.css\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nexport default class PrivacyPolicy extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport \"./Contact.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nclass Contact extends Component {\r\n  state = {\r\n    email: \"\",\r\n    subject: \"Complaint\",\r\n    message: \"\"\r\n  };\r\n  changeState = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  sendMail = async () => {\r\n    if (\r\n      this.state.email.trim() !== \"\" &&\r\n      this.state.subject.trim() !== \"\" &&\r\n      this.state.message.trim() !== \"\"\r\n    ) {\r\n      let templateParams = {\r\n        from_name: this.state.email.trim(),\r\n        to_name: \"ibrahimnabi80@gmail.com\",\r\n        reply_to: this.state.email.trim(),\r\n        subject: this.state.subject,\r\n        message_html: this.state.message\r\n      };\r\n      emailjs.send(\r\n        \"reserve_contact\",\r\n        \"template_KiH1F4zS\",\r\n        templateParams,\r\n        \"user_aVbbjsfKbS0Qub1NMA29M\"\r\n      );\r\n      let templateParams2 = {\r\n        from_name: \"ibrahimnabi80@gmail.com\",\r\n        to_name: this.state.email.trim(),\r\n        subject: \"Response\",\r\n        message_html:\r\n          \"We received your message and we will reply soon. Your inquiry id is 001\"\r\n      };\r\n      emailjs.send(\r\n        \"reserve_contact\",\r\n        \"template_KiH1F4zS\",\r\n        templateParams2,\r\n        \"user_aVbbjsfKbS0Qub1NMA29M\"\r\n      );\r\n      alert(\"We received your message and we will reply soon\");\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      alert(\"Please fill all field before submitting.\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <div className=\"container\">\r\n          <form className=\" contact-form\">\r\n            <legend>Contact Form</legend>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleFormControlSelect1\">Select Subject</label>\r\n              <select\r\n                onChange={e => this.changeState(\"subject\", e.target.value)}\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlSelect1\"\r\n              >\r\n                <option value=\"Complaint\">Complaint</option>\r\n                <option value=\"Inquiry\">Inquiry</option>\r\n                <option value=\"Feedback\">Feedback</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Enter Your Email Address</label>\r\n              <input\r\n                onChange={e => this.changeState(\"email\", e.target.value)}\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                placeholder=\"Email Address\"\r\n                aria-describedby=\"emailHelp\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleFormControlTextarea1\">\r\n                Enter Your Message\r\n              </label>\r\n              <textarea\r\n                onChange={e => this.changeState(\"message\", e.target.value)}\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlTextarea1\"\r\n                rows=\"3\"\r\n                placeholder=\"Message\"\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              onClick={this.sendMail}\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Contact);\r\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyB7qtP77Rx3HmirB5lyWJ90RYeMu4TVnyc\",\r\n  authDomain: \"reserve-restaurant-80ec7.firebaseapp.com\",\r\n  databaseURL: \"https://reserve-restaurant-80ec7.firebaseio.com\",\r\n  projectId: \"reserve-restaurant-80ec7\",\r\n  storageBucket: \"reserve-restaurant-80ec7.appspot.com\",\r\n  messagingSenderId: \"1022182989367\",\r\n  appId: \"1:1022182989367:web:12692d873c484a842be9b2\",\r\n  measurementId: \"G-CSDM8VMGL4\"\r\n};\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyDpsl140hY7lCFfPw_CV9fxbDsbbU2YN6U\",\r\n//   authDomain: \"reserve-1d4e1.firebaseapp.com\",\r\n//   databaseURL: \"https://reserve-1d4e1.firebaseio.com\",\r\n//   projectId: \"reserve-1d4e1\",\r\n//   storageBucket: \"reserve-1d4e1.appspot.com\",\r\n//   messagingSenderId: \"1028452700122\",\r\n//   appId: \"1:1028452700122:web:852c13d9b3cd2045227ae3\",\r\n//   measurementId: \"G-T7D59TGW8L\"\r\n// };\r\nexport default firebaseConfig;\r\n","import * as firebase from \"firebase\";\r\nimport firebaseConfig from \"../Config\";\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst registerVendorEmail = async (email, password) => {\r\n  const user = await app.auth().createUserWithEmailAndPassword(email, password);\r\n  return user;\r\n};\r\nconst createVendor = async (\r\n  email,\r\n  password,\r\n  address,\r\n  accountNumber,\r\n  account_name,\r\n  bank_name,\r\n  branch,\r\n  category,\r\n  lat,\r\n  llong,\r\n  name,\r\n  number,\r\n  photo,\r\n  photo_extension,\r\n  reservation_fee\r\n) => {\r\n  const user = await registerVendorEmail(email, password);\r\n  const uid = user.user.uid;\r\n  const photo_url = await uploadVendorImage(photo, photo_extension, uid);\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .set({\r\n      email,\r\n      address,\r\n      bank_details: { account_name, accountNumber, bank_name },\r\n      branch,\r\n      category,\r\n      reservation_fee,\r\n      photo_url,\r\n      number,\r\n      llocation: {\r\n        lat,\r\n        llong\r\n      },\r\n      name,\r\n      uid,\r\n      is_verified: false,\r\n      is_restrict_order: false,\r\n      is_number_verified: false,\r\n      is_email_verified: false,\r\n      close: false\r\n    });\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .once(\"value\");\r\n  return response.val();\r\n};\r\nconst createVendorSocial = async (\r\n  email,\r\n  address,\r\n  accountNumber,\r\n  account_name,\r\n  bank_name,\r\n  branch,\r\n  category,\r\n  lat,\r\n  llong,\r\n  name,\r\n  number,\r\n  photo_url,\r\n  reservation_fee,\r\n  uid\r\n) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .set({\r\n      email,\r\n      address,\r\n      bank_details: { account_name, accountNumber, bank_name },\r\n      branch,\r\n      category,\r\n      reservation_fee,\r\n      photo_url,\r\n      number,\r\n      llocation: {\r\n        lat,\r\n        llong\r\n      },\r\n      name,\r\n      uid,\r\n      is_verified: false,\r\n      is_restrict_order: false,\r\n      is_number_verified: false,\r\n      is_email_verified: false,\r\n      close: false\r\n    });\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .once(\"value\");\r\n  return response.val();\r\n};\r\nconst uploadVendorImage = async (image, extension, uid) => {\r\n  const storageRef = app\r\n    .storage()\r\n    .ref(\"/restaurant_images\")\r\n    .child(\"/\" + uid + \".\" + extension);\r\n  const uploadedFile = await storageRef.put(image);\r\n\r\n  return uploadedFile.ref.getDownloadURL();\r\n};\r\nconst uploadDishImage = async (image, extension, uid) => {\r\n  const storageRef = app\r\n    .storage()\r\n    .ref(\"/dish_images\")\r\n    .child(\"/\" + uid + \".\" + extension);\r\n  const uploadedFile = await storageRef.put(image);\r\n  return uploadedFile.ref.getDownloadURL();\r\n};\r\nconst addCategory = async (category, uid) => {\r\n  const category_key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/categories/\" + uid)\r\n      .push()\r\n  ).key;\r\n  await app\r\n    .database()\r\n    .ref(\"/categories/\" + uid + \"/\" + category_key)\r\n    .set({\r\n      category,\r\n      category_key\r\n    });\r\n};\r\nconst addDish = async (name, category, ingredients, image, price, uid) => {\r\n  const dish_key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/dishes/\")\r\n      .push()\r\n  ).key;\r\n  const imageSplit = image.name.split(\".\");\r\n  const photo_url = await uploadDishImage(\r\n    image,\r\n    imageSplit[imageSplit.length - 1],\r\n    dish_key\r\n  );\r\n  await app\r\n    .database()\r\n    .ref(\"/dishes/\" + dish_key)\r\n    .set({\r\n      category,\r\n      dish_key,\r\n      uid,\r\n      ingredients,\r\n      name,\r\n      price,\r\n      photo_url\r\n    });\r\n};\r\nconst updateDish = async (name, category, ingredients, price, dish_key) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/dishes/\" + dish_key)\r\n    .update({\r\n      category,\r\n      ingredients,\r\n      name,\r\n      price\r\n    });\r\n};\r\nconst deleteDish = async dish_key => {\r\n  await app\r\n    .database()\r\n    .ref(\"/dishes/\" + dish_key)\r\n    .remove();\r\n};\r\nconst updateCategory = async (category_key, category, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/categories/\" + uid + \"/\" + category_key)\r\n    .update({\r\n      category\r\n    });\r\n};\r\nconst deleteCategory = async (category_key, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/categories/\" + uid + \"/\" + category_key)\r\n    .remove();\r\n};\r\nconst getCategories = async uid => {\r\n  console.log(uid);\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/categories/\" + uid)\r\n    .once(\"value\");\r\n  const responseValue = response.val();\r\n  console.log(responseValue);\r\n  const categories = responseValue\r\n    ? Object.keys(responseValue).map(key => {\r\n        return responseValue[key];\r\n      })\r\n    : [];\r\n  return categories;\r\n};\r\nconst loginVendorFacebook = async () => {\r\n  const provider = new firebase.auth.FacebookAuthProvider();\r\n  const response = await app.auth().signInWithPopup(provider);\r\n  const vendor = await getVendor(response.user.uid);\r\n  const result = vendor ? vendor : response.user;\r\n  return { result, message: vendor ? \"User Found\" : \"User Not Found\" };\r\n};\r\nconst loginVendorGoogle = async () => {\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  const response = await app.auth().signInWithPopup(provider);\r\n  const vendor = await getVendor(response.user.uid);\r\n  const result = vendor ? vendor : response.user;\r\n  return { result, message: vendor ? \"User Found\" : \"User Not Found\" };\r\n};\r\nconst vendorListenToCategories = async (cb, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/categories/\" + uid)\r\n    .on(\"child_changed\", cb);\r\n};\r\nconst updateNotificationSeen = async (uid, notification_key) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid + \"/\" + notification_key)\r\n    .update({ isSeen: true });\r\n};\r\nconst updateReservationClose = async (uid, value) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({ close: value });\r\n};\r\nconst updateVendor = async (\r\n  name,\r\n  number,\r\n  reservation_fee,\r\n  lat,\r\n  llong,\r\n  accountNumber,\r\n  account_name,\r\n  bank_name,\r\n  uid\r\n) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      name,\r\n      number,\r\n      reservation_fee,\r\n      llocation: {\r\n        lat,\r\n        llong\r\n      },\r\n      bank_details: {\r\n        accountNumber,\r\n        account_name,\r\n        bank_name\r\n      }\r\n    });\r\n};\r\nconst updateVendorImage = async (image, uid) => {\r\n  const imageNameSplit = image.name.split(\".\");\r\n  const extension = imageNameSplit[imageNameSplit.length - 1];\r\n  const photo_url = await uploadVendorImage(image, extension, uid);\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      photo_url\r\n    });\r\n};\r\nconst updateDishImage = async (image, uid) => {\r\n  const imageNameSplit = image.name.split(\".\");\r\n  const extension = imageNameSplit[imageNameSplit.length - 1];\r\n  const photo_url = await uploadDishImage(image, extension, uid);\r\n  await app\r\n    .database()\r\n    .ref(\"/dishes/\" + uid)\r\n    .update({\r\n      photo_url\r\n    });\r\n};\r\nconst updateAvailable = async (uid, value) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({ instant_data: { available: Number(value) } });\r\n};\r\nconst updateEventsInstant = async (\r\n  uid,\r\n  available,\r\n  number_of_tables,\r\n  table_fee\r\n) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      instant_data: {\r\n        available: Number(available),\r\n        number_of_tables: Number(number_of_tables),\r\n        table_fee: Number(table_fee)\r\n      }\r\n    });\r\n};\r\nconst updateEventsReservationFee = async (uid, value) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({ reservation_fee: \"\" + value });\r\n};\r\nconst addRoom = async (\r\n  uid,\r\n  name,\r\n  room_description,\r\n  image,\r\n  total_participants\r\n) => {\r\n  const room_key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/restaurants/\" + uid + \"/instant_data/\")\r\n      .push()\r\n  ).key;\r\n  const extension = image.name.split(\".\")[image.name.split(\".\").length - 1];\r\n  const room_image_url = await uploadRoomImage(image, extension, room_key);\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid + \"/instant_data/\" + room_key)\r\n    .set({\r\n      name,\r\n      room_description,\r\n      room_image_url,\r\n      room_key,\r\n      total_participants,\r\n      time_slots: {}\r\n    });\r\n};\r\n\r\nconst editRoomDescription = async (uid, room_key, room_description) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid + \"/instant_data/\" + room_key)\r\n    .update({\r\n      room_description\r\n    });\r\n};\r\nconst addRoomTimeSlot = async (uid, room_key, time_slot) => {\r\n  const time_slot_key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/restaurants/\" + uid + \"/instant_data/\" + room_key + \"/time_slots/\")\r\n      .push()\r\n  ).key;\r\n  await app\r\n    .database()\r\n    .ref(\r\n      \"/restaurants/\" +\r\n        uid +\r\n        \"/instant_data/\" +\r\n        room_key +\r\n        \"/time_slots/\" +\r\n        time_slot_key\r\n    )\r\n    .set({\r\n      time_slot,\r\n      time_slot_key,\r\n      hide: false\r\n    });\r\n};\r\nconst hideUnhideRoomTimeSlot = async (uid, room_key, time_slot_key, value) => {\r\n  await app\r\n    .database()\r\n    .ref(\r\n      \"/restaurants/\" +\r\n        uid +\r\n        \"/instant_data/\" +\r\n        room_key +\r\n        \"/time_slots/\" +\r\n        time_slot_key\r\n    )\r\n    .update({\r\n      hide: value\r\n    });\r\n};\r\nconst deleteRoomTimeSlot = async (uid, room_key, time_slot_key) => {\r\n  await app\r\n    .database()\r\n    .ref(\r\n      \"/restaurants/\" +\r\n        uid +\r\n        \"/instant_data/\" +\r\n        room_key +\r\n        \"/time_slots/\" +\r\n        time_slot_key\r\n    )\r\n    .remove();\r\n};\r\nconst deleteRoom = async (uid, room_key) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid + \"/instant_data/\" + room_key)\r\n    .remove();\r\n};\r\nconst uploadRoomImage = async (image, extension, uid) => {\r\n  const storageRef = app\r\n    .storage()\r\n    .ref(\"/escape_room_images\")\r\n    .child(\"/\" + uid + \".\" + extension);\r\n  const uploadedFile = await storageRef.put(image);\r\n  return uploadedFile.ref.getDownloadURL();\r\n};\r\nconst getReservationsVendor = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .once(\"value\");\r\n  const responseValue = response.val();\r\n  const reservations = responseValue\r\n    ? Object.keys(responseValue).map(key => {\r\n        return responseValue[key];\r\n      })\r\n    : [];\r\n\r\n  const filteredReservations = reservations.filter(\r\n    e => e.restaurant_uid === uid\r\n  );\r\n  return filteredReservations;\r\n};\r\nconst vendorListenToReservations = async cb => {\r\n  app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .on(\"child_changed\", cb);\r\n};\r\nconst getNotificationsVendor = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .once(\"value\");\r\n  const responseValue = response.val();\r\n\r\n  const notifications = responseValue\r\n    ? Object.keys(responseValue).map(key => {\r\n        return responseValue[key];\r\n      })\r\n    : [];\r\n  return notifications;\r\n};\r\nconst vendorListenToNotifications = async (cb, uid) => {\r\n  app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .on(\"child_changed\", cb);\r\n};\r\nconst getDishesVendor = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .once(\"value\");\r\n  const responseValue = response.val();\r\n  const dishes = responseValue\r\n    ? Object.keys(responseValue).map(key => {\r\n        return responseValue[key];\r\n      })\r\n    : [];\r\n  const filteredDishes = dishes.filter(e => e.uid === uid);\r\n  return filteredDishes;\r\n};\r\nconst vendorListenToDishes = async cb => {\r\n  app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .on(\"child_changed\", cb);\r\n};\r\nconst getAdmin = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/admin/\" + uid)\r\n    .once(\"value\");\r\n  return response.val();\r\n};\r\nconst login = async (email, password) => {\r\n  const response = await app.auth().signInWithEmailAndPassword(email, password);\r\n  if (response.user) {\r\n    const admin = await getAdmin(response.user.uid);\r\n    return admin;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nconst getVendor = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .once(\"value\");\r\n  return response.val();\r\n};\r\nconst loginVendor = async (email, password) => {\r\n  const response = await app.auth().signInWithEmailAndPassword(email, password);\r\n  if (response.user) {\r\n    const vendor = await getVendor(response.user.uid);\r\n    return vendor;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nconst getReservations = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const reservations = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return reservations;\r\n};\r\nconst getRestaurants = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const restaurants = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return restaurants;\r\n};\r\nconst getDishes = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const dishes = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return dishes;\r\n};\r\nconst getReviews = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/ratings/\" + uid)\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const ratings = value\r\n    ? Object.keys(value).map(key => {\r\n        return value[key];\r\n      })\r\n    : [];\r\n  return ratings;\r\n};\r\nconst getNotifications = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  if (value) {\r\n    const notifications = Object.keys(value).map(key => {\r\n      return value[key];\r\n    });\r\n    return notifications;\r\n  }\r\n  return [];\r\n};\r\nconst getAllReviews = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/ratings/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const ratings = [];\r\n  Object.keys(value).forEach(key => {\r\n    const data = Object.keys(value[key]).map(k => value[key][k]);\r\n    ratings.push(...data);\r\n  });\r\n  return ratings;\r\n};\r\nconst getComplaints = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/complaints/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const complaints = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return complaints;\r\n};\r\nconst getSlideShows = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/slideshows/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  if (value) {\r\n    const slideshows = Object.keys(value).map(key => {\r\n      return value[key];\r\n    });\r\n    return slideshows;\r\n  }\r\n  return [];\r\n};\r\nconst getCustomers = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/customers/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const customers = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return customers;\r\n};\r\nconst addDiscountVoucher = async (\r\n  code,\r\n  expDate,\r\n  maxUses,\r\n  vendor_type,\r\n  percentage\r\n) => {\r\n  const key = await app\r\n    .database()\r\n    .ref(\"/discounts\")\r\n    .push();\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + key.key)\r\n    .set({\r\n      code,\r\n      expDate,\r\n      maxUses,\r\n      numberOfUses: 0,\r\n      isBlocked: false,\r\n      uid: key.key,\r\n      vendor_type,\r\n      percentage\r\n    });\r\n};\r\nconst updateDiscountVoucher = async (uid, isBlocked) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + uid)\r\n    .update({\r\n      isBlocked\r\n    });\r\n};\r\nconst getDiscountVouchers = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/discounts/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const discounts = value\r\n    ? Object.keys(value).map(key => {\r\n        return value[key];\r\n      })\r\n    : [];\r\n  return discounts;\r\n};\r\nconst listenToNotifications = async (callBack, uid) => {\r\n  app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToVendors = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToReviews = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/reviews/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToSlideShows = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/slideshows/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst deleteVendor = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .remove();\r\n};\r\nconst deleteDiscount = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + uid)\r\n    .remove();\r\n};\r\nconst deleteSlideshow = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/slideshows/\" + uid)\r\n    .remove();\r\n};\r\nconst listenToComplaints = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/complaints/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToDiscountVouchers = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/discounts/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToReservations = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToDishes = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToCustomers = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/customers/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst restrictOrder = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      is_restrict_order: value\r\n    });\r\n};\r\nconst updateProcessingFee = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      processing_fee: value + \"\"\r\n    });\r\n};\r\nconst updateProcessingFeeAndVerify = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      processing_fee: value + \"\",\r\n      is_number_verified: true,\r\n      is_verified: true\r\n    });\r\n};\r\nconst addSlideShow = async (file, extension, vendor_uid) => {\r\n  const key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/slideshows/\")\r\n      .push()\r\n  ).key;\r\n  const image_url = await uploadSlideShowImage(file, key, extension);\r\n  await app\r\n    .database()\r\n    .ref(\"/slideshows/\" + key)\r\n    .set({\r\n      uid: key,\r\n      vendor_uid,\r\n      image_url\r\n    });\r\n};\r\nconst uploadSlideShowImage = async (file, uid, extension) => {\r\n  const ref = app.storage().ref(\"/slideshows/\");\r\n  var imageRef = ref.child(uid + \".\" + extension);\r\n  const response = await imageRef.put(file);\r\n  return response.ref.getDownloadURL();\r\n};\r\nconst Firebase = {\r\n  login,\r\n  getAdmin,\r\n  getReservations,\r\n  getRestaurants,\r\n  getDishes,\r\n  getReviews,\r\n  getAllReviews,\r\n  getComplaints,\r\n  getCustomers,\r\n  getNotifications,\r\n  addDiscountVoucher,\r\n  getDiscountVouchers,\r\n  listenToNotifications,\r\n  listenToVendors,\r\n  listenToReviews,\r\n  listenToComplaints,\r\n  listenToDiscountVouchers,\r\n  listenToReservations,\r\n  listenToDishes,\r\n  listenToCustomers,\r\n  deleteVendor,\r\n  restrictOrder,\r\n  updateProcessingFee,\r\n  updateProcessingFeeAndVerify,\r\n  updateDiscountVoucher,\r\n  addSlideShow,\r\n  listenToSlideShows,\r\n  getSlideShows,\r\n  deleteSlideshow,\r\n  deleteDiscount,\r\n  getVendor,\r\n  loginVendor,\r\n  createVendor,\r\n  getCategories,\r\n  getReservationsVendor,\r\n  getNotificationsVendor,\r\n  getDishesVendor,\r\n  vendorListenToCategories,\r\n  vendorListenToDishes,\r\n  vendorListenToNotifications,\r\n  vendorListenToReservations,\r\n  updateNotificationSeen,\r\n  updateReservationClose,\r\n  updateAvailable,\r\n  updateVendor,\r\n  updateVendorImage,\r\n  loginVendorFacebook,\r\n  loginVendorGoogle,\r\n  createVendorSocial,\r\n  addCategory,\r\n  deleteCategory,\r\n  updateCategory,\r\n  addDish,\r\n  deleteDish,\r\n  updateDishImage,\r\n  updateDish,\r\n  updateEventsInstant,\r\n  addRoom,\r\n  addRoomTimeSlot,\r\n  updateEventsReservationFee,\r\n  hideUnhideRoomTimeSlot,\r\n  deleteRoomTimeSlot,\r\n  deleteRoom,\r\n  editRoomDescription\r\n};\r\nexport default Firebase;\r\n","const setAdmin = user => {\r\n  localStorage.setItem(\"admin\", JSON.stringify(user));\r\n};\r\nconst getAdmin = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"admin\"));\r\n  return user;\r\n};\r\nconst removeAdmin = () => {\r\n  localStorage.removeItem(\"admin\");\r\n};\r\nconst setVendor = user => {\r\n  localStorage.setItem(\"Vendor\", JSON.stringify(user));\r\n};\r\nconst getVendor = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"Vendor\"));\r\n  return user;\r\n};\r\nconst removeVendor = () => {\r\n  localStorage.removeItem(\"Vendor\");\r\n};\r\nexport { setAdmin, getAdmin, removeAdmin, setVendor, getVendor, removeVendor };\r\n","import { AdminActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst mapStateToProps = state => {\r\n  return state.AdminReducer;\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateLogin: user =>\r\n      dispatch({\r\n        type: AdminActionTypes.ADMIN_UPDATE_LOGIN_STATUS,\r\n        payload: user\r\n      }),\r\n    updateComplaints: complaints =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_COMPLAINTS,\r\n        payload: complaints\r\n      }),\r\n    updateDiscountVouchers: vouchers =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_DISCOUNT_VOUCHERS,\r\n        payload: vouchers\r\n      }),\r\n    updateNotifications: notifications =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_NOTIFICATIONS,\r\n        payload: notifications\r\n      }),\r\n    updateReservations: reservations =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_RESERVATIONS,\r\n        payload: reservations\r\n      }),\r\n    updateReviews: reviews =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_REVIEWS, payload: reviews }),\r\n    updateCustomers: customers =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_CUSTOMERS, payload: customers }),\r\n    updateVendors: vendors =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_VENDORS, payload: vendors }),\r\n    updateSlideshows: slideshows =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_SLIDESHOW, payload: slideshows })\r\n  };\r\n};\r\nexport { mapDispatchToProps, mapStateToProps };\r\n","import React, { Component } from \"react\";\r\nimport \"./Login.css\";\r\nimport Logo from \"../../../Images/logo.png\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setAdmin } from \"../../../Config/localStorage\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    isLoggingIn: false,\r\n    inValidLogin: false\r\n  };\r\n  changeState = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  login = async () => {\r\n    this.setState({ isLoggingIn: true });\r\n    try {\r\n      if (this.state.email.trim() !== \"\" && this.state.password.trim() !== \"\") {\r\n        const user = await Firebase.login(\r\n          this.state.email,\r\n          this.state.password\r\n        );\r\n        setAdmin(user);\r\n        this.props.updateLogin(user);\r\n        window.location.reload();\r\n      } else {\r\n        alert(\"Your have to fill all fields in order to login\");\r\n      }\r\n    } catch (error) {\r\n      this.setState({ isLoggingIn: false, inValidLogin: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <HomeNavbar></HomeNavbar> */}\r\n        <div className=\"container \">\r\n          <div className=\"row justify-content-center\">\r\n            <img\r\n              style={{\r\n                width: \"20%\",\r\n                objectFit: \"contain\",\r\n                height: \"20vh\"\r\n              }}\r\n              src={Logo}\r\n            ></img>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <form className=\"loginAdmin col-10 col-md-6\">\r\n              <legend>Admin Login</legend>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">\r\n                  Enter Your Email Address\r\n                </label>\r\n                <input\r\n                  onChange={e => this.changeState(\"email\", e.target.value)}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  placeholder=\"Email Address\"\r\n                  aria-describedby=\"emailHelp\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Enter Your Password</label>\r\n                <input\r\n                  onChange={e => this.changeState(\"password\", e.target.value)}\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n              {this.state.inValidLogin ? (\r\n                <p className=\"text-danger\">Invalid email or password!</p>\r\n              ) : null}\r\n              <button\r\n                onClick={this.login}\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.state.isLoggingIn ? (\r\n                  <Spinner animation=\"border\" variant=\"primary\" />\r\n                ) : (\r\n                  \"Login\"\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\r\n","import React, { Component } from \"react\";\r\nimport \"./Header.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../../Config/AdminMapping\";\r\nimport { removeAdmin } from \"../../Config/localStorage\";\r\nimport { Dropdown, Badge } from \"react-bootstrap\";\r\nclass Header extends Component {\r\n  logout = async () => {\r\n    removeAdmin();\r\n    this.props.updateLogin(null);\r\n    this.props.history.push(\"/admin/\");\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(e => !e.is_verified);\r\n    const notifications = vendors.map(e => {\r\n      return (\r\n        <Dropdown.Item>\r\n          <Link to={\"/admin/vendor/\" + e.uid}>Verify New Vendor {e.name}</Link>\r\n        </Dropdown.Item>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <nav class=\"navbar navbar-custom navbar-expand-lg navbar-light bg-white \">\r\n          <Link class=\"navbar-brand\" to=\"/admin/\">\r\n            <img style={{ width: 80 }} src={Logo}></img>\r\n          </Link>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarCollapse\"\r\n            aria-controls=\"navbarCollapse\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon \"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n            <ul\r\n              class=\"navbar-nav mr-auto sidenav h-100 bg-white \"\r\n              id=\"navAccordion\"\r\n            >\r\n              <li class=\"nav-item active\">\r\n                <Link to=\"/admin/\">\r\n                  <img\r\n                    className=\"nav-logo\"\r\n                    style={{ width: 200, margin: \"70px 40px \" }}\r\n                    src={Logo}\r\n                  ></img>\r\n                </Link>\r\n                <div class=\"mx-3\">\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Vendors</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/reservations\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Reservations</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/verification\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Vendors Verification</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/complaints\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Complaints</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/discount\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Discount Coupons</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/slideshow\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Slideshow Banners</span>\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li class=\"nav-item\">\r\n                    <Link onClick={this.logout} class=\"nav-link h5 \">\r\n                      <span className=\"ml-2\">Logout</span>\r\n                    </Link>\r\n                  </li>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <form class=\"form-inline ml-auto mt-2 mt-md-0\"></form>\r\n            <div class=\"d-flex align-items-center mx-3\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">\r\n                  <ion-icon name=\"notifications-outline\"></ion-icon>\r\n                  <Badge pill className=\"notifications\" variant=\"primary\">\r\n                    {vendors.length}\r\n                  </Badge>\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  {notifications.length ? (\r\n                    notifications\r\n                  ) : (\r\n                    <Dropdown.Item>No notifications</Dropdown.Item>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <main class=\"content-wrapper\">{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Tabs,\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"./Dashboard.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    modalShow: false,\r\n    selectedVendor: \"\",\r\n    procFee: 0,\r\n    date: new Date(),\r\n    name: \"\"\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(element => {\r\n      const condition = element.name\r\n        .toLowerCase()\r\n        .includes(this.state.name.toLowerCase(), 0);\r\n      return condition;\r\n    });\r\n    const restaurants = vendors.filter(\r\n      element => element.category === \"Restaurants\" && element.is_verified\r\n    );\r\n    const escapeRooms = vendors.filter(\r\n      element => element.category === \"Escape Rooms\" && element.is_verified\r\n    );\r\n    const cafes = vendors.filter(\r\n      element => element.category === \"Cafes\" && element.is_verified\r\n    );\r\n    const events = vendors.filter(\r\n      element => element.category === \"Events\" && element.is_verified\r\n    );\r\n    const unverified = vendors.filter(element => !element.is_verified);\r\n\r\n    return (\r\n      <div>\r\n        {/* <AdminNavbar></AdminNavbar> */}\r\n        <Header>\r\n          <Container>\r\n            <Row className=\"justify-content-center\">\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Vendors</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Form.Row style={{ paddingTop: 10, paddingBottom: 10 }}>\r\n                      <Form.Group as={Col} controlId=\"formGridCity\">\r\n                        <Form.Control\r\n                          onChange={e =>\r\n                            this.setState({ name: e.target.value })\r\n                          }\r\n                          placeholder=\"Search\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Tabs\r\n                      variant=\"pills\"\r\n                      defaultActiveKey=\"Restaurants\"\r\n                      id=\"noanim-tab-example\"\r\n                    >\r\n                      <Tab eventKey=\"Restaurants\" title=\"Restaurants\">\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {restaurants.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <tr\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <td>\r\n                                      <img\r\n                                        style={{\r\n                                          width: 40,\r\n                                          height: 40,\r\n                                          borderRadius: 50,\r\n                                          objectFit: \"cover\"\r\n                                        }}\r\n                                        src={element.photo_url}\r\n                                      ></img>\r\n                                    </td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.email}</td>\r\n                                    <td>\r\n                                      {element.is_verified ? (\r\n                                        <Badge variant=\"success\">\r\n                                          Verified\r\n                                        </Badge>\r\n                                      ) : (\r\n                                        <Badge variant=\"danger\">\r\n                                          Unverified\r\n                                        </Badge>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab>\r\n                      <Tab eventKey=\"Cafe\" title=\"Cafe\">\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {cafes.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <tr\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <td>\r\n                                      <img\r\n                                        style={{\r\n                                          width: 40,\r\n                                          height: 40,\r\n                                          borderRadius: 50,\r\n                                          objectFit: \"cover\"\r\n                                        }}\r\n                                        src={element.photo_url}\r\n                                      ></img>\r\n                                    </td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.email}</td>\r\n                                    <td>\r\n                                      {element.is_verified ? (\r\n                                        <Badge variant=\"success\">\r\n                                          Verified\r\n                                        </Badge>\r\n                                      ) : (\r\n                                        <Badge variant=\"danger\">\r\n                                          Unerified\r\n                                        </Badge>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab>\r\n                      <Tab eventKey=\"Escape Rooms\" title=\"Escape Rooms\">\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {escapeRooms.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <tr\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <td>\r\n                                      <img\r\n                                        style={{\r\n                                          width: 40,\r\n                                          height: 40,\r\n                                          borderRadius: 50,\r\n                                          objectFit: \"cover\"\r\n                                        }}\r\n                                        src={element.photo_url}\r\n                                      ></img>\r\n                                    </td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.email}</td>\r\n                                    <td>\r\n                                      {element.is_verified ? (\r\n                                        <Badge variant=\"success\">\r\n                                          Verified\r\n                                        </Badge>\r\n                                      ) : (\r\n                                        <Badge variant=\"danger\">\r\n                                          Unerified\r\n                                        </Badge>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab>\r\n                      <Tab eventKey=\"Event Organizers\" title=\"Event Organizers\">\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {events.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <tr\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <td>\r\n                                      <img\r\n                                        style={{\r\n                                          width: 40,\r\n                                          height: 40,\r\n                                          borderRadius: 50,\r\n                                          objectFit: \"cover\"\r\n                                        }}\r\n                                        src={element.photo_url}\r\n                                      ></img>\r\n                                    </td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.email}</td>\r\n                                    <td>\r\n                                      {element.is_verified ? (\r\n                                        <Badge variant=\"success\">\r\n                                          Verified\r\n                                        </Badge>\r\n                                      ) : (\r\n                                        <Badge variant=\"danger\">\r\n                                          Unerified\r\n                                        </Badge>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab>\r\n                    </Tabs>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>{\" \"}\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Dashboard));\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport \"./AdminNavbar.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeAdmin } from \"../../Config/localStorage\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../../Config/AdminMapping\";\r\nclass AdminNavbar extends Component {\r\n  logout = async () => {\r\n    removeAdmin();\r\n    this.props.updateLogin(null);\r\n    this.props.history.push(\"/admin/\");\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(e => !e.is_verified);\r\n    const notifications = vendors.map(e => {\r\n      return (\r\n        <Dropdown.Item>\r\n          <Link to={\"/admin/vendor/\" + e.uid}>Verify New Vendor {e.name}</Link>\r\n        </Dropdown.Item>\r\n      );\r\n    });\r\n    return (\r\n      <Navbar className=\"admin-nav\" bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand>\r\n          <Link to=\"/admin/\">\r\n            <img style={{ width: 100 }} src={Logo}></img>\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto admin-nav-links\">\r\n            <Nav.Link>\r\n              <Link to=\"/admin\">Vendors</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/reservations\">Reservations</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/discount\">Discount Vouchers</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/complaints\">Complaints</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/slideshow\">Slideshow</Link>\r\n            </Nav.Link>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">\r\n                <ion-icon name=\"notifications-outline\"></ion-icon>\r\n                <Badge pill className=\"notifications\" variant=\"primary\">\r\n                  {vendors.length}\r\n                </Badge>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                {notifications.length ? (\r\n                  notifications\r\n                ) : (\r\n                  <Dropdown.Item>No notifications</Dropdown.Item>\r\n                )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Nav>\r\n          <Link>\r\n            <Button\r\n              onClick={this.logout}\r\n              type=\"button\"\r\n              variant=\"outline-primary\"\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(AdminNavbar)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  Pagination,\r\n  Table,\r\n  Badge,\r\n  Media,\r\n  Form,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport \"./Vendor.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass Vendor extends Component {\r\n  state = {\r\n    address: \"\",\r\n    branch: \"\",\r\n    category: \"\",\r\n    close: false,\r\n    email: \"\",\r\n    instant_data: {\r\n      available: 0\r\n    },\r\n    modalShow: false,\r\n    is_email_verfied: false,\r\n    is_number_verified: false,\r\n    is_restrict_order: false,\r\n    is_verified: false,\r\n    llocation: {\r\n      lat: 0,\r\n      llong: 0\r\n    },\r\n    name: \"\",\r\n    number: \"\",\r\n    photo_url: \"\",\r\n    reservation_fee: \"0\",\r\n    processing_fee: \"0\",\r\n    uid: \"LEa50vSb5KTbwvz3FgToiDwvzKm1\",\r\n    bank_details: {\r\n      accountNumber: \"\",\r\n      account_name: \"\",\r\n      bank_name: \"\"\r\n    },\r\n    reviews: [],\r\n    newProFee: 0\r\n  };\r\n  restrictOrder = async uid => {\r\n    await Firebase.restrictOrder(!this.state.is_restrict_order, uid);\r\n    this.setState({\r\n      is_restrict_order: !this.state.is_restrict_order\r\n    });\r\n  };\r\n  checkDate = date => {\r\n    var weekStart = new Date();\r\n    // weekStart.setDate(weekStart.getDate() - weekStart.getDay());\r\n    weekStart.setDate(weekStart.getDate() - 30);\r\n    var weekEnd = new Date(+weekStart);\r\n    weekEnd.setDate(weekEnd.getDate() + 30);\r\n    return date >= weekStart && date <= weekEnd;\r\n  };\r\n  componentDidMount = async () => {\r\n    const vendor = this.props.vendors.find(\r\n      element => element.uid === this.props.match.params.uid\r\n    );\r\n    this.setState({\r\n      ...vendor\r\n    });\r\n    const reviews = this.props.reviews.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    let reviewsCustomerAndVendorJoin = reviews.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const restaurant = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, element.rating);\r\n      return {\r\n        ...element,\r\n        customer,\r\n        restaurant,\r\n        array\r\n      };\r\n    });\r\n    this.setState({\r\n      reviews: reviewsCustomerAndVendorJoin\r\n    });\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/customer/\" + uid);\r\n  };\r\n  deleteHandler = async () => {\r\n    await Firebase.deleteVendor(this.state.uid);\r\n    this.props.history.push(\"/admin/\");\r\n  };\r\n  render() {\r\n    const reservations = this.props.reservations.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    const reservationsToRender = reservations.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        element.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : element.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.clickHandler(customer.uid)}>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={customer.photo}\r\n            ></img>\r\n          </td>\r\n          <td>{customer.name}</td>\r\n          <td>{element.time}</td>\r\n          <td>{element.date}</td>\r\n          <td>{element.attandee}</td>\r\n          <td>{Math.floor(Number(element.attandee / 5)) + 1}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{element.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    const complaints = this.props.complaints.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    const complaintsToRender = complaints.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      return customer ? (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              customer.photo\r\n                ? customer.photo\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{customer.name}</h5>\r\n            <Row className=\"ml-1\">\r\n              <h6 onClick={this.redirectToVendor}>{vendor.name}</h6>\r\n            </Row>\r\n            <Row className=\"ml-1\">\r\n              <h6 className=\"text-muted\">{element.title}</h6>\r\n            </Row>\r\n            <p>{element.description}</p>\r\n            <p>\r\n              Date of Complaint:{\" \"}\r\n              <small className=\"text-muted\">{element.date}</small>\r\n            </p>\r\n          </Media.Body>\r\n        </Media>\r\n      ) : null;\r\n    });\r\n    const currentReservations = reservations.filter(e => {\r\n      const date = new Date(e.date);\r\n      console.log(date);\r\n      return this.checkDate(date);\r\n    });\r\n    console.log(currentReservations);\r\n    console.log(reservations);\r\n    let totalTables = 0;\r\n    currentReservations.forEach(r => {\r\n      totalTables += Math.floor(Number(Number(r.attandee) / 5)) + 1;\r\n    });\r\n    console.log(totalTables);\r\n\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Row>\r\n              <Col xs=\"12\" md=\"3\">\r\n                <Card>\r\n                  <Card.Body>\r\n                    <img\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: 200,\r\n                        objectFit: \"cover\"\r\n                      }}\r\n                      src={this.state.photo_url}\r\n                    ></img>\r\n                    <hr></hr>\r\n                    <p className=\"h5\">\r\n                      {this.state.name}\r\n                      {this.state.is_verified ? null : (\r\n                        <small className=\"text-muted text-danger\">\r\n                          {\" \"}\r\n                          (Verification Pending)\r\n                        </small>\r\n                      )}\r\n                    </p>\r\n                    <p className=\"text-muted\">{this.state.category}</p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Branch:{\" \"}\r\n                      <span className=\"text-muted\">{this.state.branch}</span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Phone:{\" \"}\r\n                      <span className=\"text-muted\">{this.state.number}</span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Email:{\" \"}\r\n                      <span className=\"text-muted\">{this.state.email}</span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Bank Name:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        {this.state.bank_details.bank_name}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Account Name:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        {this.state.bank_details.account_name}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Account Number:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        {this.state.bank_details.accountNumber}\r\n                      </span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Reservation Fee:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        EGP {this.state.reservation_fee}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Processing Fee:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        EGP {this.state.processing_fee}\r\n                      </span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Last Months Reservation Revenue:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        EGP {this.state.reservation_fee * totalTables}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Last Months Processing Revenue:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        EGP {this.state.processing_fee * totalTables}\r\n                      </span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Available Reservations:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        {this.state.instant_data.available}\r\n                      </span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <Form.Check\r\n                      checked={this.state.is_restrict_order}\r\n                      type=\"switch\"\r\n                      id=\"custom-switch\"\r\n                      label=\"Stop Reservations\"\r\n                      onChange={() => this.restrictOrder(this.state.uid)}\r\n                    />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mt-3 mt-md-0 mb-5\" xs=\"12\" md=\"9\">\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Vendor Details</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Row className=\" p-4\">\r\n                      <Button\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            modalShow: true\r\n                          });\r\n                        }}\r\n                        variant=\"primary\"\r\n                        className=\"mx-2\"\r\n                      >\r\n                        {this.state.is_verified\r\n                          ? \"Edit Processing Fee\"\r\n                          : \"Approve Verification\"}\r\n                      </Button>\r\n                      <Button\r\n                        onClick={this.deleteHandler}\r\n                        variant=\"danger\"\r\n                        className=\"mx-2\"\r\n                      >\r\n                        {this.state.is_verified\r\n                          ? \"Remove Vendor\"\r\n                          : \"Reject Verification\"}\r\n                      </Button>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <h3>Location</h3>\r\n                    <div className=\"map\">\r\n                      <h1>Map will be displayed here</h1>\r\n                    </div>\r\n                    <hr></hr>\r\n                    {reservationsToRender.length > 0 ? (\r\n                      <>\r\n                        <h3>Reservations</h3>\r\n                        <Table responsive striped hover>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Customer Name</th>\r\n                              <th>Reservation Time</th>\r\n                              <th>Date of Reservation</th>\r\n                              <th>Number of Attendees</th>\r\n                              <th>Number of Tables</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>{reservationsToRender}</tbody>\r\n                        </Table>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Reservations Found</p>\r\n                    )}\r\n                    <hr></hr>\r\n                    {this.state.reviews.length > 0 ? (\r\n                      <>\r\n                        <h3>Reviews</h3>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                          {this.state.reviews.map(element => {\r\n                            return (\r\n                              <Media as=\"li\">\r\n                                <img\r\n                                  width={64}\r\n                                  height={64}\r\n                                  className=\"mr-3\"\r\n                                  style={{ objectFit: \"cover\" }}\r\n                                  src={\r\n                                    element.customer.photo\r\n                                      ? element.customer.photo\r\n                                      : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                                  }\r\n                                  alt=\"Generic placeholder\"\r\n                                />\r\n                                <Media.Body>\r\n                                  <h5>{element.customer.name}</h5>\r\n                                  <Row className=\"media-stars \">\r\n                                    {element.array.map(star => {\r\n                                      return <ion-icon name={star}></ion-icon>;\r\n                                    })}\r\n                                  </Row>\r\n                                  <p>{element.comment}</p>\r\n                                </Media.Body>\r\n                              </Media>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Reviews for this Vendor</p>\r\n                    )}\r\n                    <hr></hr>\r\n                    {complaintsToRender.length > 0 ? (\r\n                      <>\r\n                        <h3>Complaints</h3>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                          {complaintsToRender}\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Complaints for this Vendor</p>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Processing Fee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  Processing Fee\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                type=\"number\"\r\n                onChange={e => {\r\n                  this.setState({\r\n                    newProFee: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={async () => {\r\n                if (this.state.is_verified) {\r\n                  await Firebase.updateProcessingFee(\r\n                    this.state.newProFee,\r\n                    this.state.uid\r\n                  );\r\n                } else {\r\n                  await Firebase.updateProcessingFeeAndVerify(\r\n                    this.state.newProFee,\r\n                    this.state.uid\r\n                  );\r\n                }\r\n                this.setState({ modalShow: false });\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              {this.state.is_verified ? \"Update\" : \"Verify\"}\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.setState({ modalShow: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Vendor));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport { Card, Pagination, Row, Media, Container } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\n\r\nclass Complaints extends Component {\r\n  redirectToVendor = async () => {\r\n    this.props.history.push(\"/admin/vendor\");\r\n  };\r\n  render() {\r\n    const complaintsToRender = this.props.complaints.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const condition = customer && vendor;\r\n      return condition ? (\r\n        <>\r\n          <Media as=\"li\">\r\n            <img\r\n              width={64}\r\n              height={64}\r\n              className=\"mr-3\"\r\n              style={{ objectFit: \"cover\" }}\r\n              src={\r\n                customer.photo\r\n                  ? customer.photo\r\n                  : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n              }\r\n              alt=\"Generic placeholder\"\r\n            />\r\n            <Media.Body>\r\n              <h5>{customer.name}</h5>\r\n              <Row className=\"ml-1\">\r\n                <h6 onClick={this.redirectToVendor}>{vendor.name}</h6>\r\n              </Row>\r\n              <Row className=\"ml-1\">\r\n                <h6 className=\"text-muted\">{element.title}</h6>\r\n              </Row>\r\n              <p>{element.description}</p>\r\n              <p>\r\n                Date of Complaint:{\" \"}\r\n                <small className=\"text-muted\">{element.date}</small>\r\n              </p>\r\n            </Media.Body>\r\n          </Media>\r\n          <hr></hr>\r\n        </>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Card className=\"my-3\">\r\n              <Card.Header>\r\n                <h1>Complaints</h1>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <ul className=\"list-unstyled mt-5\">{complaintsToRender}</ul>\r\n              </Card.Body>\r\n            </Card>\r\n          </Container>\r\n\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Complaints));\r\n","import React, { Component } from \"react\";\r\nimport { Container, Card, Table, Badge, Form, Col } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass Reservations extends Component {\r\n  state = {\r\n    vendor: \"\",\r\n    customer: \"\",\r\n    minDate: null,\r\n    maxDate: null,\r\n    vendorType: \"All\"\r\n  };\r\n  redirectToCustomer = async uid => {\r\n    this.props.history.push(\"/admin/customer/\" + uid);\r\n  };\r\n  render() {\r\n    const reservationsToRender = this.props.reservations.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n\r\n      const date = new Date(element.date);\r\n      const minDate = new Date(this.state.minDate);\r\n      const maxDate = new Date(this.state.maxDate);\r\n      const condition =\r\n        vendor.name\r\n          .toLowerCase()\r\n          .includes(this.state.vendor.toLowerCase(), 0) &&\r\n        (this.state.vendorType === \"All\" ||\r\n          this.state.vendorType === vendor.category) &&\r\n        customer.name\r\n          .toLowerCase()\r\n          .includes(this.state.customer.toLowerCase(), 0) &&\r\n        (!this.state.minDate ||\r\n          !this.state.maxDate ||\r\n          (date >= minDate && date <= maxDate));\r\n      const badgeVariant =\r\n        element.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : element.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return condition ? (\r\n        <tr onClick={() => this.redirectToCustomer(customer.uid)}>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={customer.photo}\r\n            ></img>\r\n          </td>\r\n          <td>{customer.name}</td>\r\n          <td>{vendor ? vendor.name : \"Vendor Deleted\"}</td>\r\n          <td>{element.time}</td>\r\n          <td>{element.date}</td>\r\n          <td>{element.attandee}</td>\r\n          <td>{Math.floor(Number(element.attandee / 5)) + 1}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{element.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Card className=\"my-3\">\r\n              <Card.Header>\r\n                <h1>Reservations</h1>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form.Row style={{ paddingTop: 10 }}>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Vendor Type</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={e =>\r\n                        this.setState({ vendorType: e.target.value })\r\n                      }\r\n                    >\r\n                      <option value=\"All\">All</option>\r\n                      <option value=\"Restaurants\">Restaurants</option>\r\n                      <option value=\"Cafes\">Cafes</option>\r\n                      <option value=\"Escape Rooms\">Escape Rooms</option>\r\n                      <option value=\"Events\">Events</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row style={{ paddingTop: 10 }}>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Vendor Name</Form.Label>\r\n                    <Form.Control\r\n                      onChange={e => this.setState({ vendor: e.target.value })}\r\n                      placeholder=\"Search By Vendor\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Customer Name</Form.Label>\r\n                    <Form.Control\r\n                      onChange={e =>\r\n                        this.setState({ customer: e.target.value })\r\n                      }\r\n                      placeholder=\"Search By Customer\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row style={{ paddingTop: 10 }}>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Min Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      onChange={e => this.setState({ minDate: e.target.value })}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Max Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      onChange={e => this.setState({ maxDate: e.target.value })}\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Table responsive striped hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Customer Image</th>\r\n                      <th>Customer Name</th>\r\n                      <th>Vendor Name</th>\r\n                      <th>Reservation Time</th>\r\n                      <th>Date of Reservation</th>\r\n                      <th>Number of Attendees</th>\r\n                      <th>Number of Tables</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{reservationsToRender}</tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Reservations));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Media,\r\n  Badge\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass Customer extends Component {\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const customer = this.props.customers.find(\r\n      e => e.uid === this.props.match.params.uid\r\n    );\r\n    const reservations = this.props.reservations.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const complaints = this.props.complaints.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const reviews = this.props.reviews.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const reservationsToRender = reservations.map(reservation => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === reservation.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        reservation.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : reservation.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.clickHandler(vendor.uid)}>\r\n          <td>\r\n            <img\r\n              src={vendor ? vendor.photo_url : \"\"}\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                objectFit: \"cover\",\r\n                borderRadius: 40\r\n              }}\r\n            ></img>\r\n          </td>\r\n          <td>{vendor ? vendor.name : \"Vendor Deleted\"}</td>\r\n          <td>{reservation.time}</td>\r\n          <td>{reservation.date}</td>\r\n          <td>{reservation.attandee}</td>\r\n          <td>{Math.floor(Number(reservation.attandee / 5)) + 1}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{reservation.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    const reviewsToRender = reviews.map(review => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === review.restaurant_uid\r\n      );\r\n\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, review.rating);\r\n      return (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              vendor.photo_url\r\n                ? vendor.photo_url\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{vendor.name}</h5>\r\n            <Row className=\"media-stars \">\r\n              {array.map(e => (\r\n                <ion-icon name={e}></ion-icon>\r\n              ))}\r\n            </Row>\r\n            <p>{review.comment}</p>\r\n          </Media.Body>\r\n        </Media>\r\n      );\r\n    });\r\n    const complaintsToRender = complaints.map(complaint => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === complaint.restaurant_uid\r\n      );\r\n\r\n      return (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              vendor.photo_url\r\n                ? vendor.photo_url\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{vendor.name}</h5>\r\n            <Row className=\"ml-1\">\r\n              <h6 className=\"text-muted\">{vendor.title}</h6>\r\n            </Row>\r\n            <p>{complaint.description}</p>\r\n            <p>\r\n              Date of Complaint:{\" \"}\r\n              <small className=\"text-muted\">{complaint.date}</small>\r\n            </p>\r\n          </Media.Body>\r\n        </Media>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Row>\r\n              <Col xs=\"12\" md=\"3\">\r\n                <Card>\r\n                  <Card.Body>\r\n                    <img\r\n                      style={{ width: \"100%\", height: 200, objectFit: \"cover\" }}\r\n                      src={customer.photo}\r\n                    ></img>\r\n                    <hr></hr>\r\n                    <p className=\"h5\">{customer.name}</p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Phone:{\" \"}\r\n                      <span className=\"text-muted\">{customer.number}</span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Email:{\" \"}\r\n                      <span className=\"text-muted\">{customer.email}</span>\r\n                    </p>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mt-3 mt-md-0 mb-5\" xs=\"12\" md=\"9\">\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Customer History</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <h3>Reservations</h3>\r\n                    <Table responsive striped hover>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Image</th>\r\n                          <th>Vendor Name</th>\r\n                          <th>Reservation Time</th>\r\n                          <th>Date of Registration</th>\r\n                          <th>Number of Attendees</th>\r\n                          <th>Number of Tables</th>\r\n                          <th>Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>{reservationsToRender}</tbody>\r\n                    </Table>\r\n\r\n                    <hr></hr>\r\n                    {reviewsToRender.length > 0 ? (\r\n                      <>\r\n                        <h3>Reviews</h3>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                          {reviewsToRender}\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Reviews by this customer</p>\r\n                    )}\r\n                    <hr></hr>\r\n\r\n                    {complaintsToRender.length > 0 ? (\r\n                      <>\r\n                        <h3>Complaints</h3>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                          {complaintsToRender}\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Complaints by this customer</p>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Customer));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Table,\r\n  Badge,\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Modal,\r\n  Spinner\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport \"./DiscountVouchers.css\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass DiscountVouchers extends Component {\r\n  state = {\r\n    code: \"\",\r\n    expDate: \"\",\r\n    maxUses: 0,\r\n    vendor_type: \"Restaurants\",\r\n    show: false,\r\n    selected_uid: \"\",\r\n    isAdding: false,\r\n    percentage: 0\r\n  };\r\n  showModal = () => {\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n  add = async () => {\r\n    this.setState({\r\n      isAdding: true\r\n    });\r\n    await Firebase.addDiscountVoucher(\r\n      this.state.code,\r\n      this.state.expDate,\r\n      this.state.maxUses,\r\n      this.state.vendor_type,\r\n      this.state.percentage\r\n    );\r\n    window.location.reload();\r\n  };\r\n  handler = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  dateHandler = e => {\r\n    const splitDate = e.target.value.split(\"-\");\r\n\r\n    this.setState({\r\n      expDate: splitDate[2] + \"/\" + splitDate[1] + \"/\" + splitDate[0]\r\n    });\r\n  };\r\n  block = async (uid, value) => {\r\n    await Firebase.updateDiscountVoucher(uid, !value);\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.map(e => {\r\n      return <option value={e.uid}>{e.name}</option>;\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Card className=\"my-3\">\r\n              <Card.Header>\r\n                <h1>Discount Vouchers</h1>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form>\r\n                  <legend className=\"h4\">Add Discount Voucher</legend>\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                      <Form.Label>Code</Form.Label>\r\n                      <Form.Control\r\n                        onChange={e => this.handler(\"code\", e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Code\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"expiryDate\">\r\n                      <Form.Label>Expiry Date</Form.Label>\r\n                      <Form.Control\r\n                        onChange={this.dateHandler}\r\n                        type=\"date\"\r\n                        placeholder=\"Expiry Date\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label>Vendor Type</Form.Label>\r\n                    <Form.Control\r\n                      onChange={e =>\r\n                        this.handler(\"vendor_type\", e.target.value)\r\n                      }\r\n                      as=\"select\"\r\n                    >\r\n                      <option value={\"Restaurants\"}>{\"Restaurants\"}</option>\r\n                      <option value={\"Cafes\"}>{\"Cafes\"}</option>\r\n                      <option value={\"Escape Rooms\"}>{\"Escape Rooms\"}</option>\r\n                      <option value={\"Events\"}>{\"Events\"}</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formGridPassword\">\r\n                    <Form.Label>Max Number of Uses</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"Max Uses\"\r\n                      value={this.state.maxUses}\r\n                      onChange={e => {\r\n                        if (e.target.value >= 0) {\r\n                          this.handler(\"maxUses\", e.target.value);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formGridPassword\">\r\n                    <Form.Label>Discount Percentage</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"Discount Percentage\"\r\n                      value={this.state.percentage}\r\n                      onChange={e => {\r\n                        if (e.target.value >= 0 && e.target.value <= 100) {\r\n                          this.handler(\"percentage\", e.target.value);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button\r\n                    onClick={this.add}\r\n                    block\r\n                    variant=\"primary\"\r\n                    type=\"button\"\r\n                  >\r\n                    {this.state.isAdding ? (\r\n                      <Spinner animation=\"border\" variant=\"primary\" />\r\n                    ) : (\r\n                      \"Add New Voucher\"\r\n                    )}\r\n                  </Button>\r\n                </Form>\r\n                <hr></hr>\r\n                <Table striped hover responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Code</th>\r\n                      <th>Times Used</th>\r\n                      <th>Max Uses</th>\r\n                      <th>Expiry Date</th>\r\n                      <th>Vendor Type</th>\r\n                      <th>Discount Percentage</th>\r\n                      <th>Status</th>\r\n                      <th>Change Status</th>\r\n                      <th>Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.props.vouchers.map(element => {\r\n                      const date = new Date();\r\n                      const splitExpDate = element.expDate.split(\"/\");\r\n                      const expDate = new Date(\r\n                        Number(splitExpDate[2]),\r\n                        Number(splitExpDate[1]) - 1,\r\n                        Number(splitExpDate[0])\r\n                      );\r\n                      const condition =\r\n                        element.isBlocked ||\r\n                        Number(element.maxUses) <=\r\n                          Number(element.numberOfUses) ||\r\n                        date > expDate;\r\n                      return (\r\n                        <tr>\r\n                          <td>{element.code}</td>\r\n                          <td>{element.numberOfUses}</td>\r\n\r\n                          <td>{element.maxUses}</td>\r\n                          <td>{element.expDate}</td>\r\n                          <td>{element.vendor_type}</td>\r\n                          <td>{element.percentage}%</td>\r\n                          <td>\r\n                            <Badge variant={condition ? \"danger\" : \"success\"}>\r\n                              {condition ? \"Unavailable\" : \"Available\"}\r\n                            </Badge>\r\n                          </td>\r\n                          <td\r\n                            onClick={() => {\r\n                              this.block(element.uid, element.isBlocked);\r\n                            }}\r\n                          >\r\n                            <ion-icon\r\n                              class={\r\n                                condition\r\n                                  ? \"blockButton text-success\"\r\n                                  : \"blockButton text-danger\"\r\n                              }\r\n                              name={\r\n                                condition\r\n                                  ? \"checkmark-circle-outline\"\r\n                                  : \"close-circle-outline\"\r\n                              }\r\n                            ></ion-icon>\r\n                          </td>\r\n                          <td\r\n                            onClick={async () => {\r\n                              this.setState({\r\n                                selected_uid: element.uid\r\n                              });\r\n                              this.showModal();\r\n                            }}\r\n                          >\r\n                            <ion-icon\r\n                              class=\"blockButton text-danger\"\r\n                              name=\"trash-outline\"\r\n                            ></ion-icon>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n        <Modal\r\n          centered\r\n          show={this.state.show}\r\n          onHide={this.showModal}\r\n          animation={true}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Are you sure you want to delete this voucher?\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={async () => {\r\n                await Firebase.deleteDiscount(this.state.selected_uid);\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              Yes\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={this.showModal}>\r\n              No\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DiscountVouchers);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Carousel,\r\n  Spinner\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\n\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass Slideshow extends Component {\r\n  state = {\r\n    file: null,\r\n    vendor_uid: \"\",\r\n    isAdding: false\r\n  };\r\n  handler = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  add = async () => {\r\n    this.setState({\r\n      isAdding: true\r\n    });\r\n    const fileNameSplit = this.state.file.name.split(\".\");\r\n    const extension = fileNameSplit[fileNameSplit.length - 1];\r\n    await Firebase.addSlideShow(\r\n      this.state.file,\r\n      extension,\r\n      this.state.vendor_uid\r\n    );\r\n    window.location.reload();\r\n  };\r\n  fileHandler = e => {\r\n    this.setState({\r\n      file: e.target.files[0]\r\n    });\r\n  };\r\n  delete = async uid => {\r\n    await Firebase.deleteSlideshow(uid);\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.map(e => {\r\n      return <option value={e.uid}>{e.name}</option>;\r\n    });\r\n    const slideshows = this.props.slideshows.map(e => {\r\n      const vendor = this.props.vendors.find(v => v.uid === e.vendor_uid);\r\n      return (\r\n        <Carousel.Item>\r\n          <img\r\n            style={{\r\n              height: 500,\r\n              objectFit: \"cover\"\r\n            }}\r\n            className=\"d-block w-100\"\r\n            src={e.image_url}\r\n          />\r\n          <Carousel.Caption\r\n            style={{\r\n              background: \"rgba(0,0,0,0.5)\",\r\n              padding: 10,\r\n              borderRadius: 10\r\n            }}\r\n          >\r\n            <h3>{vendor.name}</h3>\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"button\"\r\n              style={{\r\n                margin: 15\r\n              }}\r\n              onClick={() => this.delete(e.uid)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Row className=\"justify-content-center\">\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Slideshow</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    {slideshows.length > 0 ? (\r\n                      <Carousel>{slideshows}</Carousel>\r\n                    ) : (\r\n                      <p>No Slideshows have been added yet</p>\r\n                    )}\r\n                    <hr></hr>\r\n                    <Form>\r\n                      <legend className=\"h4\">Add New Banner</legend>\r\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Vendor</Form.Label>\r\n                        <Form.Control\r\n                          onChange={e =>\r\n                            this.handler(\"vendor_uid\", e.target.value)\r\n                          }\r\n                          as=\"select\"\r\n                        >\r\n                          {vendors}\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"formGridPassword\">\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control\r\n                          onChange={this.fileHandler}\r\n                          type=\"file\"\r\n                          placeholder=\"Image\"\r\n                          accept=\"image/*\"\r\n                        />\r\n                      </Form.Group>\r\n                      <Button\r\n                        onClick={this.add}\r\n                        block\r\n                        variant=\"primary\"\r\n                        type=\"button\"\r\n                      >\r\n                        {this.state.isAdding ? (\r\n                          <Spinner animation=\"border\" variant=\"primary\" />\r\n                        ) : (\r\n                          \"Add Banner\"\r\n                        )}\r\n                      </Button>\r\n                    </Form>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Slideshow));\r\n","import { VendorActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst vendorMapStateToProps = state => {\r\n  return state.VendorReducer;\r\n};\r\nconst vendorMapDispatchToProps = dispatch => {\r\n  return {\r\n    updateLogin: user =>\r\n      dispatch({\r\n        type: VendorActionTypes.VENDOR_UPDATE_LOGIN_STATUS,\r\n        payload: user\r\n      }),\r\n    updateNotifications: notifications =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_NOTIFICATIONS,\r\n        payload: notifications\r\n      }),\r\n    updateReservations: reservations =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_RESERVATIONS,\r\n        payload: reservations\r\n      }),\r\n    updateReviews: reviews =>\r\n      dispatch({ type: VendorActionTypes.UPDATE_REVIEWS, payload: reviews }),\r\n    updateCustomers: customers =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_CUSTOMERS,\r\n        payload: customers\r\n      }),\r\n    updateCategories: categories =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_CATEGORIES,\r\n        payload: categories\r\n      }),\r\n    updateDishes: dishes =>\r\n      dispatch({ type: VendorActionTypes.UPDATE_DISHES, payload: dishes }),\r\n    updateRegistrationSocial: socialInfo =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_REGISTRATION_SOCIAL,\r\n        payload: socialInfo\r\n      })\r\n  };\r\n};\r\nexport { vendorMapDispatchToProps, vendorMapStateToProps };\r\n","import React, { Component } from \"react\";\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport Logo from \"../../../Images/logo.png\";\r\nimport \"./Login.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  facebookLogin = async () => {\r\n    const response = await Firebase.loginVendorFacebook();\r\n    if (response.message === \"User Found\") {\r\n      this.props.updateLogin(response.result);\r\n      setVendor(response.result);\r\n      window.location.reload();\r\n    } else {\r\n      this.props.updateRegistrationSocial({\r\n        name: response.result.displayName,\r\n        email: response.result.email,\r\n        uid: response.result.uid,\r\n        photoUrl: response.result.photoURL\r\n      });\r\n      this.props.history.push(\"/vendor/registersocial\");\r\n    }\r\n  };\r\n  googleLogin = async () => {\r\n    const response = await Firebase.loginVendorGoogle();\r\n    if (response.message === \"User Found\") {\r\n      this.props.updateLogin(response.result);\r\n      setVendor(response.result);\r\n      window.location.reload();\r\n    } else {\r\n      this.props.updateRegistrationSocial({\r\n        name: response.result.displayName,\r\n        email: response.result.email,\r\n        uid: response.result.uid,\r\n        photoUrl: response.result.photoURL\r\n      });\r\n      this.props.history.push(\"/vendor/registersocial\");\r\n    }\r\n  };\r\n  login = async () => {\r\n    const user = await Firebase.loginVendor(\r\n      this.state.email,\r\n      this.state.password\r\n    );\r\n    if (user) {\r\n      this.props.updateLogin(user);\r\n      setVendor(user);\r\n      // this.props.history.push(\"/vendor/home\");\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Login Unsuccessful\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row style={{ minHeight: \"100vh\" }}>\r\n          <Col\r\n            xs=\"12\"\r\n            md=\"6\"\r\n            className=\"d-none d-md-flex\"\r\n            style={{\r\n              background: \"white\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\"\r\n            }}\r\n          >\r\n            <img\r\n              style={{ width: \"50%\", objectFit: \"contain\" }}\r\n              src={Logo}\r\n            ></img>\r\n          </Col>\r\n          <Col\r\n            xs=\"12\"\r\n            md=\"6\"\r\n            style={{\r\n              background: \"#ba0fb4\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\"\r\n            }}\r\n          >\r\n            <Form\r\n              style={{\r\n                background: \"#fff\",\r\n                padding: 20,\r\n                borderRadius: 8,\r\n                width: \"90%\"\r\n              }}\r\n            >\r\n              <legend style={{ marginBottom: 40, textAlign: \"center\" }}>\r\n                Login to your Vendor Account\r\n              </legend>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  name=\"email\"\r\n                  onChange={this.inputHandler}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ marginBottom: 20 }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  name=\"password\"\r\n                  onChange={this.inputHandler}\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                onClick={this.login}\r\n                block\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n              >\r\n                Login\r\n              </Button>\r\n              <Row className=\"align-middle\" style={{ marginTop: 10 }}>\r\n                <Col xs=\"5\">\r\n                  <hr></hr>\r\n                </Col>\r\n                <Col xs=\"2\" className=\"text-center text-muted\">\r\n                  or\r\n                </Col>\r\n                <Col xs=\"5\">\r\n                  <hr></hr>\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ marginTop: 20 }}>\r\n                <Col>\r\n                  <Button\r\n                    onClick={this.facebookLogin}\r\n                    block\r\n                    className=\"facebook bg-primary \"\r\n                    type=\"button\"\r\n                  >\r\n                    Facebook Login\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    onClick={this.googleLogin}\r\n                    block\r\n                    className=\"google bg-success\"\r\n                    type=\"button\"\r\n                  >\r\n                    Google Login\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <hr style={{ marginTop: 30, marginBottom: 20 }}></hr>\r\n              <p className=\"text-center\">\r\n                Don't have an account?{\" \"}\r\n                <Link to=\"/vendor/register\">Click here to Register</Link>\r\n              </p>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(withRouter(Login));\r\n","import React, { Component } from \"react\";\r\nimport \"./VendorSidebar.css\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Badge, Dropdown } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../Config/VendorMapping\";\r\nimport Firebase from \"../../Firebase/Firebase\";\r\nimport { removeVendor } from \"../../Config/localStorage\";\r\nclass VendorSidebar extends Component {\r\n  updateNotifications = async (notification_key, link) => {\r\n    await Firebase.updateNotificationSeen(\r\n      this.props.vendor.uid,\r\n      notification_key\r\n    );\r\n    this.props.history.push(link);\r\n  };\r\n  logout = async () => {\r\n    removeVendor();\r\n    this.props.updateLogin(null);\r\n    this.props.history.push(\"/vendor/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top bg-white\">\r\n          <Link className=\"navbar-brand\" to=\"/vendor/\">\r\n            <img style={{ width: \"80px\" }} src={Logo}></img>\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarCollapse\"\r\n            aria-controls=\"navbarCollapse\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon \"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n            <ul\r\n              className=\"navbar-nav mr-auto vendor-sidebar h-100 bg-white\"\r\n              id=\"navAccordion\"\r\n            >\r\n              <li className=\"nav-item active\">\r\n                <div className=\"d-none d-md-flex usaneTitle\">\r\n                  <Link\r\n                    className=\"d-flex justify-content-center align-items-center\"\r\n                    to=\"/vendor/\"\r\n                  >\r\n                    <img style={{ width: \"80%\" }} src={Logo}></img>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"mx-3\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/vendor/\" className=\"nav-link nav-link-custom \">\r\n                      <span className=\"ml-2\">Dashboard</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  {this.props.vendor.category === \"Restaurants\" ||\r\n                  this.props.vendor.category === \"Cafes\" ? (\r\n                    <li className=\"nav-item\">\r\n                      <Link\r\n                        to=\"/vendor/menu\"\r\n                        className=\"nav-link nav-link-custom \"\r\n                      >\r\n                        <span className=\"ml-2\">Menu</span>\r\n                        <div className=\"hr\"></div>\r\n                      </Link>\r\n                    </li>\r\n                  ) : null}\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/upcoming\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Upcoming Reservations</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/past\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Past Reservations</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/reviews\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Reviews & Ratings</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/profile\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Profile Setting</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      onClick={this.logout}\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Logout</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-inline ml-auto mt-2 mt-md-0\"></form>\r\n            <div className=\"d-flex align-items-center p-2\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle\r\n                  style={{ width: 35 }}\r\n                  variant=\"link\"\r\n                  id=\"dropdown-basic\"\r\n                >\r\n                  <img\r\n                    style={{\r\n                      width: \"35px\",\r\n                      objectFit: \"cover\",\r\n                      height: \"35px\",\r\n                      borderRadius: \"35px\",\r\n                      border: \"solid 1px #ba0fb4\"\r\n                    }}\r\n                    src={\r\n                      this.props.vendor.photo_url\r\n                        ? this.props.vendor.photo_url\r\n                        : \"https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg-1024x683.jpg\"\r\n                    }\r\n                  ></img>\r\n                  <Badge\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 2,\r\n                      left: 28,\r\n                      height: 14,\r\n                      width: 14,\r\n                      borderRadius: 14,\r\n                      background: \"#ba0fb4\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bold\"\r\n                    }}\r\n                    pill\r\n                  >\r\n                    {this.props.notifications.length}\r\n                  </Badge>\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  {this.props.notifications.length === 0 ? (\r\n                    <Dropdown.Item>No notifications</Dropdown.Item>\r\n                  ) : (\r\n                    this.props.notifications.map(element => (\r\n                      <Dropdown.Item\r\n                        onClick={async () =>\r\n                          await this.updateNotifications(\r\n                            element.notification_key,\r\n                            \"/vendor/\"\r\n                          )\r\n                        }\r\n                      >\r\n                        {element.message}\r\n                      </Dropdown.Item>\r\n                    ))\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <main className=\"custom-content-wrapper\">\r\n          <div className=\"container\">{this.props.children}</div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(\r\n  connect(vendorMapStateToProps, vendorMapDispatchToProps)(VendorSidebar)\r\n);\r\n","const getMonth = month => {\r\n  switch (month) {\r\n    case 0:\r\n      return \"Jan\";\r\n    case 1:\r\n      return \"Feb\";\r\n    case 2:\r\n      return \"Mar\";\r\n    case 3:\r\n      return \"Apr\";\r\n    case 4:\r\n      return \"May\";\r\n    case 5:\r\n      return \"Jun\";\r\n    case 6:\r\n      return \"Jul\";\r\n    case 7:\r\n      return \"Aug\";\r\n    case 8:\r\n      return \"Sep\";\r\n    case 9:\r\n      return \"Oct\";\r\n    case 10:\r\n      return \"Nov\";\r\n    case 11:\r\n      return \"Dec\";\r\n  }\r\n};\r\nexport default getMonth;\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport \"rc-time-picker/assets/index.css\";\r\nimport TimePicker from \"rc-time-picker\";\r\n\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Card,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Form,\r\n  Table,\r\n  Modal\r\n} from \"react-bootstrap\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label\r\n} from \"recharts\";\r\nimport \"./Home.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapDispatchToProps,\r\n  vendorMapStateToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport getMonth from \"../../../Config/Date\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\n\r\nconst format = \"h:mm a\";\r\nclass Home extends Component {\r\n  state = {\r\n    available: 0,\r\n    numberOfTables: 0,\r\n    tableFee: 0,\r\n    reservationFee: 0,\r\n    addRoomModalVisible: false,\r\n    addRoomName: \"\",\r\n    addRoomDescription: \"\",\r\n    addRoomTotalParticipants: 0,\r\n    addRoomImage: null,\r\n    addTimeSlotSlot: \"\",\r\n    addTimeSlotRoom: \"\",\r\n    addTimeSlotModal: false,\r\n    editRoomDescription: \"\",\r\n    editRoomKey: \"\",\r\n    editRoomModal: false\r\n  };\r\n  addRoom = async () => {\r\n    await Firebase.addRoom(\r\n      this.props.vendor.uid,\r\n      this.state.addRoomName,\r\n      this.state.addRoomDescription,\r\n      this.state.addRoomImage,\r\n      this.state.addRoomTotalParticipants\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    window.location.reload();\r\n  };\r\n  addRoomTimeSlot = async () => {\r\n    await Firebase.addRoomTimeSlot(\r\n      this.props.vendor.uid,\r\n      this.state.addTimeSlotRoom,\r\n      this.state.addTimeSlotSlot\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    window.location.reload();\r\n  };\r\n  setAddRoomModelVisible = () => {\r\n    this.setState({\r\n      addRoomModalVisible: !this.state.addRoomModalVisible\r\n    });\r\n  };\r\n  setEditRoomModalVisible = () => {\r\n    this.setState({\r\n      editRoomModal: !this.state.editRoomModal\r\n    });\r\n  };\r\n  hide = async (room_key, time_slot_key, value) => {\r\n    await Firebase.hideUnhideRoomTimeSlot(\r\n      this.props.vendor.uid,\r\n      room_key,\r\n      time_slot_key,\r\n      value\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    setVendor(vendor);\r\n    this.props.updateLogin(vendor);\r\n  };\r\n  delete = async (room_key, time_slot_key) => {\r\n    await Firebase.deleteRoomTimeSlot(\r\n      this.props.vendor.uid,\r\n      room_key,\r\n      time_slot_key\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    setVendor(vendor);\r\n    this.props.updateLogin(vendor);\r\n  };\r\n  deleteRoom = async room_key => {\r\n    await Firebase.deleteRoom(this.props.vendor.uid, room_key);\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    setVendor(vendor);\r\n    this.props.updateLogin(vendor);\r\n  };\r\n  setAddTimeSlotModelVisible = () => {\r\n    this.setState({\r\n      addTimeSlotModal: !this.state.addTimeSlotModal\r\n    });\r\n  };\r\n  editRoomDescription = async () => {\r\n    await Firebase.editRoomDescription(\r\n      this.props.vendor.uid,\r\n      this.state.editRoomKey,\r\n      this.state.editRoomDescription\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    setVendor(vendor);\r\n    this.props.updateLogin(vendor);\r\n    window.location.reload();\r\n  };\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      available: this.props.vendor.instant_data\r\n        ? this.props.vendor.instant_data.available\r\n        : 0,\r\n      numberOfTables: this.props.vendor.instant_data\r\n        ? this.props.vendor.instant_data.number_of_tables\r\n        : 0,\r\n      tableFee: this.props.vendor.instant_data\r\n        ? this.props.vendor.instant_data.table_fee\r\n        : 0\r\n    });\r\n  };\r\n  updateRestrictOrder = async () => {\r\n    await Firebase.restrictOrder(\r\n      !this.props.vendor.is_restrict_order,\r\n      this.props.vendor.uid\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n  };\r\n  updateClose = async () => {\r\n    await Firebase.updateReservationClose(\r\n      this.props.vendor.uid,\r\n      !this.props.vendor.close\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n  };\r\n  availableChangeHandler = e => {\r\n    const date = new Date();\r\n    const reservationsForToday = this.props.reservations.filter(\r\n      e =>\r\n        e.date ===\r\n        getMonth(date.getMonth()) +\r\n          \" \" +\r\n          date.getDate() +\r\n          \", \" +\r\n          date.getFullYear()\r\n    );\r\n    if (e.target.value < reservationsForToday.length) {\r\n      alert(\r\n        \"You can't set available reservations to less than than \" +\r\n          reservationsForToday.length\r\n      );\r\n      this.setState({\r\n        available: this.props.vendor.instant_data\r\n          ? this.props.vendor.instant_data.available\r\n          : 0\r\n      });\r\n    } else {\r\n      this.setState({\r\n        available: e.target.value\r\n      });\r\n    }\r\n  };\r\n  submitAvailableChanges = async () => {\r\n    await Firebase.updateAvailable(this.props.vendor.uid, this.state.available);\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n  };\r\n  updateEvents = async () => {\r\n    await Firebase.updateEventsInstant(\r\n      this.props.vendor.uid,\r\n      this.state.available,\r\n      this.state.numberOfTables,\r\n      this.state.tableFee\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    window.location.reload();\r\n  };\r\n  updateEventsReservationFee = async () => {\r\n    await Firebase.updateEventsReservationFee(\r\n      this.props.vendor.uid,\r\n      this.state.reservationFee\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    window.location.reload();\r\n  };\r\n  inputHandler = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  handler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  filehandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0]\r\n    });\r\n  };\r\n  render() {\r\n    const date = new Date();\r\n\r\n    const todayReservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrowReservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow2Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow3Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow4Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow5Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow6Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    const data = [\r\n      todayReservations,\r\n      tommorrowReservations,\r\n      tommorrow2Reservations,\r\n      tommorrow3Reservations,\r\n      tommorrow4Reservations,\r\n      tommorrow5Reservations,\r\n      tommorrow6Reservations\r\n    ];\r\n    const ajKiDate = new Date();\r\n    const ajKiReservations = this.props.reservations.filter(e => {\r\n      console.log(e);\r\n      return (\r\n        e.date ===\r\n        getMonth(ajKiDate.getMonth()) +\r\n          \" \" +\r\n          ajKiDate.getDate() +\r\n          \", \" +\r\n          ajKiDate.getFullYear()\r\n      );\r\n    });\r\n    let rooms = [];\r\n    if (\r\n      this.props.vendor.category === \"Escape Rooms\" &&\r\n      this.props.vendor.instant_data\r\n    ) {\r\n      rooms = Object.keys(this.props.vendor.instant_data).map(element => {\r\n        let time_slots = [];\r\n        if (this.props.vendor.instant_data[element].time_slots) {\r\n          time_slots = Object.keys(\r\n            this.props.vendor.instant_data[element].time_slots\r\n          ).map(t => {\r\n            const reservedBy = ajKiReservations.find(reserves => {\r\n              return (\r\n                reserves.reservation_for ===\r\n                  this.props.vendor.instant_data[element].name &&\r\n                reserves.time ===\r\n                  this.props.vendor.instant_data[element][t].time_slot\r\n              );\r\n            });\r\n            return {\r\n              ...this.props.vendor.instant_data[element].time_slots[t],\r\n              reservedBy\r\n            };\r\n          });\r\n        }\r\n        return {\r\n          ...this.props.vendor.instant_data[element],\r\n          time_slots\r\n        };\r\n      });\r\n    }\r\n    const reservationsToRender = ajKiReservations.map(e => {\r\n      const customer = this.props.customers.find(c => c.uid === e.customer_uid);\r\n      return (\r\n        <tr>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 50,\r\n                height: 50,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={\r\n                customer && customer.photo_url\r\n                  ? customer.photo_url\r\n                  : \"https://img.pngio.com/profile-icon-png-image-free-download-searchpngcom-profile-icon-png-673_673.png\"\r\n              }\r\n            ></img>\r\n          </td>\r\n          <td colSpan=\"4\">\r\n            <strong>Customer Name: </strong>{\" \"}\r\n            {customer.name ? customer.name : \"Customer has been deleted\"}\r\n            <br></br>\r\n            <strong>Reservation Time: </strong> {e.time}\r\n            <br></br>\r\n            <strong>Number of Attendees: </strong> {e.attandee}\r\n            <br></br>\r\n            <strong>Number of Tables: </strong>{\" \"}\r\n            {Math.floor(Number(e.attandee / 5)) + 1}\r\n            <br></br>\r\n            <strong>Status of Reservation: </strong> {e.status}\r\n            <br></br>\r\n            <strong>Customer Phone number: </strong> {customer.number}\r\n            <br></br>\r\n            <strong>Customer Email: </strong> {customer.email}\r\n            <br></br>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Dashboard</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <h3 className=\"mt-2\">Edit Reservations</h3>\r\n                    {this.props.vendor.category === \"Restaurants\" ||\r\n                    this.props.vendor.category === \"Cafes\" ? (\r\n                      <>\r\n                        <p>Number of available Reservations</p>\r\n                        <InputGroup className=\"mt-3\">\r\n                          <FormControl\r\n                            placeholder=\"Number available reservations for today\"\r\n                            type=\"number\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            value={this.state.available}\r\n                            onChange={this.availableChangeHandler}\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              onClick={this.submitAvailableChanges}\r\n                              variant=\"primary\"\r\n                            >\r\n                              Confirm Change\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <Form.Check\r\n                          type=\"switch\"\r\n                          checked={this.props.vendor.is_restrict_order}\r\n                          onClick={this.updateRestrictOrder}\r\n                          className=\"mt-2 ml-1\"\r\n                          id=\"custom-switch\"\r\n                          label=\"Stop Orders\"\r\n                        />\r\n                      </>\r\n                    ) : null}\r\n\r\n                    <Form.Check\r\n                      type=\"switch\"\r\n                      checked={this.props.vendor.close}\r\n                      onClick={this.updateClose}\r\n                      className=\"mt-2 mb-4 ml-1\"\r\n                      id=\"another-switch\"\r\n                      label=\"Stop Reservations\"\r\n                    />\r\n                    {this.props.vendor.category === \"Events\" ? (\r\n                      <>\r\n                        <p className=\"my-3\">Total Tickets Available</p>\r\n                        <InputGroup className=\"mt-3\">\r\n                          <FormControl\r\n                            placeholder=\"Total Tickets Available\"\r\n                            type=\"number\"\r\n                            value={this.state.available}\r\n                            onChange={e =>\r\n                              this.inputHandler(\"available\", e.target.value)\r\n                            }\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              onClick={this.updateEvents}\r\n                              variant=\"primary\"\r\n                            >\r\n                              Confirm Change\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <p className=\"my-3\">Total Tables Available</p>\r\n                        <InputGroup className=\"mt-3\">\r\n                          <FormControl\r\n                            placeholder=\"Total Tables Available\"\r\n                            type=\"number\"\r\n                            value={this.state.numberOfTables}\r\n                            onChange={e =>\r\n                              this.inputHandler(\r\n                                \"numberOfTables\",\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              onClick={this.updateEvents}\r\n                              variant=\"primary\"\r\n                            >\r\n                              Confirm Change\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <p className=\"my-3\">Table Reservation Fee</p>\r\n                        <InputGroup className=\"mt-3\">\r\n                          <FormControl\r\n                            placeholder=\"Table Reservation Fee\"\r\n                            type=\"number\"\r\n                            value={this.state.tableFee}\r\n                            onChange={e =>\r\n                              this.inputHandler(\"tableFee\", e.target.value)\r\n                            }\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              onClick={this.updateEvents}\r\n                              variant=\"primary\"\r\n                            >\r\n                              Confirm Change\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                      </>\r\n                    ) : null}\r\n                    <hr></hr>\r\n                    {this.props.vendor.category === \"Escape Rooms\" ? (\r\n                      <>\r\n                        <h3 className=\"mt-2\">Upcoming Reservations</h3>\r\n                        <Card className=\"mt-5\">\r\n                          <Card.Body>\r\n                            {rooms.map(room => {\r\n                              return (\r\n                                <>\r\n                                  <Row>\r\n                                    <Col xs=\"8\">\r\n                                      <h4>{room.name}</h4>\r\n                                    </Col>\r\n                                    <Col\r\n                                      xs=\"4\"\r\n                                      className=\"d-flex flex-row-reverse\"\r\n                                    >\r\n                                      <Button\r\n                                        onClick={async () => {\r\n                                          this.setState({\r\n                                            editRoomDescription:\r\n                                              room.room_description,\r\n                                            editRoomKey: room.room_key\r\n                                          });\r\n                                          this.setEditRoomModalVisible();\r\n                                        }}\r\n                                        variant=\"primary\"\r\n                                      >\r\n                                        Edit\r\n                                      </Button>\r\n                                      <Button\r\n                                        className=\"mr-2\"\r\n                                        onClick={async () => {\r\n                                          await this.deleteRoom(room.room_key);\r\n                                        }}\r\n                                        variant=\"danger\"\r\n                                      >\r\n                                        Delete\r\n                                      </Button>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <Card className=\"mt-3\">\r\n                                    <Card.Body>\r\n                                      {room.time_slots.map(time_slot => {\r\n                                        console.log(time_slot);\r\n                                        return (\r\n                                          <>\r\n                                            <Row>\r\n                                              <Col xs=\"12\">\r\n                                                <Row>\r\n                                                  <Col\r\n                                                    xs=\"8\"\r\n                                                    className={\r\n                                                      time_slot.reservedBy\r\n                                                        ? \"text-danger h5\"\r\n                                                        : \"text-success h5\"\r\n                                                    }\r\n                                                  >\r\n                                                    {time_slot.time_slot}\r\n                                                  </Col>\r\n                                                  <Col xs=\"4\">\r\n                                                    <Row className=\"d-flex flex-row-reverse\">\r\n                                                      <Button\r\n                                                        onClick={async () => {\r\n                                                          await this.hide(\r\n                                                            room.room_key,\r\n                                                            time_slot.time_slot_key,\r\n                                                            !time_slot.hide\r\n                                                          );\r\n                                                        }}\r\n                                                        className=\"mx-4\"\r\n                                                        variant={\r\n                                                          time_slot.hide\r\n                                                            ? \"success\"\r\n                                                            : \"danger\"\r\n                                                        }\r\n                                                      >\r\n                                                        {time_slot.hide\r\n                                                          ? \"Unhide\"\r\n                                                          : \"Hide\"}\r\n                                                      </Button>\r\n                                                      <Button\r\n                                                        onClick={async () => {\r\n                                                          await this.delete(\r\n                                                            room.room_key,\r\n                                                            time_slot.time_slot_key\r\n                                                          );\r\n                                                        }}\r\n                                                        variant=\"danger\"\r\n                                                      >\r\n                                                        Delete\r\n                                                      </Button>\r\n                                                    </Row>\r\n                                                  </Col>\r\n                                                </Row>\r\n                                              </Col>\r\n                                            </Row>\r\n                                            <hr></hr>\r\n                                          </>\r\n                                        );\r\n                                      })}\r\n                                      <Row className=\"d-flex flex-row-reverse\">\r\n                                        <Button\r\n                                          onClick={() => {\r\n                                            this.setAddTimeSlotModelVisible();\r\n                                            this.setState({\r\n                                              addTimeSlotRoom: room.room_key\r\n                                            });\r\n                                          }}\r\n                                          className=\"mx-4\"\r\n                                          variant=\"dark\"\r\n                                        >\r\n                                          Add Time Slot\r\n                                        </Button>\r\n                                      </Row>\r\n                                    </Card.Body>\r\n                                  </Card>\r\n                                  <hr></hr>\r\n                                </>\r\n                              );\r\n                            })}\r\n\r\n                            <Row className=\"d-flex flex-row-reverse\">\r\n                              <Button\r\n                                onClick={this.setAddRoomModelVisible}\r\n                                className=\"mx-4\"\r\n                                variant=\"dark\"\r\n                              >\r\n                                Add Room\r\n                              </Button>\r\n                            </Row>\r\n                          </Card.Body>\r\n                        </Card>\r\n                        <Modal\r\n                          show={this.state.addRoomModalVisible}\r\n                          size=\"lg\"\r\n                          onHide={this.setAddRoomModelVisible}\r\n                          aria-labelledby=\"contained-modal-title-vcenter\"\r\n                          centered\r\n                        >\r\n                          <Modal.Header closeButton>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                              Add Room\r\n                            </Modal.Title>\r\n                          </Modal.Header>\r\n                          <Modal.Body>\r\n                            <div className=\"d-flex w-100 flex-column align-items-center justify-content-center\">\r\n                              <img\r\n                                style={{\r\n                                  width: 200,\r\n                                  objectFit: \"cover\",\r\n                                  height: 200,\r\n                                  borderRadius: \"50%\"\r\n                                }}\r\n                                src={\r\n                                  this.state.addRoomImage\r\n                                    ? URL.createObjectURL(\r\n                                        this.state.addRoomImage\r\n                                      )\r\n                                    : \"https://img.pngio.com/profile-icon-png-image-free-download-searchpngcom-profile-icon-png-673_673.png\"\r\n                                }\r\n                              ></img>\r\n                              <Form.Group\r\n                                className=\"mt-5\"\r\n                                controlId=\"formGridAddress1\"\r\n                              >\r\n                                <Form.Control\r\n                                  className=\"btn btn-primary\"\r\n                                  name=\"addRoomImage\"\r\n                                  accept=\"image/*\"\r\n                                  onChange={this.filehandler}\r\n                                  type=\"file\"\r\n                                />\r\n                              </Form.Group>\r\n                            </div>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                              <Form.Label>Room Name</Form.Label>\r\n                              <Form.Control\r\n                                onChange={this.handler}\r\n                                name=\"addRoomName\"\r\n                                value={this.state.addRoomName}\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Room Name\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                              <Form.Label>Room Description</Form.Label>\r\n                              <Form.Control\r\n                                onChange={this.handler}\r\n                                name=\"addRoomDescription\"\r\n                                value={this.state.addRoomDescription}\r\n                                as=\"textarea\"\r\n                                placeholder=\"Enter Room Description\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                              <Form.Label>Room Total Participants</Form.Label>\r\n                              <Form.Control\r\n                                onChange={this.handler}\r\n                                name=\"addRoomTotalParticipants\"\r\n                                value={this.state.addRoomTotalParticipants}\r\n                                type=\"number\"\r\n                                placeholder=\"Enter Room Participants\"\r\n                              />\r\n                            </Form.Group>\r\n                          </Modal.Body>\r\n                          <Modal.Footer>\r\n                            <Button onClick={this.addRoom}>Add Room</Button>\r\n                            <Button\r\n                              variant=\"danger\"\r\n                              onClick={this.setAddRoomModelVisible}\r\n                            >\r\n                              Close\r\n                            </Button>\r\n                          </Modal.Footer>\r\n                        </Modal>\r\n\r\n                        <Modal\r\n                          show={this.state.editRoomModal}\r\n                          size=\"lg\"\r\n                          onHide={this.setEditRoomModalVisible}\r\n                          aria-labelledby=\"contained-modal-title-vcenter\"\r\n                          centered\r\n                        >\r\n                          <Modal.Header closeButton>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                              Edit Room\r\n                            </Modal.Title>\r\n                          </Modal.Header>\r\n                          <Modal.Body>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                              <Form.Label>Room Description</Form.Label>\r\n                              <Form.Control\r\n                                onChange={this.handler}\r\n                                name=\"editRoomDescription\"\r\n                                value={this.state.editRoomDescription}\r\n                                as=\"textarea\"\r\n                                placeholder=\"Enter Room Description\"\r\n                              />\r\n                            </Form.Group>\r\n                          </Modal.Body>\r\n                          <Modal.Footer>\r\n                            <Button onClick={this.editRoomDescription}>\r\n                              Edit Room\r\n                            </Button>\r\n                            <Button\r\n                              variant=\"danger\"\r\n                              onClick={this.setEditRoomModalVisible}\r\n                            >\r\n                              Close\r\n                            </Button>\r\n                          </Modal.Footer>\r\n                        </Modal>\r\n                        <Modal\r\n                          show={this.state.addTimeSlotModal}\r\n                          size=\"lg\"\r\n                          onHide={this.setAddTimeSlotModelVisible}\r\n                          aria-labelledby=\"contained-modal-title-vcenter\"\r\n                          centered\r\n                        >\r\n                          <Modal.Header closeButton>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                              Add Room Time Slot\r\n                            </Modal.Title>\r\n                          </Modal.Header>\r\n                          <Modal.Body>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                              <TimePicker\r\n                                showSecond={false}\r\n                                onChange={value =>\r\n                                  this.setState({\r\n                                    addTimeSlotSlot:\r\n                                      value && value.format(format)\r\n                                  })\r\n                                }\r\n                                placeholder=\"Select Time Slot\"\r\n                                className=\"w-50\"\r\n                                format={format}\r\n                                use12Hours\r\n                                inputReadOnly\r\n                              />\r\n                            </Form.Group>\r\n                          </Modal.Body>\r\n                          <Modal.Footer>\r\n                            <Button onClick={this.addRoomTimeSlot}>\r\n                              Add Room\r\n                            </Button>\r\n                            <Button\r\n                              variant=\"danger\"\r\n                              onClick={this.setAddTimeSlotModelVisible}\r\n                            >\r\n                              Close\r\n                            </Button>\r\n                          </Modal.Footer>\r\n                        </Modal>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <h3 className=\"mt-2\">Upcoming Reservations</h3>\r\n                        <div className=\"d-flex justify-content-center align-items-center p-5\">\r\n                          <BarChart width={992} height={300} data={data}>\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\"></XAxis>\r\n                            <YAxis></YAxis>\r\n                            <Tooltip />\r\n                            <Bar dataKey=\"reservations\" fill=\"#82034d\" />\r\n                          </BarChart>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <h3 className=\"mt-2\">Today's Reservations</h3>\r\n\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Customer Image</th>\r\n                              <th colSpan=\"4\">Description</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {reservationsToRender.length > 0 ? (\r\n                              reservationsToRender\r\n                            ) : (\r\n                              <strong>No Reservations For Today</strong>\r\n                            )}\r\n                          </tbody>\r\n                        </Table>\r\n                      </>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(vendorMapStateToProps, vendorMapDispatchToProps)(Home);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Accordion,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\n\r\nclass UpcomingReservations extends Component {\r\n  render() {\r\n    const date = new Date();\r\n    const yesterday = new Date().setDate(date.getDate() - 1);\r\n    const reservations = this.props.reservations.filter(element => {\r\n      const elementDate = new Date(element.date);\r\n      return elementDate > yesterday;\r\n    });\r\n\r\n    const reservationsToRender = {};\r\n    reservations.forEach(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      if (reservationsToRender[element.date]) {\r\n        reservationsToRender[element.date].arr.push({ ...element, customer });\r\n      } else {\r\n        const arr = [{ customer, ...element }];\r\n        reservationsToRender[element.date] = { arr };\r\n      }\r\n    });\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Upcoming Reservations</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Accordion>\r\n                      {Object.keys(reservationsToRender).map((key, index) => {\r\n                        const reserve = reservationsToRender[key];\r\n                        return (\r\n                          <Card>\r\n                            <Card.Header>\r\n                              <Accordion.Toggle\r\n                                as={Button}\r\n                                eventKey={\"\" + index}\r\n                              >\r\n                                {key} Upcoming Reservations\r\n                              </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey={\"\" + index}>\r\n                              <Card.Body>\r\n                                <Table striped hover responsive>\r\n                                  <thead>\r\n                                    <tr>\r\n                                      <th>Customer Image</th>\r\n                                      <th colSpan=\"4\">Description</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {reserve.arr.map(element => {\r\n                                      return (\r\n                                        <tr>\r\n                                          <td>\r\n                                            <img\r\n                                              style={{\r\n                                                width: 50,\r\n                                                height: 50,\r\n                                                borderRadius: 50,\r\n                                                objectFit: \"cover\"\r\n                                              }}\r\n                                              src={\r\n                                                element.customer.photo_url\r\n                                                  ? element.customer.photo_url\r\n                                                  : \"https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg-1024x683.jpg\"\r\n                                              }\r\n                                            ></img>\r\n                                          </td>\r\n                                          <td colSpan=\"4\">\r\n                                            <strong>Customer Name: </strong>{\" \"}\r\n                                            {element.customer.name}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Reservation Time:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.time}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Number of Attendees:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.attandee}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Number of Tables:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {Math.floor(\r\n                                              Number(element.attandee / 5)\r\n                                            ) + 1}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Status of Reservation:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.status}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Customer Phone number:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.customer.number}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Customer Email:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.customer.email}\r\n                                            <br></br>\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })}\r\n                                  </tbody>\r\n                                </Table>\r\n                              </Card.Body>\r\n                            </Accordion.Collapse>\r\n                          </Card>\r\n                        );\r\n                      })}\r\n                    </Accordion>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(UpcomingReservations);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Accordion,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\nclass PreviousReservations extends Component {\r\n  render() {\r\n    const date = new Date();\r\n    const reservations = this.props.reservations.filter(element => {\r\n      const elementDate = new Date(element.date);\r\n      return elementDate < date;\r\n    });\r\n\r\n    const reservationsToRender = {};\r\n    reservations.forEach(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      if (reservationsToRender[element.date]) {\r\n        reservationsToRender[element.date].arr.push({ ...element, customer });\r\n      } else {\r\n        const arr = [{ customer, ...element }];\r\n        reservationsToRender[element.date] = { arr };\r\n      }\r\n    });\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Previous Reservations</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Accordion>\r\n                      {Object.keys(reservationsToRender).map((key, index) => {\r\n                        const reserve = reservationsToRender[key];\r\n                        return (\r\n                          <Card>\r\n                            <Card.Header>\r\n                              <Accordion.Toggle\r\n                                as={Button}\r\n                                eventKey={\"\" + index}\r\n                              >\r\n                                {key} Upcoming Reservations\r\n                              </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey={\"\" + index}>\r\n                              <Card.Body>\r\n                                <Table striped hover responsive>\r\n                                  <thead>\r\n                                    <tr>\r\n                                      <th>Customer Image</th>\r\n                                      <th colSpan=\"4\">Description</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {reserve.arr.map(element => {\r\n                                      return (\r\n                                        <tr>\r\n                                          <td>\r\n                                            <img\r\n                                              style={{\r\n                                                width: 50,\r\n                                                height: 50,\r\n                                                borderRadius: 50,\r\n                                                objectFit: \"cover\"\r\n                                              }}\r\n                                              src={\r\n                                                element.customer.photo_url\r\n                                                  ? element.customer.photo_url\r\n                                                  : \"https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg-1024x683.jpg\"\r\n                                              }\r\n                                            ></img>\r\n                                          </td>\r\n                                          <td colSpan=\"4\">\r\n                                            <strong>Customer Name: </strong>{\" \"}\r\n                                            {element.customer.name}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Reservation Time:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.time}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Number of Attendees:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.attandee}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Number of Tables:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {Math.floor(\r\n                                              Number(element.attandee / 5)\r\n                                            ) + 1}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Status of Reservation:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.status}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Customer Phone number:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.customer.number}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Customer Email:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.customer.email}\r\n                                            <br></br>\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })}\r\n                                  </tbody>\r\n                                </Table>\r\n                              </Card.Body>\r\n                            </Accordion.Collapse>\r\n                          </Card>\r\n                        );\r\n                      })}\r\n                    </Accordion>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(PreviousReservations);\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Badge,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Form,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\n\r\nclass VendorVerifications extends Component {\r\n  state = {\r\n    modalShow: false,\r\n    selectedVendor: \"\",\r\n    procFee: 0,\r\n    date: new Date(),\r\n    name: \"\"\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(element => {\r\n      const condition = element.name\r\n        .toLowerCase()\r\n        .includes(this.state.name.toLowerCase(), 0);\r\n      return condition;\r\n    });\r\n    const unverified = vendors.filter(element => !element.is_verified);\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Row className=\"justify-content-center\">\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Vendors Verification</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Form.Row style={{ paddingTop: 10 }}>\r\n                      <Form.Group as={Col} controlId=\"formGridCity\">\r\n                        <Form.Control\r\n                          onChange={e =>\r\n                            this.setState({ name: e.target.value })\r\n                          }\r\n                          placeholder=\"Search\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Table striped hover responsive>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Image</th>\r\n                          <th>Name</th>\r\n                          <th>Email</th>\r\n                          <th>Reservation Price</th>\r\n                          <th>Status</th>\r\n                          <th></th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {unverified.map(element => {\r\n                          return (\r\n                            <>\r\n                              <tr>\r\n                                <td\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <img\r\n                                    style={{\r\n                                      width: 40,\r\n                                      height: 40,\r\n                                      borderRadius: 50,\r\n                                      objectFit: \"cover\"\r\n                                    }}\r\n                                    src={\r\n                                      element.photo_url\r\n                                        ? element.photo_url\r\n                                        : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                                    }\r\n                                  ></img>\r\n                                </td>\r\n                                <td>{element.name}</td>\r\n                                <td>{element.email}</td>\r\n                                <td>{element.reservation_fee}</td>\r\n                                <td>\r\n                                  {element.is_verified ? (\r\n                                    <Badge variant=\"success\">Verified</Badge>\r\n                                  ) : (\r\n                                    <Badge variant=\"danger\">Unerified</Badge>\r\n                                  )}\r\n                                </td>\r\n                                <td>\r\n                                  <Button\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        modalShow: true,\r\n                                        selectedVendor: element.uid\r\n                                      });\r\n                                    }}\r\n                                    variant=\"success\"\r\n                                    size=\"sm\"\r\n                                  >\r\n                                    Verify\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </Table>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>{\" \"}\r\n          <Footer></Footer>\r\n        </Header>\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Processing Fee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  Processing Fee\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                type=\"number\"\r\n                onChange={e => {\r\n                  this.setState({\r\n                    newProFee: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={async () => {\r\n                await Firebase.updateProcessingFeeAndVerify(\r\n                  this.state.newProFee,\r\n                  this.state.selectedVendor\r\n                );\r\n                this.setState({ modalShow: false });\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.setState({ modalShow: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(VendorVerifications)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport { Container, Row, Col, Card, Media } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\n\r\nclass Reviews extends Component {\r\n  render() {\r\n    const reviewsToRender = this.props.reviews.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, element.rating);\r\n      return (\r\n        <>\r\n          <Media as=\"li\">\r\n            <img\r\n              width={64}\r\n              height={64}\r\n              className=\"mr-5\"\r\n              style={{ objectFit: \"cover\", borderRadius: \"50%\" }}\r\n              src={\r\n                customer.photo_url\r\n                  ? customer.photo_url\r\n                  : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n              }\r\n              alt=\"Generic placeholder\"\r\n            />\r\n            <Media.Body>\r\n              <h5 style={{ fontWeight: \"bold\" }}>{customer.name}</h5>\r\n              <Row className=\"media-stars mb-3\">\r\n                {array.map(star => {\r\n                  return <ion-icon name={star}></ion-icon>;\r\n                })}\r\n              </Row>\r\n              <p>{element.comment}</p>\r\n            </Media.Body>\r\n          </Media>\r\n          <hr></hr>\r\n        </>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Reviews & Ratings</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <ul className=\"list-unstyled mt-5\">\r\n                      {reviewsToRender.length > 0 ? (\r\n                        reviewsToRender\r\n                      ) : (\r\n                        <h3>No reviews for you so far</h3>\r\n                      )}\r\n                    </ul>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(Reviews);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Modal,\r\n  Button,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport \"./Menu.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nclass Menu extends Component {\r\n  state = {\r\n    addCategoryModalVisible: false,\r\n    addDishesModalVisible: false,\r\n    editCategoryModalVisible: false,\r\n    editDishesModalVisible: false,\r\n    addCategoryName: \"\",\r\n    updateCategoryName: \"\",\r\n    categoryToUpdate: \"\",\r\n    addDishImage: null,\r\n    addDishName: \"\",\r\n    addDishCategory: \"\",\r\n    addDishPrice: 0,\r\n    addDishIngredients: \"\",\r\n    updateDishImage: null,\r\n    updateDishImageUrl: \"\",\r\n    updateDishName: \"\",\r\n    updateDishCategory: \"\",\r\n    updateDishPrice: 0,\r\n    updateDishIngredients: \"\",\r\n    updateDishKey: \"\"\r\n  };\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      addDishCategory: this.props.categories[0]\r\n        ? this.props.categories[0].category\r\n        : \"\"\r\n    });\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  setAddCategoryVisible = () => {\r\n    this.setState({\r\n      addCategoryModalVisible: !this.state.addCategoryModalVisible\r\n    });\r\n  };\r\n  setAddDishesVisible = () => {\r\n    this.setState({\r\n      addDishesModalVisible: !this.state.addDishesModalVisible\r\n    });\r\n  };\r\n  setEditCategoryVisible = () => {\r\n    this.setState({\r\n      editCategoryModalVisible: !this.state.editCategoryModalVisible\r\n    });\r\n  };\r\n  setEditDishesVisible = () => {\r\n    this.setState({\r\n      editDishesModalVisible: !this.state.editDishesModalVisible\r\n    });\r\n  };\r\n  addCategory = async () => {\r\n    await Firebase.addCategory(\r\n      this.state.addCategoryName,\r\n      this.props.vendor.uid\r\n    );\r\n    this.setAddCategoryVisible();\r\n    window.location.reload();\r\n  };\r\n  updateCategory = async () => {\r\n    await Firebase.updateCategory(\r\n      this.state.categoryToUpdate,\r\n      this.state.updateCategoryName,\r\n      this.props.vendor.uid\r\n    );\r\n    this.setEditCategoryVisible();\r\n    window.location.reload();\r\n  };\r\n  deleteCategory = async category_key => {\r\n    await Firebase.deleteCategory(category_key, this.props.vendor.uid);\r\n    window.location.reload();\r\n  };\r\n  deleteDish = async dish_key => {\r\n    await Firebase.deleteDish(dish_key);\r\n    window.location.reload();\r\n  };\r\n  fileInputHandler = e => {\r\n    console.log(e.target.files[0]);\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0]\r\n    });\r\n  };\r\n  dishFileInputHandler = e => {\r\n    this.setState(\r\n      {\r\n        updateDishImage: e.target.files[0]\r\n      },\r\n      async () => {\r\n        await Firebase.updateDishImage(\r\n          this.state.updateDishImage,\r\n          this.state.updateDishKey\r\n        );\r\n      }\r\n    );\r\n  };\r\n  addDish = async () => {\r\n    await Firebase.addDish(\r\n      this.state.addDishName,\r\n      this.state.addDishCategory,\r\n      this.state.addDishIngredients,\r\n      this.state.addDishImage,\r\n      this.state.addDishPrice,\r\n      this.props.vendor.uid\r\n    );\r\n    window.location.reload();\r\n  };\r\n  updateDish = async () => {\r\n    await Firebase.updateDish(\r\n      this.state.updateDishName,\r\n      this.state.updateDishCategory,\r\n      this.state.updateDishIngredients,\r\n      this.state.updateDishPrice,\r\n      this.state.updateDishKey\r\n    );\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Menu</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Row>\r\n                      <Col xs=\"12\" md=\"6\">\r\n                        <Card>\r\n                          <Card.Header draggable>\r\n                            <h4>Menu Categories</h4>\r\n                          </Card.Header>\r\n                          <Card.Body>\r\n                            {this.props.categories.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                                    <Col xs=\"8\">{element.category}</Col>\r\n                                    <Col\r\n                                      xs=\"2\"\r\n                                      onClick={() => {\r\n                                        this.setState({\r\n                                          updateCategoryName: element.category,\r\n                                          categoryToUpdate: element.category_key\r\n                                        });\r\n                                        this.setEditCategoryVisible();\r\n                                      }}\r\n                                    >\r\n                                      <ion-icon\r\n                                        className=\"menu-icon\"\r\n                                        name=\"create-outline\"\r\n                                      ></ion-icon>\r\n                                    </Col>\r\n                                    <Col\r\n                                      xs=\"2\"\r\n                                      onClick={() =>\r\n                                        this.deleteCategory(\r\n                                          element.category_key\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <ion-icon\r\n                                        className=\"menu-icon\"\r\n                                        name=\"close-circle-outline\"\r\n                                      ></ion-icon>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <hr className=\"mb-4\"></hr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                            <div\r\n                              onClick={this.setAddCategoryVisible}\r\n                              className=\"menu d-flex justify-content-center align-items-center\"\r\n                            >\r\n                              <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n                            </div>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </Col>\r\n                      <Col xs=\"12\" md=\"6\">\r\n                        <Card>\r\n                          <Card.Header draggable>\r\n                            <h4>Menu Dishes</h4>\r\n                          </Card.Header>\r\n                          <Card.Body>\r\n                            {this.props.dishes.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                                    <Col xs=\"8\">\r\n                                      <div className=\"d-flex align-items-center w-100\">\r\n                                        <img\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: 25,\r\n                                            objectFit: \"cover\"\r\n                                          }}\r\n                                          src={element.photo_url}\r\n                                        ></img>\r\n                                        <p className=\"ml-3 mt-3\">\r\n                                          {element.name}\r\n                                        </p>\r\n                                      </div>\r\n                                    </Col>\r\n                                    <Col\r\n                                      xs=\"2\"\r\n                                      onClick={() => {\r\n                                        this.setState({\r\n                                          updateDishCategory: element.category,\r\n                                          updateDishPrice: element.price,\r\n                                          updateDishImageUrl: element.photo_url,\r\n                                          updateDishIngredients:\r\n                                            element.ingredients,\r\n                                          updateDishKey: element.dish_key,\r\n                                          updateDishName: element.name\r\n                                        });\r\n                                        this.setEditDishesVisible();\r\n                                      }}\r\n                                    >\r\n                                      <ion-icon\r\n                                        className=\"menu-icon\"\r\n                                        name=\"create-outline\"\r\n                                      ></ion-icon>\r\n                                    </Col>\r\n                                    <Col\r\n                                      xs=\"2\"\r\n                                      onClick={() =>\r\n                                        this.deleteDish(element.dish_key)\r\n                                      }\r\n                                    >\r\n                                      <ion-icon\r\n                                        className=\"menu-icon\"\r\n                                        name=\"close-circle-outline\"\r\n                                      ></ion-icon>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <hr className=\"mb-4\"></hr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                            <div\r\n                              onClick={this.setAddDishesVisible}\r\n                              className=\"menu d-flex justify-content-center align-items-center\"\r\n                            >\r\n                              <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n                            </div>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n        <Modal\r\n          show={this.state.addCategoryModalVisible}\r\n          size=\"lg\"\r\n          onHide={this.setAddCategoryVisible}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Add Category\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Category Name</Form.Label>\r\n              <Form.Control\r\n                onChange={this.inputHandler}\r\n                name=\"addCategoryName\"\r\n                value={this.state.addCategoryName}\r\n                type=\"text\"\r\n                placeholder=\"Enter Category Name\"\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.addCategory}>Add Category</Button>\r\n            <Button variant=\"danger\" onClick={this.setAddCategoryVisible}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          show={this.state.editCategoryModalVisible}\r\n          size=\"lg\"\r\n          onHide={this.setEditCategoryVisible}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Update Category\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Category Name</Form.Label>\r\n              <Form.Control\r\n                onChange={this.inputHandler}\r\n                name=\"updateCategoryName\"\r\n                value={this.state.updateCategoryName}\r\n                type=\"text\"\r\n                placeholder=\"Enter Category Name\"\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.updateCategory}>Update Category</Button>\r\n            <Button variant=\"danger\" onClick={this.setEditCategoryVisible}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          show={this.state.addDishesModalVisible}\r\n          size=\"lg\"\r\n          onHide={this.setAddDishesVisible}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Add Dish\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex w-100 flex-column align-items-center justify-content-center\">\r\n              <img\r\n                style={{\r\n                  width: 200,\r\n                  objectFit: \"cover\",\r\n                  height: 200,\r\n                  borderRadius: \"50%\"\r\n                }}\r\n                src={\r\n                  this.state.addDishImage\r\n                    ? URL.createObjectURL(this.state.addDishImage)\r\n                    : \"https://img.pngio.com/profile-icon-png-image-free-download-searchpngcom-profile-icon-png-673_673.png\"\r\n                }\r\n              ></img>\r\n              <Form.Group className=\"mt-5\" controlId=\"formGridAddress1\">\r\n                <Form.Control\r\n                  className=\"btn btn-primary\"\r\n                  name=\"addDishImage\"\r\n                  accept=\"image/*\"\r\n                  onChange={this.fileInputHandler}\r\n                  type=\"file\"\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Dish Name</Form.Label>\r\n              <Form.Control\r\n                value={this.state.addDishName}\r\n                name=\"addDishName\"\r\n                onChange={this.inputHandler}\r\n                type=\"text\"\r\n                placeholder=\"Enter Dish Name\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                value={this.state.addDishCategory}\r\n                name=\"addDishCategory\"\r\n                onChange={this.inputHandler}\r\n                as=\"select\"\r\n              >\r\n                {this.props.categories.map((cat, index) => (\r\n                  <option selected={index === 0} value={cat.category}>\r\n                    {cat.category}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Dish Price</Form.Label>\r\n              <Form.Control\r\n                value={this.state.addDishPrice}\r\n                name=\"addDishPrice\"\r\n                onChange={this.inputHandler}\r\n                type=\"number\"\r\n                placeholder=\"Enter Dish Price\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Ingredients</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Enter Ingredients\"\r\n                as=\"textarea\"\r\n                value={this.state.addDishIngredients}\r\n                name=\"addDishIngredients\"\r\n                onChange={this.inputHandler}\r\n                rows=\"3\"\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.addDish}>Add Dishes</Button>\r\n            <Button variant=\"danger\" onClick={this.setAddDishesVisible}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          show={this.state.editDishesModalVisible}\r\n          size=\"lg\"\r\n          onHide={this.setEditDishesVisible}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Dish\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex w-100 flex-column align-items-center justify-content-center\">\r\n              <img\r\n                style={{\r\n                  width: 200,\r\n                  objectFit: \"cover\",\r\n                  height: 200,\r\n                  borderRadius: \"50%\"\r\n                }}\r\n                src={\r\n                  this.state.updateDishImage\r\n                    ? URL.createObjectURL(this.state.updateDishImage)\r\n                    : this.state.updateDishImageUrl\r\n                }\r\n              ></img>\r\n              <Form.Group className=\"mt-5\" controlId=\"formGridAddress1\">\r\n                <Form.Control\r\n                  className=\"btn btn-primary\"\r\n                  name=\"updateDishImage\"\r\n                  accept=\"image/*\"\r\n                  onChange={this.dishFileInputHandler}\r\n                  type=\"file\"\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Dish Name</Form.Label>\r\n              <Form.Control\r\n                value={this.state.updateDishName}\r\n                name=\"updateDishName\"\r\n                onChange={this.inputHandler}\r\n                type=\"text\"\r\n                placeholder=\"Enter Dish Name\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                value={this.state.updateDishCategory}\r\n                name=\"updateDishCategory\"\r\n                onChange={this.inputHandler}\r\n                as=\"select\"\r\n              >\r\n                {this.props.categories.map((cat, index) => (\r\n                  <option\r\n                    selected={this.state.updateDishCategory === cat.category}\r\n                    value={cat.category}\r\n                  >\r\n                    {cat.category}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Dish Price</Form.Label>\r\n              <Form.Control\r\n                value={this.state.updateDishPrice}\r\n                name=\"updateDishPrice\"\r\n                onChange={this.inputHandler}\r\n                type=\"number\"\r\n                placeholder=\"Enter Dish Price\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Ingredients</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Enter Ingredients\"\r\n                as=\"textarea\"\r\n                value={this.state.updateDishIngredients}\r\n                name=\"updateDishIngredients\"\r\n                onChange={this.inputHandler}\r\n                rows=\"3\"\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.updateDish}>Edit Dishes</Button>\r\n            <Button variant=\"danger\" onClick={this.setEditDishesVisible}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(vendorMapStateToProps, vendorMapDispatchToProps)(Menu);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport {\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Spinner\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass EditProfile extends Component {\r\n  state = {\r\n    phone: \"\",\r\n    reservationFee: 0,\r\n    location: {\r\n      lat: 0,\r\n      long: 0\r\n    },\r\n    bankName: \"\",\r\n    accountName: \"\",\r\n    accountNumber: \"\",\r\n    address: \"\",\r\n    imageUploading: false,\r\n    vendorUpdating: false,\r\n    name: \"\"\r\n  };\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      phone: this.props.vendor.number,\r\n      reservationFee: this.props.vendor.reservation_fee,\r\n      location: {\r\n        lat: this.props.vendor.llocation.lat,\r\n        long: this.props.vendor.llocation.llong\r\n      },\r\n      bankName: this.props.vendor.bank_details.bank_name,\r\n      accountName: this.props.vendor.bank_details.account_name,\r\n      accountNumber: this.props.vendor.bank_details.accountNumber,\r\n      address: this.props.vendor.address,\r\n      name: this.props.vendor.name\r\n    });\r\n  };\r\n  updateImage = async e => {\r\n    this.setState({\r\n      imageUploading: true\r\n    });\r\n    await Firebase.updateVendorImage(e.target.files[0], this.props.vendor.uid);\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    this.setState({\r\n      imageUploading: false\r\n    });\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  submit = async () => {\r\n    this.setState({\r\n      imageUploading: true\r\n    });\r\n    await Firebase.updateVendor(\r\n      this.state.name,\r\n      this.state.phone,\r\n      this.state.reservationFee,\r\n      this.state.location.lat,\r\n      this.state.location.long,\r\n      this.state.accountNumber,\r\n      this.state.accountName,\r\n      this.state.bankName,\r\n      this.props.vendor.uid\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    this.setState({\r\n      imageUploading: false\r\n    });\r\n    this.props.history.push(\"/vendor/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Profile Setting</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                      <img\r\n                        style={{\r\n                          width: \"200px\",\r\n                          height: \"200px\",\r\n                          objectFit: \"cover\",\r\n                          borderRadius: \"50%\"\r\n                        }}\r\n                        src={\r\n                          this.props.vendor.photo_url\r\n                            ? this.props.vendor.photo_url\r\n                            : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                        }\r\n                      ></img>\r\n                      {this.state.imageUploading ? (\r\n                        <Spinner\r\n                          style={{ width: 30, height: 30 }}\r\n                          animation=\"border\"\r\n                          variant=\"dark\"\r\n                          className=\"mt-5\"\r\n                        />\r\n                      ) : (\r\n                        <Form.Group\r\n                          className=\"mt-5\"\r\n                          controlId=\"formGridAddress1\"\r\n                        >\r\n                          <Form.Control\r\n                            className=\"btn btn-primary\"\r\n                            accept=\"image/*\"\r\n                            onChange={this.updateImage}\r\n                            type=\"file\"\r\n                          />\r\n                        </Form.Group>\r\n                      )}\r\n                    </div>\r\n                    <hr className=\"my-5\"></hr>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                      <Form.Label>Vendor Name</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Vendor Name\"\r\n                        value={this.state.name}\r\n                        name=\"name\"\r\n                        onChange={this.inputHandler}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>Vendor Type</Form.Label>\r\n                      <Form.Control disabled as=\"select\">\r\n                        <option\r\n                          selected={\r\n                            this.props.vendor.category === \"Restaurants\"\r\n                          }\r\n                          value=\"Restaurant\"\r\n                        >\r\n                          Restaurant\r\n                        </option>\r\n                        <option\r\n                          selected={this.props.vendor.category === \"Cafes\"}\r\n                          value=\"Cafe\"\r\n                        >\r\n                          Cafe\r\n                        </option>\r\n                        <option\r\n                          selected={\r\n                            this.props.vendor.category === \"Escape Rooms\"\r\n                          }\r\n                          value=\"Escape Room\"\r\n                        >\r\n                          Escape Room\r\n                        </option>\r\n                        <option\r\n                          selected={this.props.vendor.category === \"Events\"}\r\n                          value=\"Event\"\r\n                        >\r\n                          Event\r\n                        </option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                      <Form.Label>Branch</Form.Label>\r\n                      <Form.Control disabled as=\"select\">\r\n                        <option\r\n                          selected={this.props.vendor.branch === \"Main\"}\r\n                          value=\"Main\"\r\n                        >\r\n                          Main\r\n                        </option>\r\n                        <option\r\n                          selected={this.props.vendor.branch === \"Sub\"}\r\n                          value=\"Sub\"\r\n                        >\r\n                          Sub\r\n                        </option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <hr className=\"my-5\"></hr>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                      <Form.Label>Email address</Form.Label>\r\n                      <Form.Control\r\n                        value={this.props.vendor.email}\r\n                        disabled\r\n                        type=\"email\"\r\n                        placeholder=\"Enter your Email Address\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                      <Form.Label>Phone Number</Form.Label>\r\n                      <Form.Control\r\n                        value={this.state.phone}\r\n                        name=\"phone\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your Phone\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                      <Form.Label>Reservation Fee</Form.Label>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>EGP</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                          value={this.state.reservationFee}\r\n                          name=\"reservationFee\"\r\n                          onChange={this.inputHandler}\r\n                          type=\"number\"\r\n                          aria-label=\"Amount (to the nearest dollar)\"\r\n                        />\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n                    <hr className=\"my-5\"></hr>\r\n                    <h3>Location</h3>\r\n                    <hr className=\"my-5\"></hr>\r\n                    <h3 className=\"mb-5\">Bank Details</h3>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                      <Form.Label>Bank Name</Form.Label>\r\n                      <Form.Control\r\n                        value={this.state.bankName}\r\n                        name=\"bankName\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your Bank Name\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                      <Form.Label>Account Name</Form.Label>\r\n                      <Form.Control\r\n                        value={this.state.accountName}\r\n                        name=\"accountName\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your Account Name\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                      <Form.Label>Account Number</Form.Label>\r\n                      <Form.Control\r\n                        value={this.state.accountNumber}\r\n                        name=\"phone\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"number\"\r\n                        placeholder=\"Enter your Account Number\"\r\n                      />\r\n                    </Form.Group>\r\n                    <hr className=\"my-5\"></hr>\r\n                    {this.state.vendorUpdating ? (\r\n                      <Spinner\r\n                        style={{ width: 30, height: 30 }}\r\n                        animation=\"border\"\r\n                        variant=\"dark\"\r\n                        className=\"mt-5\"\r\n                      />\r\n                    ) : (\r\n                      <Button\r\n                        onClick={this.submit}\r\n                        variant=\"primary\"\r\n                        size=\"lg\"\r\n                        block\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(withRouter(EditProfile));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapDispatchToProps,\r\n  vendorMapStateToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\nclass Registration extends Component {\r\n  state = {\r\n    image: null,\r\n    name: \"\",\r\n    vendorType: \"Restaurants\",\r\n    branch: \"Main\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    reservationFee: 0,\r\n    location: {\r\n      lat: 0,\r\n      long: 0\r\n    },\r\n    bankName: \"\",\r\n    accountName: \"\",\r\n    accountNumber: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    address: \"\"\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  fileInputHandler = e => {\r\n    console.log(e.target.files[0]);\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0]\r\n    });\r\n  };\r\n  register = async () => {\r\n    const user = await Firebase.createVendor(\r\n      this.state.email,\r\n      this.state.password,\r\n      this.state.address,\r\n      this.state.accountNumber,\r\n      this.state.accountName,\r\n      this.state.bankName,\r\n      this.state.branch,\r\n      this.state.vendorType,\r\n      this.state.location.lat,\r\n      this.state.location.long,\r\n      this.state.name,\r\n      this.state.phone,\r\n      this.state.image,\r\n      this.state.image.name.split(\".\")[\r\n        this.state.image.name.split(\".\").length - 1\r\n      ],\r\n      this.state.reservationFee\r\n    );\r\n    if (user) {\r\n      alert(\"Account has been registered\");\r\n      const vendor = await Firebase.loginVendor(\r\n        this.state.email,\r\n        this.state.password\r\n      );\r\n      this.props.updateLogin(vendor);\r\n      setVendor(vendor);\r\n      this.props.history.push(\"/vendor/\");\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Account could not be registered\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col\r\n              xs=\"12\"\r\n              style={{\r\n                padding: 50,\r\n                paddingTop: \"10vh\",\r\n                paddingBottom: \"10vh\",\r\n                backgroundColor: \"#ba0fb4\"\r\n              }}\r\n            >\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Vendor Registration</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <img\r\n                      style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        objectFit: \"cover\",\r\n                        borderRadius: \"50%\"\r\n                      }}\r\n                      src={\r\n                        this.state.image\r\n                          ? URL.createObjectURL(this.state.image)\r\n                          : \"https://img.pngio.com/profile-icon-png-image-free-download-searchpngcom-profile-icon-png-673_673.png\"\r\n                      }\r\n                    ></img>\r\n                    <Form.Group className=\"mt-5\" controlId=\"formGridAddress1\">\r\n                      <Form.Control\r\n                        className=\"btn btn-primary\"\r\n                        name=\"image\"\r\n                        accept=\"image/*\"\r\n                        onChange={this.fileInputHandler}\r\n                        type=\"file\"\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Form.Group controlId=\"formGroupEmail\">\r\n                    <Form.Label>Vendor Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"name\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Vendor Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label>Vendor Type</Form.Label>\r\n                    <Form.Control\r\n                      name=\"vendorType\"\r\n                      onChange={this.inputHandler}\r\n                      as=\"select\"\r\n                    >\r\n                      <option value=\"Restaurants\">Restaurant</option>\r\n                      <option value=\"Cafes\">Cafe</option>\r\n                      <option value=\"Escape Rooms\">Escape Room</option>\r\n                      <option value=\"Events\">Event</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                    <Form.Label>Branch</Form.Label>\r\n                    <Form.Control\r\n                      name=\"branch\"\r\n                      onChange={this.inputHandler}\r\n                      as=\"select\"\r\n                    >\r\n                      <option value=\"Main\">Main</option>\r\n                      <option value=\"Sub\">Sub</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      name=\"email\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"email\"\r\n                      placeholder=\"Enter your Email Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                      name=\"address\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                    <Form.Control\r\n                      name=\"phone\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Phone\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Reservation Fee</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>EGP</InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl\r\n                        name=\"reservationFee\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"number\"\r\n                        aria-label=\"Amount (to the nearest dollar)\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <p>Location</p>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <h3 className=\"mb-5\">Bank Details</h3>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Bank Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"bankName\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Bank Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput7\">\r\n                    <Form.Label>Account Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"accountName\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Account Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput6\">\r\n                    <Form.Label>Account Number</Form.Label>\r\n                    <Form.Control\r\n                      name=\"accountNumber\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"number\"\r\n                      placeholder=\"Enter your Account Number\"\r\n                    />\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n\r\n                  <h3 className=\"mb-5\">Change Password</h3>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput4\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      name=\"password\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"password\"\r\n                      placeholder=\"Enter your Password\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput5\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                      name=\"confirmPassword\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"password\"\r\n                      placeholder=\"Renter your Password\"\r\n                    />\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Button\r\n                    onClick={this.register}\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    block\r\n                  >\r\n                    Submit Registration\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(withRouter(Registration));\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../../Images/logo.mp4\";\r\nexport default class AccountUnverified extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ height: \"100vh\", background: \"white\" }}\r\n        className=\"flex-column d-flex align-items-center justify-content-center w-100\"\r\n      >\r\n        <video src={Logo} style={{ width: \"50%\" }} muted autoPlay></video>\r\n        <p className=\"text-muted\">\r\n          Please wait while your account is being verified by our\r\n          administrators.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapDispatchToProps,\r\n  vendorMapStateToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\nclass RegistrationSocial extends Component {\r\n  state = {\r\n    image: null,\r\n    name: \"\",\r\n    vendorType: \"Restaurants\",\r\n    branch: \"Main\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    reservationFee: 0,\r\n    location: {\r\n      lat: 0,\r\n      long: 0\r\n    },\r\n    bankName: \"\",\r\n    accountName: \"\",\r\n    accountNumber: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    address: \"\",\r\n    uid: \"\"\r\n  };\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      image: this.props.registrationInfo.photoUrl,\r\n      name: this.props.registrationInfo.name,\r\n      email: this.props.registrationInfo.email,\r\n      uid: this.props.registrationInfo.uid\r\n    });\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  fileInputHandler = e => {\r\n    console.log(e.target.files[0]);\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0]\r\n    });\r\n  };\r\n  register = async () => {\r\n    const user = await Firebase.createVendorSocial(\r\n      this.state.email,\r\n      this.state.address,\r\n      this.state.accountNumber,\r\n      this.state.accountName,\r\n      this.state.bankName,\r\n      this.state.branch,\r\n      this.state.vendorType,\r\n      this.state.location.lat,\r\n      this.state.location.long,\r\n      this.state.name,\r\n      this.state.phone,\r\n      this.state.image,\r\n      this.state.reservationFee,\r\n      this.state.uid\r\n    );\r\n    if (user) {\r\n      alert(\"Account has been registered\");\r\n      const vendor = await Firebase.getVendor(this.state.uid);\r\n      this.props.updateLogin(vendor);\r\n      setVendor(vendor);\r\n      this.props.history.push(\"/vendor/\");\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Account could not be registered\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col\r\n              xs=\"12\"\r\n              style={{\r\n                padding: 50,\r\n                paddingTop: \"10vh\",\r\n                paddingBottom: \"10vh\",\r\n                backgroundColor: \"#ba0fb4\"\r\n              }}\r\n            >\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Vendor Registration</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <img\r\n                      style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        objectFit: \"cover\",\r\n                        borderRadius: \"50%\"\r\n                      }}\r\n                      src={\r\n                        this.state.image\r\n                          ? this.state.image\r\n                          : \"https://img.pngio.com/profile-icon-png-image-free-download-searchpngcom-profile-icon-png-673_673.png\"\r\n                      }\r\n                    ></img>\r\n                  </div>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Form.Group controlId=\"formGroupEmail\">\r\n                    <Form.Label>Vendor Name</Form.Label>\r\n                    <Form.Control\r\n                      disabled\r\n                      value={this.state.name}\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Vendor Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label>Vendor Type</Form.Label>\r\n                    <Form.Control\r\n                      name=\"vendorType\"\r\n                      onChange={this.inputHandler}\r\n                      as=\"select\"\r\n                    >\r\n                      <option value=\"Restaurants\">Restaurant</option>\r\n                      <option value=\"Cafes\">Cafe</option>\r\n                      <option value=\"Escape Rooms\">Escape Room</option>\r\n                      <option value=\"Events\">Event</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                    <Form.Label>Branch</Form.Label>\r\n                    <Form.Control\r\n                      name=\"branch\"\r\n                      onChange={this.inputHandler}\r\n                      as=\"select\"\r\n                    >\r\n                      <option value=\"Main\">Main</option>\r\n                      <option value=\"Sub\">Sub</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      disabled\r\n                      value={this.state.email}\r\n                      name=\"email\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"email\"\r\n                      placeholder=\"Enter your Email Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                      name=\"address\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                    <Form.Control\r\n                      name=\"phone\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Phone\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Reservation Fee</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>EGP</InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl\r\n                        name=\"reservationFee\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"number\"\r\n                        aria-label=\"Amount (to the nearest dollar)\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <p>Location</p>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <h3 className=\"mb-5\">Bank Details</h3>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Bank Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"bankName\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Bank Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput7\">\r\n                    <Form.Label>Account Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"accountName\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Account Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput6\">\r\n                    <Form.Label>Account Number</Form.Label>\r\n                    <Form.Control\r\n                      name=\"accountNumber\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"number\"\r\n                      placeholder=\"Enter your Account Number\"\r\n                    />\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Button\r\n                    onClick={this.register}\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    block\r\n                  >\r\n                    Submit Registration\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(withRouter(RegistrationSocial));\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport VendorLogin from \"../Pages/Vendor/Login/Login\";\r\nimport VendorHome from \"../Pages/Vendor/Home/Home\";\r\nimport UpcomingReservations from \"../Pages/Vendor/UpcomingReservations/UpcomingReservations\";\r\nimport PreviousReservations from \"../Pages/Vendor/PreviousReservations/PreviousReservations\";\r\nimport Reviews from \"../Pages/Vendor/Reviews/Reviews\";\r\nimport Menu from \"../Pages/Vendor/Menu/Menu\";\r\nimport EditProfile from \"../Pages/Vendor/EditProfile/EditProfile\";\r\nimport Registration from \"../Pages/Vendor/Registration/Registration\";\r\nimport { connect } from \"react-redux\";\r\nimport Logo from \"../Images/logo.mp4\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../Config/VendorMapping\";\r\nimport Firebase from \"../Firebase/Firebase\";\r\nimport { getVendor, setVendor } from \"../Config/localStorage\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport AccountUnverified from \"../Pages/Vendor/AccountUnverified/AccountUnverified\";\r\nimport RegistrationSocial from \"../Pages/Vendor/RegistrationSocial/RegistrationSocial\";\r\nclass VendorRouter extends Component {\r\n  state = { loading: true };\r\n  componentDidMount = async () => {\r\n    const vendorInitial = getVendor();\r\n    console.log(vendorInitial);\r\n    if (vendorInitial) {\r\n      let vendor = await Firebase.getVendor(vendorInitial.uid);\r\n      if (vendor.is_verified !== vendorInitial.is_verified) {\r\n        setVendor(vendor);\r\n        window.location.reload();\r\n      } else {\r\n        if (vendor) {\r\n          const dishes = await Firebase.getDishesVendor(vendor.uid);\r\n          this.props.updateDishes(dishes);\r\n          const reviews = await Firebase.getReviews(vendor.uid);\r\n          this.props.updateReviews(reviews);\r\n          const categories = await Firebase.getCategories(vendor.uid);\r\n          this.props.updateCategories(categories);\r\n          console.log(categories);\r\n          const customers = await Firebase.getCustomers();\r\n          this.props.updateCustomers(customers);\r\n          const notifications = await Firebase.getNotificationsVendor(\r\n            vendor.uid\r\n          );\r\n          this.props.updateNotifications(notifications);\r\n          const reservations = await Firebase.getReservationsVendor(vendor.uid);\r\n          this.props.updateReservations(reservations);\r\n\r\n          Firebase.vendorListenToDishes(snapshot => {\r\n            const updatedValue = snapshot.val();\r\n            let newDishes = [...this.props.dishes];\r\n            const foundIndex = newDishes.findIndex(\r\n              e => e.dish_key == updatedValue.dish_key\r\n            );\r\n            if (foundIndex >= 0) {\r\n              newDishes[foundIndex] = updatedValue;\r\n            } else {\r\n              if (updatedValue.uid === vendor.uid) {\r\n                newDishes.push(updatedValue);\r\n              }\r\n            }\r\n            this.props.updateDishes(newDishes);\r\n          });\r\n          Firebase.vendorListenToCategories(snapshot => {\r\n            const updatedValue = snapshot.val();\r\n            console.log(updatedValue);\r\n            let newCategories = [...this.props.categories];\r\n            const foundIndex = newCategories.findIndex(\r\n              e => e.category_key == updatedValue.category_key\r\n            );\r\n            if (foundIndex >= 0) {\r\n              newCategories[foundIndex] = updatedValue;\r\n            } else {\r\n              newCategories.push(updatedValue);\r\n            }\r\n            this.props.updateCategories(newCategories);\r\n          }, vendor.uid);\r\n          Firebase.vendorListenToNotifications(snapshot => {\r\n            const updatedValue = snapshot.val();\r\n            let newNotifications = [...this.props.notifications];\r\n            const foundIndex = newNotifications.findIndex(\r\n              e => e.notification_key == updatedValue.notification_key\r\n            );\r\n            if (foundIndex >= 0) {\r\n              newNotifications[foundIndex] = updatedValue;\r\n            } else {\r\n              newNotifications.push(updatedValue);\r\n            }\r\n            this.props.updateNotifications(newNotifications);\r\n          }, vendor.uid);\r\n          Firebase.vendorListenToReservations(snapshot => {\r\n            const updatedValue = snapshot.val();\r\n            let newReservations = [...this.props.reservations];\r\n            const foundIndex = newReservations.findIndex(\r\n              e => e.reservation_key == updatedValue.reservation_key\r\n            );\r\n            if (foundIndex >= 0) {\r\n              newReservations[foundIndex] = updatedValue;\r\n            } else {\r\n              if (updatedValue.restaurant_uid === vendor.uid) {\r\n                newReservations.push(updatedValue);\r\n              }\r\n            }\r\n            this.props.updateReservations(newReservations);\r\n          });\r\n\r\n          this.props.updateLogin(vendor);\r\n        }\r\n      }\r\n    }\r\n    this.setState({ loading: false });\r\n  };\r\n  render() {\r\n    return !this.state.loading ? (\r\n      <>\r\n        {this.props.vendor ? (\r\n          <>\r\n            {this.props.vendor.is_verified ? (\r\n              <>\r\n                <Route exact path=\"/vendor/\">\r\n                  <VendorHome></VendorHome>\r\n                </Route>\r\n                <Route exact path=\"/vendor/upcoming\">\r\n                  <UpcomingReservations></UpcomingReservations>\r\n                </Route>\r\n                <Route exact path=\"/vendor/past\">\r\n                  <PreviousReservations></PreviousReservations>\r\n                </Route>\r\n                <Route exact path=\"/vendor/reviews\">\r\n                  <Reviews></Reviews>\r\n                </Route>\r\n                <Route exact path=\"/vendor/menu\">\r\n                  <Menu></Menu>\r\n                </Route>\r\n                <Route exact path=\"/vendor/profile\">\r\n                  <EditProfile></EditProfile>\r\n                </Route>\r\n              </>\r\n            ) : (\r\n              <Route path=\"/vendor/\">\r\n                <AccountUnverified></AccountUnverified>\r\n              </Route>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/vendor/\">\r\n              <VendorLogin></VendorLogin>\r\n            </Route>\r\n            <Route exact path=\"/vendor/register\">\r\n              <Registration></Registration>\r\n            </Route>\r\n            <Route exact path=\"/vendor/registersocial\">\r\n              <RegistrationSocial></RegistrationSocial>\r\n            </Route>\r\n          </>\r\n        )}\r\n      </>\r\n    ) : (\r\n      <div\r\n        style={{ height: \"100vh\", background: \"white\" }}\r\n        className=\"flex-column d-flex align-items-center justify-content-center w-100\"\r\n      >\r\n        <video src={Logo} style={{ width: \"50%\" }} muted autoPlay loop></video>\r\n        <Spinner\r\n          style={{ width: 30, height: 30 }}\r\n          animation=\"border\"\r\n          variant=\"dark\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(VendorRouter);\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport Home from \"../Pages/Home/Home\";\r\nimport TermsAndConditions from \"../Pages/TermsAndConditions/TermsAndConditions\";\r\nimport PrivacyPolicy from \"../Pages/PrivacyPolicy/PrivacyPolicy\";\r\nimport Contact from \"../Pages/Contact/Contact\";\r\nimport AdminLogin from \"../Pages/Admin/Login/Login\";\r\nimport Dashboard from \"../Pages/Admin/Dashboard/Dashboard\";\r\nimport Vendor from \"../Pages/Admin/Vendor/Vendor\";\r\nimport Complaints from \"../Pages/Admin/Complaints/Complaints\";\r\nimport Reservations from \"../Pages/Admin/Reservations/Reservations\";\r\nimport Customer from \"../Pages/Admin/Customer/Customer\";\r\nimport DiscountVouchers from \"../Pages/Admin/DiscountVouchers/DiscountVouchers\";\r\nimport Slideshow from \"../Pages/Admin/Slideshow/Slideshow\";\r\nimport { mapDispatchToProps, mapStateToProps } from \"../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAdmin } from \"../Config/localStorage\";\r\nimport Firebase from \"../Firebase/Firebase\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport VendorLogin from \"../Pages/Vendor/Login/Login\";\r\nimport VendorHome from \"../Pages/Vendor/Home/Home\";\r\nimport UpcomingReservations from \"../Pages/Vendor/UpcomingReservations/UpcomingReservations\";\r\nimport PreviousReservations from \"../Pages/Vendor/PreviousReservations/PreviousReservations\";\r\nimport VendorVerifications from \"../Pages/Admin/VendorVerifications/VendorVerifications\";\r\nimport Reviews from \"../Pages/Vendor/Reviews/Reviews\";\r\nimport Menu from \"../Pages/Vendor/Menu/Menu\";\r\nimport EditProfile from \"../Pages/Vendor/EditProfile/EditProfile\";\r\nimport Registration from \"../Pages/Vendor/Registration/Registration\";\r\nimport VendorRouter from \"./VendorRouter\";\r\nclass Router extends Component {\r\n  state = {\r\n    loading: true\r\n  };\r\n  componentDidMount = async () => {\r\n    const admin = getAdmin();\r\n    if (admin) {\r\n      const vendors = await Firebase.getRestaurants();\r\n      this.props.updateVendors(vendors);\r\n      const reviews = await Firebase.getAllReviews();\r\n      this.props.updateReviews(reviews);\r\n      const complaints = await Firebase.getComplaints();\r\n      this.props.updateComplaints(complaints);\r\n      const customers = await Firebase.getCustomers();\r\n      this.props.updateCustomers(customers);\r\n      const vouchers = await Firebase.getDiscountVouchers();\r\n      this.props.updateDiscountVouchers(vouchers);\r\n      const notifications = await Firebase.getNotifications(admin.uid);\r\n      this.props.updateNotifications(notifications);\r\n      const reservations = await Firebase.getReservations();\r\n      this.props.updateReservations(reservations);\r\n      const slideshows = await Firebase.getSlideShows();\r\n      this.props.updateSlideshows(slideshows);\r\n      Firebase.listenToVendors(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newVendors = [...this.props.vendors];\r\n        const foundIndex = newVendors.findIndex(e => e.uid == updatedValue.uid);\r\n        if (foundIndex >= 0) {\r\n          newVendors[foundIndex] = updatedValue;\r\n        } else {\r\n          newVendors.push(updatedValue);\r\n        }\r\n        this.props.updateVendors(newVendors);\r\n      });\r\n      Firebase.listenToComplaints(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newComplaints = [...this.props.complaints];\r\n        const foundIndex = newComplaints.findIndex(\r\n          e => e.complaint_key == updatedValue.complaint_key\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newComplaints[foundIndex] = updatedValue;\r\n        } else {\r\n          newComplaints.push(updatedValue);\r\n        }\r\n        this.props.updateComplaints(newComplaints);\r\n      });\r\n      Firebase.listenToCustomers(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newCustomers = [...this.props.customers];\r\n        const foundIndex = newCustomers.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newCustomers[foundIndex] = updatedValue;\r\n        } else {\r\n          newCustomers.push(updatedValue);\r\n        }\r\n        this.props.updateCustomers(newCustomers);\r\n      });\r\n      Firebase.listenToDiscountVouchers(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newVouchers = [...this.props.vouchers];\r\n        const foundIndex = newVouchers.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newVouchers[foundIndex] = updatedValue;\r\n        } else {\r\n          newVouchers.push(updatedValue);\r\n        }\r\n        this.props.updateDiscountVouchers(newVouchers);\r\n      });\r\n      Firebase.listenToNotifications(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newNotifications = [...this.props.notifications];\r\n        const foundIndex = newNotifications.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newNotifications[foundIndex] = updatedValue;\r\n        } else {\r\n          newNotifications.push(updatedValue);\r\n        }\r\n        this.props.updateNotifications(newNotifications);\r\n      });\r\n      Firebase.listenToReservations(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newReservations = [...this.props.reservations];\r\n        const foundIndex = newReservations.findIndex(\r\n          e => e.reservation_key == updatedValue.reservation_key\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newReservations[foundIndex] = updatedValue;\r\n        } else {\r\n          newReservations.push(updatedValue);\r\n        }\r\n        this.props.updateReservations(newReservations);\r\n      });\r\n      Firebase.listenToReviews(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newReviews = [...this.props.reviews];\r\n        const foundIndex = newReviews.findIndex(e => e.uid == updatedValue.uid);\r\n        if (foundIndex >= 0) {\r\n          newReviews[foundIndex] = updatedValue;\r\n        } else {\r\n          newReviews.push(updatedValue);\r\n        }\r\n        this.props.updateReviews(newReviews);\r\n      });\r\n\r\n      Firebase.listenToSlideShows(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newSlideshows = [...this.props.slideshows];\r\n        const foundIndex = newSlideshows.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newSlideshows[foundIndex] = updatedValue;\r\n        } else {\r\n          newSlideshows.push(updatedValue);\r\n        }\r\n        this.props.updateSlideshows(newSlideshows);\r\n      });\r\n      this.props.updateLogin(admin);\r\n    }\r\n    this.setState({ loading: false });\r\n  };\r\n  render() {\r\n    return this.state.loading ? (\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        <Spinner\r\n          style={{ width: 65, height: 65 }}\r\n          animation=\"border\"\r\n          variant=\"primary\"\r\n        />\r\n      </div>\r\n    ) : (\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home></Home>\r\n          </Route>\r\n          <Route exact path=\"/contact\">\r\n            <Contact></Contact>\r\n          </Route>\r\n          <Route exact path=\"/terms\">\r\n            <TermsAndConditions></TermsAndConditions>\r\n          </Route>\r\n          <Route exact path=\"/privacy\">\r\n            <PrivacyPolicy></PrivacyPolicy>\r\n          </Route>\r\n          {this.props.loggedInAdmin !== null ? (\r\n            <>\r\n              <Route exact path=\"/admin/\">\r\n                <Dashboard></Dashboard>\r\n              </Route>\r\n              <Route exact path=\"/admin/vendor/:uid\">\r\n                <Vendor></Vendor>\r\n              </Route>\r\n              <Route exact path=\"/admin/complaints\">\r\n                <Complaints></Complaints>\r\n              </Route>\r\n              <Route exact path=\"/admin/customer/:uid\">\r\n                <Customer></Customer>\r\n              </Route>\r\n              <Route exact path=\"/admin/discount\">\r\n                <DiscountVouchers></DiscountVouchers>\r\n              </Route>\r\n              <Route exact path=\"/admin/reservations\">\r\n                <Reservations></Reservations>\r\n              </Route>\r\n              <Route exact path=\"/admin/slideshow\">\r\n                <Slideshow></Slideshow>\r\n              </Route>\r\n              <Route exact path=\"/admin/verification\">\r\n                <VendorVerifications></VendorVerifications>\r\n              </Route>\r\n            </>\r\n          ) : (\r\n            <Route exact path=\"/admin/\">\r\n              <AdminLogin></AdminLogin>\r\n            </Route>\r\n          )}\r\n          <VendorRouter></VendorRouter>\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Router);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./Store/Store\";\nimport Router from \"./Navigation/Router\";\nimport Firebase from \"./Firebase/Firebase\";\n\nexport default class App extends Component {\n  componentDidMount = async () => {\n    // const vendor = await Firebase.createVendor(\n    //   \"vendor123123@gmail.com\",\n    //   \"123123\",\n    //   \"123 Street\",\n    //   \"123123123\",\n    //   \"Account Name\",\n    //   \"Habib Bank\",\n    //   \"Main\",\n    //   \"Restaurants\",\n    //   37.78510473148223,\n    //   -122.4023187160492,\n    //   \"Restaurent\",\n    //   \"03330431506\",\n    //   null,\n    //   \"\",\n    //   \"123123\"\n    // );\n  };\n  render() {\n    return (\n      <Provider store={Store}>\n        <Router></Router>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.2d5cad77.mp4\";"],"sourceRoot":""}