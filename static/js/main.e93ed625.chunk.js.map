{"version":3,"sources":["Images/logo.png","Actions/ActionTypes.js","Reducers/VendorReducer.js","Reducers/AdminReducer.js","Store/Store.js","Components/HomeNavbar/HomeNavbar.js","Components/Footer/Footer.js","Components/FooterAndButtons/FooterAndButtons.js","Pages/Home/Home.js","Pages/TermsAndConditions/TermsAndConditions.js","Pages/PrivacyPolicy/PrivacyPolicy.js","Pages/Contact/Contact.js","Config/index.js","Firebase/Firebase.js","Config/localStorage.js","Config/AdminMapping.js","Pages/Admin/Login/Login.js","Components/Sidebar/Header.js","Pages/Admin/Dashboard/Dashboard.js","Components/AdminNavbar/AdminNavbar.js","Pages/Admin/Vendor/Vendor.js","Pages/Admin/Complaints/Complaints.js","Pages/Admin/Reservations/Reservations.js","Pages/Admin/Customer/Customer.js","Pages/Admin/DiscountVouchers/DiscountVouchers.js","Pages/Admin/Slideshow/Slideshow.js","Config/VendorMapping.js","Pages/Vendor/Login/Login.js","Components/VendorSidebar/VendorSidebar.js","Config/Date.js","Pages/Vendor/Home/Home.js","Pages/Vendor/UpcomingReservations/UpcomingReservations.js","Pages/Vendor/PreviousReservations/PreviousReservations.js","Pages/Admin/VendorVerifications/VendorVerifications.js","Pages/Vendor/Reviews/Reviews.js","Pages/Vendor/Menu/Menu.js","Pages/Vendor/EditProfile/EditProfile.js","Pages/Vendor/Registration/Registration.js","Pages/Vendor/AccountUnverified/AccountUnverified.js","Pages/Vendor/RegistrationSocial/RegistrationSocial.js","Navigation/VendorRouter.js","Navigation/Router.js","App.js","serviceWorker.js","index.js","Images/logo.mp4"],"names":["module","exports","AdminActionTypes","VendorActionTypes","initialState","vendor","reservations","reviews","customers","categories","dishes","notifications","registrationInfo","name","email","uid","photoUrl","VendorReducer","state","type","payload","loggedInAdmin","vendors","complaints","vouchers","slideshows","AdminReducer","store","createStore","combineReducers","HomeNavbar","className","to","style","width","src","Logo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Footer","FooterAndButtons","href","Home","autoPlay","controls","muted","TermsAndConditions","PrivacyPolicy","Contact","subject","message","changeState","value","setState","sendMail","a","async","trim","templateParams","from_name","to_name","reply_to","message_html","emailjs","templateParams2","alert","props","history","push","for","onChange","e","target","placeholder","aria-describedby","rows","onClick","this","withRouter","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firebase","registerVendorEmail","password","auth","createUserWithEmailAndPassword","user","uploadVendorImage","image","extension","storageRef","storage","ref","child","put","uploadedFile","getDownloadURL","uploadDishImage","uploadRoomImage","getAdmin","database","once","response","val","getVendor","uploadSlideShowImage","file","imageRef","logout","currentUser","signOut","Firebase","login","signInWithEmailAndPassword","admin","getReservations","Object","keys","map","key","getRestaurants","restaurants","getDishes","getReviews","ratings","getAllReviews","forEach","data","k","getComplaints","getCustomers","getNotifications","addDiscountVoucher","code","expDate","maxUses","vendor_type","percentage","set","numberOfUses","isBlocked","getDiscountVouchers","discounts","listenToNotifications","callBack","on","listenToVendors","listenToReviews","listenToComplaints","listenToDiscountVouchers","listenToReservations","listenToDishes","listenToCustomers","deleteVendor","remove","restrictOrder","update","is_restrict_order","updateProcessingFee","processing_fee","updateProcessingFeeAndVerify","is_number_verified","is_verified","updateDiscountVoucher","addSlideShow","vendor_uid","image_url","listenToSlideShows","getSlideShows","deleteSlideshow","deleteDiscount","loginVendor","createVendor","address","accountNumber","account_name","bank_name","branch","category","lat","llong","number","photo","photo_extension","reservation_fee","photo_url","bank_details","llocation","is_email_verified","close","getCategories","responseValue","getReservationsVendor","filteredReservations","filter","restaurant_uid","getNotificationsVendor","getDishesVendor","filteredDishes","vendorListenToCategories","cb","vendorListenToDishes","vendorListenToNotifications","vendorListenToReservations","updateNotificationSeen","notification_key","isSeen","updateReservationClose","updateAvailable","instant_data","available","Number","updateVendor","updateVendorImage","imageNameSplit","split","length","loginVendorFacebook","provider","FacebookAuthProvider","signInWithPopup","result","loginVendorGoogle","GoogleAuthProvider","createVendorSocial","addCategory","category_key","deleteCategory","updateCategory","addDish","ingredients","price","dish_key","imageSplit","deleteDish","updateDishImage","updateDish","updateEventsInstant","number_of_tables","table_fee","addRoom","room_description","total_participants","room_key","room_image_url","time_slots","addRoomTimeSlot","time_slot","time_slot_key","hide","updateEventsReservationFee","hideUnhideRoomTimeSlot","deleteRoomTimeSlot","deleteRoom","editRoomDescription","forgotPassword","sendPasswordResetEmail","then","console","log","catch","err","checkIfVendorExists","vendorFound","find","sendEmailVerficationLink","sendEmailVerification","emailVerified","updateEmailVerification","setAdmin","localStorage","setItem","JSON","stringify","parse","getItem","removeAdmin","removeItem","setVendor","removeVendor","mapStateToProps","mapDispatchToProps","dispatch","updateLogin","updateComplaints","updateDiscountVouchers","updateNotifications","updateReservations","updateReviews","updateCustomers","updateVendors","updateSlideshows","Login","isLoggingIn","inValidLogin","window","location","reload","objectFit","height","htmlFor","Spinner","animation","variant","connect","Header","Dropdown","Item","class","margin","Toggle","Badge","pill","Menu","children","Dashboard","modalShow","selectedVendor","procFee","date","Date","clickHandler","element","toLowerCase","includes","escapeRooms","cafes","events","Container","Row","Col","xs","Card","Body","Form","paddingTop","paddingBottom","Group","as","controlId","Control","Tabs","defaultActiveKey","Tab","eventKey","title","Table","striped","hover","responsive","borderRadius","AdminNavbar","Navbar","bg","expand","Brand","Collapse","Nav","Link","Button","Vendor","is_email_verfied","newProFee","checkDate","weekStart","setDate","getDate","weekEnd","componentDidMount","match","params","reviewsCustomerAndVendorJoin","customer","c","customer_uid","restaurant","array","fill","rating","deleteHandler","reservationsToRender","badgeVariant","status","time","attandee","Math","floor","complaintsToRender","Media","alt","redirectToVendor","description","currentReservations","totalTables","r","md","Check","checked","label","star","comment","Modal","size","aria-labelledby","centered","show","onHide","closeButton","Title","InputGroup","Prepend","Text","FormControl","Complaints","Reservations","minDate","maxDate","vendorType","redirectToCustomer","condition","Label","Customer","reservation","reviewsToRender","review","complaint","DiscountVouchers","selected_uid","isAdding","showModal","add","handler","dateHandler","splitDate","block","splitExpDate","Slideshow","fileNameSplit","fileHandler","files","delete","v","Carousel","Caption","background","padding","accept","vendorMapStateToProps","vendorMapDispatchToProps","updateCategories","updateDishes","updateRegistrationSocial","socialInfo","forgotMail","forgotModal","phoneModal","phone","setForgotModal","inputHandler","sendResetPasswordLink","facebookLogin","displayName","photoURL","googleLogin","fluid","minHeight","display","alignItems","justifyContent","marginBottom","textAlign","marginTop","VendorSidebar","link","border","position","top","left","color","fontWeight","getMonth","month","numberOfTables","tableFee","reservationFee","addRoomModalVisible","addRoomName","addRoomDescription","addRoomTotalParticipants","addRoomImage","addTimeSlotSlot","addTimeSlotRoom","addTimeSlotModal","editRoomKey","editRoomModal","setAddRoomModelVisible","setEditRoomModalVisible","setAddTimeSlotModelVisible","updateRestrictOrder","updateClose","availableChangeHandler","reservationsForToday","getFullYear","submitAvailableChanges","updateEvents","filehandler","todayReservations","tommorrowReservations","tommorrow2Reservations","tommorrow3Reservations","tommorrow4Reservations","tommorrow5Reservations","ajKiDate","ajKiReservations","rooms","t","reservedBy","reserves","reservation_for","colSpan","Append","room","URL","createObjectURL","showSecond","format","use12Hours","inputReadOnly","strokeDasharray","dataKey","UpcomingReservations","yesterday","arr","Accordion","index","reserve","PreviousReservations","VendorVerifications","unverified","Reviews","addCategoryModalVisible","addDishesModalVisible","editCategoryModalVisible","editDishesModalVisible","addCategoryName","updateCategoryName","categoryToUpdate","addDishImage","addDishName","addDishCategory","addDishPrice","addDishIngredients","updateDishImageUrl","updateDishName","updateDishCategory","updateDishPrice","updateDishIngredients","updateDishKey","setAddCategoryVisible","setAddDishesVisible","setEditCategoryVisible","setEditDishesVisible","fileInputHandler","dishFileInputHandler","draggable","cat","selected","EditProfile","long","bankName","accountName","imageUploading","vendorUpdating","updateImage","submit","disabled","Registration","confirmPassword","register","backgroundColor","AccountUnverified","sendVerificationLink","RegistrationSocial","VendorRouter","loading","vendorInitial","snapshot","updatedValue","newDishes","foundIndex","findIndex","newCategories","newNotifications","newReservations","reservation_key","loop","exact","path","Router","newVendors","newComplaints","complaint_key","newCustomers","newVouchers","newReviews","newSlideshows","basename","App","Store","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4dAAAA,EAAOC,QAAU,IAA0B,kC,0NCArCC,EACuB,4BADvBA,EAEkB,uBAFlBA,EAGY,iBAHZA,EAIiB,sBAJjBA,EAKe,oBALfA,EAMsB,2BANtBA,EAOY,iBAPZA,EAQc,mBARdA,EASc,mBAEdC,EACwB,6BADxBA,EAEkB,uBAFlBA,EAGc,mBAHdA,EAIiB,sBAJjBA,EAKY,iBALZA,EAMW,gBANXA,EAOe,oBAPfA,EAQwB,6BCjBxBC,EAAe,CACnBC,OAAQ,KACRC,aAAc,GACdC,QAAS,GACTC,UAAW,GACXC,WAAY,GACZC,OAAQ,GACRC,cAAe,GACfC,iBAAkB,CAChBC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,SAAU,KAkCCC,EA9BO,WAA8C,IAA7CC,EAA4C,uDAApCd,EAAoC,yCAApBe,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACnD,OAAQD,GACN,KAAKhB,EACH,OAAO,eAAKe,EAAZ,CAAmBT,WAAYW,IAEjC,KAAKjB,EACH,OAAO,eAAKe,EAAZ,CAAmBV,UAAWY,IAEhC,KAAKjB,EACH,OAAO,eAAKe,EAAZ,CAAmBR,OAAQU,IAE7B,KAAKjB,EACH,OAAO,eAAKe,EAAZ,CAAmBP,cAAeS,IAEpC,KAAKjB,EACH,OAAO,eAAKe,EAAZ,CAAmBZ,aAAcc,IAEnC,KAAKjB,EACH,OAAO,eAAKe,EAAZ,CAAmBX,QAASa,IAE9B,KAAKjB,EACH,OAAO,eAAKe,EAAZ,CAAmBb,OAAQe,IAE7B,KAAKjB,EACH,OAAO,eAAKe,EAAZ,CAAmBN,iBAAkBQ,IAEvC,QACE,OAAOF,IC3CPd,EAAe,CACnBiB,cAAe,KACff,aAAc,GACdgB,QAAS,GACTX,cAAe,GACfY,WAAY,GACZC,SAAU,GACVjB,QAAS,GACTC,UAAW,GACXiB,WAAY,IAkCCC,EAhCM,WAA8C,IAA7CR,EAA4C,uDAApCd,EAAoC,yCAApBe,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClD,OAAQD,GACN,KAAKjB,EACH,OAAO,eAAKgB,EAAZ,CAAmBG,cAAeD,IAEpC,KAAKlB,EACH,OAAO,eAAKgB,EAAZ,CAAmBK,WAAYH,IAEjC,KAAKlB,EACH,OAAO,eAAKgB,EAAZ,CAAmBM,SAAUJ,IAE/B,KAAKlB,EACH,OAAO,eAAKgB,EAAZ,CAAmBP,cAAeS,IAEpC,KAAKlB,EACH,OAAO,eAAKgB,EAAZ,CAAmBZ,aAAcc,IAEnC,KAAKlB,EACH,OAAO,eAAKgB,EAAZ,CAAmBX,QAASa,IAE9B,KAAKlB,EACH,OAAO,eAAKgB,EAAZ,CAAmBI,QAASF,IAE9B,KAAKlB,EACH,OAAO,eAAKgB,EAAZ,CAAmBV,UAAWY,IAChC,KAAKlB,EACH,OAAO,eAAKgB,EAAZ,CAAmBO,WAAYL,IACjC,QACE,OAAOF,ICrCPS,EAAQC,YAAYC,YAAgB,CAAEZ,gBAAeS,kBAC5CC,I,yCCDMG,G,wLAEjB,OACE,yBAAKC,UAAU,6DACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAChC,yBACEC,MAAO,CACLC,MAAO,SAETC,IAAKC,OAGT,4BACEL,UAAU,iBACVZ,KAAK,SACLkB,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMV,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BW,GAAG,0BAC3C,wBAAIX,UAAU,uBACd,yBAAKA,UAAU,8BACb,kBAAC,IAAD,CACEC,GAAG,WACHD,UAAU,2CAFZ,gBAMA,kBAAC,IAAD,CACEC,GAAG,UACHD,UAAU,gDAFZ,sB,GAjC4BY,c,iBCDnBC,G,+LAEjB,OACE,4BAAQb,UAAU,cAChB,uBAAGA,UAAU,6CAAb,oBAGA,yBAAKA,UAAU,2CACb,kBAAC,IAAD,CAAMA,UAAU,iCAAiCC,GAAG,YAApD,WAGA,kBAAC,IAAD,CAAMD,UAAU,mBAAmBC,GAAG,UAAtC,sBAGA,kBAAC,IAAD,CAAMD,UAAU,mBAAmBC,GAAG,YAAtC,wB,GAd0BW,cCAfE,E,iLAEjB,OACE,oCACE,yBAAKd,UAAU,aACb,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,wBAAwBe,KAAK,yBACxC,uBAAGf,UAAU,iBACb,uBAAGA,UAAU,QAAb,oBACmB,6BAAO,IACxB,0BAAMA,UAAU,WAAhB,eAIJ,uBAAGA,UAAU,wBAAwBe,KAAK,0BACxC,uBAAGf,UAAU,uBACb,uBAAGA,UAAU,QAAb,aACY,6BADZ,IACmB,0BAAMA,UAAU,WAAhB,mBAKzB,yBAAKA,UAAU,mBACb,kBAAC,EAAD,Y,GAvBoCY,aCEzBI,E,iLAEjB,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKhB,UAAU,aACb,yBAAKA,UAAU,8BACb,2BACEiB,UAAU,EACVC,UAAU,EACVC,OAAK,EACLnB,UAAU,OACVI,IAAKC,QAIX,kBAAC,EAAD,W,GAhB0BO,aCDbQ,G,wLAEjB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALwCR,cCA3BS,G,wLAEjB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALmCT,c,kBCErCU,I,kNACJnC,MAAQ,CACNJ,MAAO,GACPwC,QAAS,YACTC,QAAS,I,EAEXC,YAAc,SAAC3C,EAAM4C,GACnB,EAAKC,SAAL,eACG7C,EAAO4C,K,EAGZE,SAAW,4BAAAC,EAAAC,OAAA,gDAEqB,KAA5B,EAAK3C,MAAMJ,MAAMgD,QACa,KAA9B,EAAK5C,MAAMoC,QAAQQ,QACW,KAA9B,EAAK5C,MAAMqC,QAAQO,QAEfC,EAAiB,CACnBC,UAAW,EAAK9C,MAAMJ,MAAMgD,OAC5BG,QAAS,0BACTC,SAAU,EAAKhD,MAAMJ,MAAMgD,OAC3BR,QAAS,EAAKpC,MAAMoC,QACpBa,aAAc,EAAKjD,MAAMqC,SAE3Ba,QACE,kBACA,oBACAL,EACA,8BAEEM,EAAkB,CACpBL,UAAW,0BACXC,QAAS,EAAK/C,MAAMJ,MAAMgD,OAC1BR,QAAS,WACTa,aACE,2EAEJC,QACE,kBACA,oBACAC,EACA,8BAEFC,MAAM,mDACN,EAAKC,MAAMC,QAAQC,KAAK,MAExBH,MAAM,4CAnCC,sC,wEAsCD,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKvC,UAAU,aACb,0BAAMA,UAAU,iBACd,gDACA,yBAAKA,UAAU,cACb,2BAAO2C,IAAI,6BAAX,kBACA,4BACEC,SAAU,SAAAC,GAAC,OAAI,EAAKpB,YAAY,UAAWoB,EAAEC,OAAOpB,QACpD1B,UAAU,eACVW,GAAG,6BAEH,4BAAQe,MAAM,aAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,cAGJ,yBAAK1B,UAAU,cACb,2BAAO2C,IAAI,sBAAX,4BACA,2BACEC,SAAU,SAAAC,GAAC,OAAI,EAAKpB,YAAY,QAASoB,EAAEC,OAAOpB,QAClDtC,KAAK,QACLY,UAAU,eACVW,GAAG,qBACHoC,YAAY,gBACZC,mBAAiB,eAGrB,yBAAKhD,UAAU,cACb,2BAAO2C,IAAI,+BAAX,sBAGA,8BACEC,SAAU,SAAAC,GAAC,OAAI,EAAKpB,YAAY,UAAWoB,EAAEC,OAAOpB,QACpD1B,UAAU,eACVW,GAAG,8BACHsC,KAAK,IACLF,YAAY,aAGhB,4BACEG,QAASC,KAAKvB,SACdxC,KAAK,SACLY,UAAU,6BAHZ,YASJ,kBAAC,EAAD,W,GApGcY,cAyGPwC,eAAW9B,I,mBC3FX+B,GApBQ,CACrBC,OAAQ,0CACRC,WAAY,2CACZC,YAAa,kDACbC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,gBCLXC,GAAMC,iBAAuBV,IAC7BW,GAAsB,SAAOjF,EAAOkF,GAAd,eAAApC,EAAAC,OAAA,kEAAAD,EAAA,MACPiC,GAAII,OAAOC,+BAA+BpF,EAAOkF,IAD1C,cACpBG,EADoB,yBAEnBA,GAFmB,sCAoGtBC,GAAoB,SAAOC,EAAOC,EAAWvF,GAAzB,iBAAA6C,EAAAC,OAAA,uDAClB0C,EAAaV,GAChBW,UACAC,IAAI,sBACJC,MAAM,IAAM3F,EAAM,IAAMuF,GAJH,WAAA1C,EAAA,MAKG2C,EAAWI,IAAIN,IALlB,cAKlBO,EALkB,yBAOjBA,EAAaH,IAAII,kBAPA,sCASpBC,GAAkB,SAAOT,EAAOC,EAAWvF,GAAzB,iBAAA6C,EAAAC,OAAA,uDAChB0C,EAAaV,GAChBW,UACAC,IAAI,gBACJC,MAAM,IAAM3F,EAAM,IAAMuF,GAJL,WAAA1C,EAAA,MAKK2C,EAAWI,IAAIN,IALpB,cAKhBO,EALgB,yBAMfA,EAAaH,IAAII,kBANF,sCA4SlBE,GAAkB,SAAOV,EAAOC,EAAWvF,GAAzB,iBAAA6C,EAAAC,OAAA,uDAChB0C,EAAaV,GAChBW,UACAC,IAAI,uBACJC,MAAM,IAAM3F,EAAM,IAAMuF,GAJL,WAAA1C,EAAA,MAKK2C,EAAWI,IAAIN,IALpB,cAKhBO,EALgB,yBAMfA,EAAaH,IAAII,kBANF,sCAuElBG,GAAW,SAAMjG,GAAN,eAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACQiC,GACpBoB,WACAR,IAAI,UAAY1F,GAChBmG,KAAK,UAJO,cACTC,EADS,yBAKRA,EAASC,OALD,sCAiBXC,GAAY,SAAMtG,GAAN,eAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACOiC,GACpBoB,WACAR,IAAI,gBAAkB1F,GACtBmG,KAAK,UAJQ,cACVC,EADU,yBAKTA,EAASC,OALA,sCAuUZE,GAAuB,SAAOC,EAAMxG,EAAKuF,GAAlB,mBAAA1C,EAAAC,OAAA,uDACrB4C,EAAMZ,GAAIW,UAAUC,IAAI,gBAC1Be,EAAWf,EAAIC,MAAM3F,EAAM,IAAMuF,GAFV,WAAA1C,EAAA,MAGJ4D,EAASb,IAAIY,IAHT,cAGrBJ,EAHqB,yBAIpBA,EAASV,IAAII,kBAJO,sCAMvBY,GAAS,oBAAA7D,EAAAC,OAAA,oDACTgC,GAAII,OAAOyB,YADF,kCAAA9D,EAAA,MAELiC,GAAII,OAAO0B,WAFN,sCA6EAC,GAxEE,CACfC,MA7VY,SAAO/G,EAAOkF,GAAd,iBAAApC,EAAAC,OAAA,kEAAAD,EAAA,MACN6D,MADM,yBAAA7D,EAAA,MAEWiC,GAAII,OAAO6B,2BAA2BhH,EAAOkF,IAFxD,YAENmB,EAFM,QAGChB,KAHD,mCAAAvC,EAAA,MAIUoD,GAASG,EAAShB,KAAKpF,MAJjC,cAIJgH,EAJI,yBAKHA,GALG,iCAOH,MAPG,uCA8VZf,YACAgB,gBA5RsB,8BAAApE,EAAAC,OAAA,kEAAAD,EAAA,MACCiC,GACpBoB,WACAR,IAAI,kBACJS,KAAK,UAJc,cAChBC,EADgB,OAKhB1D,EAAQ0D,EAASC,MACjB9G,EAAe2H,OAAOC,KAAKzE,GAAO0E,KAAI,SAAAC,GAC1C,OAAO3E,EAAM2E,MAPO,kBASf9H,GATe,sCA6RtB+H,eAlRqB,8BAAAzE,EAAAC,OAAA,kEAAAD,EAAA,MACEiC,GACpBoB,WACAR,IAAI,iBACJS,KAAK,UAJa,cACfC,EADe,OAKf1D,EAAQ0D,EAASC,MACjBkB,EAAcL,OAAOC,KAAKzE,GAAO0E,KAAI,SAAAC,GACzC,OAAO3E,EAAM2E,MAPM,kBASdE,GATc,sCAmRrBC,UAxQgB,8BAAA3E,EAAAC,OAAA,kEAAAD,EAAA,MACOiC,GACpBoB,WACAR,IAAI,YACJS,KAAK,UAJQ,cACVC,EADU,OAKV1D,EAAQ0D,EAASC,MACjB1G,EAASuH,OAAOC,KAAKzE,GAAO0E,KAAI,SAAAC,GACpC,OAAO3E,EAAM2E,MAPC,kBAST1H,GATS,sCAyQhB8H,WA9PiB,SAAMzH,GAAN,mBAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACMiC,GACpBoB,WACAR,IAAI,YAAc1F,GAClBmG,KAAK,UAJS,cACXC,EADW,OAKX1D,EAAQ0D,EAASC,MACjBqB,EAAUhF,EACZwE,OAAOC,KAAKzE,GAAO0E,KAAI,SAAAC,GACrB,OAAO3E,EAAM2E,MAEf,GAVa,kBAWVK,GAXU,sCA+PjBC,cApOoB,8BAAA9E,EAAAC,OAAA,kEAAAD,EAAA,MACGiC,GACpBoB,WACAR,IAAI,aACJS,KAAK,UAJY,cACdC,EADc,OAKd1D,EAAQ0D,EAASC,MACjBqB,EAAU,GAChBR,OAAOC,KAAKzE,GAAOkF,SAAQ,SAAAP,GACzB,IAAMQ,EAAOX,OAAOC,KAAKzE,EAAM2E,IAAMD,KAAI,SAAAU,GAAC,OAAIpF,EAAM2E,GAAKS,MACzDJ,EAAQhE,KAAR,MAAAgE,EAAO,YAASG,OATE,kBAWbH,GAXa,sCAqOpBK,cAxNoB,8BAAAlF,EAAAC,OAAA,kEAAAD,EAAA,MACGiC,GACpBoB,WACAR,IAAI,gBACJS,KAAK,UAJY,cACdC,EADc,OAKd1D,EAAQ0D,EAASC,MACjB7F,EAAa0G,OAAOC,KAAKzE,GAAO0E,KAAI,SAAAC,GACxC,OAAO3E,EAAM2E,MAPK,kBASb7G,GATa,sCAyNpBwH,aAhMmB,8BAAAnF,EAAAC,OAAA,kEAAAD,EAAA,MACIiC,GACpBoB,WACAR,IAAI,eACJS,KAAK,UAJW,cACbC,EADa,OAKb1D,EAAQ0D,EAASC,MACjB5G,EAAYyH,OAAOC,KAAKzE,GAAO0E,KAAI,SAAAC,GACvC,OAAO3E,EAAM2E,MAPI,kBASZ5H,GATY,sCAiMnBwI,iBArPuB,SAAMjI,GAAN,mBAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACAiC,GACpBoB,WACAR,IAAI,kBAAoB1F,GACxBmG,KAAK,UAJe,UACjBC,EADiB,SAKjB1D,EAAQ0D,EAASC,OALA,uBAOfzG,EAAgBsH,OAAOC,KAAKzE,GAAO0E,KAAI,SAAAC,GAC3C,OAAO3E,EAAM2E,MARM,kBAUdzH,GAVc,gCAYhB,IAZgB,sCAsPvBsI,mBAvLyB,SACzBC,EACAC,EACAC,EACAC,EACAC,GALyB,eAAA1F,EAAAC,OAAA,kEAAAD,EAAA,MAOPiC,GACfoB,WACAR,IAAI,cACJhC,QAVsB,cAOnB2D,EAPmB,kBAAAxE,EAAA,MAWnBiC,GACHoB,WACAR,IAAI,cAAgB2B,EAAIA,KACxBmB,IAAI,CACHL,OACAC,UACAC,UACAI,aAAc,EACdC,WAAW,EACX1I,IAAKqH,EAAIA,IACTiB,cACAC,gBAtBqB,sCAwLzBI,oBAvJ0B,8BAAA9F,EAAAC,OAAA,kEAAAD,EAAA,MACHiC,GACpBoB,WACAR,IAAI,eACJS,KAAK,UAJkB,cACpBC,EADoB,OAKpB1D,EAAQ0D,EAASC,MACjBuC,EAAYlG,EACdwE,OAAOC,KAAKzE,GAAO0E,KAAI,SAAAC,GACrB,OAAO3E,EAAM2E,MAEf,GAVsB,kBAWnBuB,GAXmB,sCAwJ1BC,sBA3I4B,SAAOC,EAAU9I,GAAjB,SAAA6C,EAAAC,OAAA,gDAC5BgC,GACGoB,WACAR,IAAI,kBAAoB1F,GACxB+I,GAAG,gBAAiBD,GAJK,sCA4I5BE,gBAtIsB,SAAMF,GAAN,SAAAjG,EAAAC,OAAA,gDACtBgC,GACGoB,WACAR,IAAI,iBACJqD,GAAG,gBAAiBD,GAJD,sCAuItBG,gBAjIsB,SAAMH,GAAN,SAAAjG,EAAAC,OAAA,gDACtBgC,GACGoB,WACAR,IAAI,aACJqD,GAAG,gBAAiBD,GAJD,sCAkItBI,mBApGyB,SAAMJ,GAAN,SAAAjG,EAAAC,OAAA,gDACzBgC,GACGoB,WACAR,IAAI,gBACJqD,GAAG,gBAAiBD,GAJE,sCAqGzBK,yBA/F+B,SAAML,GAAN,SAAAjG,EAAAC,OAAA,gDAC/BgC,GACGoB,WACAR,IAAI,eACJqD,GAAG,gBAAiBD,GAJQ,sCAgG/BM,qBA1F2B,SAAMN,GAAN,SAAAjG,EAAAC,OAAA,gDAC3BgC,GACGoB,WACAR,IAAI,kBACJqD,GAAG,gBAAiBD,GAJI,sCA2F3BO,eArFqB,SAAMP,GAAN,SAAAjG,EAAAC,OAAA,gDACrBgC,GACGoB,WACAR,IAAI,YACJqD,GAAG,gBAAiBD,GAJF,sCAsFrBQ,kBAhFwB,SAAMR,GAAN,SAAAjG,EAAAC,OAAA,gDACxBgC,GACGoB,WACAR,IAAI,eACJqD,GAAG,gBAAiBD,GAJC,sCAiFxBS,aA3HmB,SAAMvJ,GAAN,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACbiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtBwJ,UAJgB,sCA4HnBC,cA5EoB,SAAO/G,EAAO1C,GAAd,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACdiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtB0J,OAAO,CACNC,kBAAmBjH,KALH,sCA6EpBkH,oBArE0B,SAAOlH,EAAO1C,GAAd,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACpBiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtB0J,OAAO,CACNG,eAAgBnH,EAAQ,MALF,sCAsE1BoH,6BA9DmC,SAAOpH,EAAO1C,GAAd,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MAC7BiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtB0J,OAAO,CACNG,eAAgBnH,EAAQ,GACxBqH,oBAAoB,EACpBC,aAAa,KAPkB,sCA+DnCC,sBA5K4B,SAAOjK,EAAK0I,GAAZ,SAAA7F,EAAAC,OAAA,kEAAAD,EAAA,MACtBiC,GACHoB,WACAR,IAAI,cAAgB1F,GACpB0J,OAAO,CACNhB,eALwB,sCA6K5BwB,aAtDmB,SAAO1D,EAAMjB,EAAW4E,GAAxB,iBAAAtH,EAAAC,OAAA,kEAAAD,EAAA,MAEXiC,GACHoB,WACAR,IAAI,gBACJhC,QALc,cACb2D,EADa,OAMjBA,IANiB,WAAAxE,EAAA,MAOK0D,GAAqBC,EAAMa,EAAK9B,IAPrC,cAOb6E,EAPa,kBAAAvH,EAAA,MAQbiC,GACHoB,WACAR,IAAI,eAAiB2B,GACrBmB,IAAI,CACHxI,IAAKqH,EACL8C,aACAC,eAde,sCAuDnBC,mBAvIyB,SAAMvB,GAAN,SAAAjG,EAAAC,OAAA,gDACzBgC,GACGoB,WACAR,IAAI,gBACJqD,GAAG,gBAAiBD,GAJE,sCAwIzBwB,cAjOoB,8BAAAzH,EAAAC,OAAA,kEAAAD,EAAA,MACGiC,GACpBoB,WACAR,IAAI,gBACJS,KAAK,UAJY,UACdC,EADc,SAKd1D,EAAQ0D,EAASC,OALH,uBAOZ3F,EAAawG,OAAOC,KAAKzE,GAAO0E,KAAI,SAAAC,GACxC,OAAO3E,EAAM2E,MARG,kBAUX3G,GAVW,gCAYb,IAZa,sCAkOpB6J,gBAvHsB,SAAMvK,GAAN,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MAChBiC,GACHoB,WACAR,IAAI,eAAiB1F,GACrBwJ,UAJmB,sCAwHtBgB,eA9HqB,SAAMxK,GAAN,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACfiC,GACHoB,WACAR,IAAI,cAAgB1F,GACpBwJ,UAJkB,sCA+HrBlD,aACAmE,YA3WkB,SAAO1K,EAAOkF,GAAd,iBAAApC,EAAAC,OAAA,kEAAAD,EAAA,MACZ6D,MADY,yBAAA7D,EAAA,MAEKiC,GAAII,OAAO6B,2BAA2BhH,EAAOkF,IAFlD,YAEZmB,EAFY,QAGLhB,KAHK,mCAAAvC,EAAA,MAIKyD,GAAUF,EAAShB,KAAKpF,MAJ7B,cAIVV,EAJU,yBAKTA,GALS,iCAOT,MAPS,uCA4WlBoL,aAh2BmB,SACnB3K,EACAkF,EACA0F,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACApL,EACAqL,EACAC,EACAC,EACAC,GAfmB,qBAAAzI,EAAAC,OAAA,kEAAAD,EAAA,MAiBAmC,GAAoBjF,EAAOkF,IAjB3B,cAiBbG,EAjBa,OAkBbpF,EAAMoF,EAAKA,KAAKpF,IAlBH,WAAA6C,EAAA,MAmBKwC,GAAkB+F,EAAOC,EAAiBrL,IAnB/C,cAmBbuL,EAnBa,kBAAA1I,EAAA,MAoBbiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtBwI,IAAI,CACHzI,QACA4K,UACAa,aAAc,CAAEX,eAAcD,gBAAeE,aAC7CC,SACAC,WACAM,kBACAC,YACAJ,SACAM,UAAW,CACTR,MACAC,SAEFpL,OACAE,MACAgK,aAAa,EACbL,mBAAmB,EACnBI,oBAAoB,EACpB2B,mBAAmB,EACnBC,OAAO,KA1CQ,0BAAA9I,EAAA,MA4CIiC,GACpBoB,WACAR,IAAI,gBAAkB1F,GACtBmG,KAAK,UA/CW,eA4CbC,EA5Ca,yBAgDZA,EAASC,OAhDG,uCAi2BnBuF,cAxqBoB,SAAM5L,GAAN,mBAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACGiC,GACpBoB,WACAR,IAAI,eAAiB1F,GACrBmG,KAAK,UAJY,cACdC,EADc,OAKdyF,EAAgBzF,EAASC,MACzB3G,EAAamM,EACf3E,OAAOC,KAAK0E,GAAezE,KAAI,SAAAC,GAC7B,OAAOwE,EAAcxE,MAEvB,GAVgB,kBAWb3H,GAXa,sCAyqBpBoM,sBArc4B,SAAM9L,GAAN,qBAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACLiC,GACpBoB,WACAR,IAAI,kBACJS,KAAK,UAJoB,cACtBC,EADsB,OAKtByF,EAAgBzF,EAASC,MACzB9G,EAAesM,EACjB3E,OAAOC,KAAK0E,GAAezE,KAAI,SAAAC,GAC7B,OAAOwE,EAAcxE,MAEvB,GAEE0E,EAAuBxM,EAAayM,QACxC,SAAAnI,GAAC,OAAIA,EAAEoI,iBAAmBjM,KAbA,kBAerB+L,GAfqB,sCAsc5BG,uBA/a6B,SAAMlM,GAAN,mBAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACNiC,GACpBoB,WACAR,IAAI,kBAAoB1F,GACxBmG,KAAK,UAJqB,cACvBC,EADuB,OAKvByF,EAAgBzF,EAASC,MAEzBzG,EAAgBiM,EAClB3E,OAAOC,KAAK0E,GAAezE,KAAI,SAAAC,GAC7B,OAAOwE,EAAcxE,MAEvB,GAXyB,kBAYtBzH,GAZsB,sCAgb7BuM,gBA5ZsB,SAAMnM,GAAN,qBAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACCiC,GACpBoB,WACAR,IAAI,YACJS,KAAK,UAJc,cAChBC,EADgB,OAKhByF,EAAgBzF,EAASC,MACzB1G,EAASkM,EACX3E,OAAOC,KAAK0E,GAAezE,KAAI,SAAAC,GAC7B,OAAOwE,EAAcxE,MAEvB,GACE+E,EAAiBzM,EAAOqM,QAAO,SAAAnI,GAAC,OAAIA,EAAE7D,MAAQA,KAX9B,kBAYfoM,GAZe,sCA6ZtBC,yBA/oB+B,SAAOC,EAAItM,GAAX,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACzBiC,GACHoB,WACAR,IAAI,eAAiB1F,GACrB+I,GAAG,gBAAiBuD,IAJQ,sCAgpB/BC,qBAhZ2B,SAAMD,GAAN,SAAAzJ,EAAAC,OAAA,gDAC3BgC,GACGoB,WACAR,IAAI,YACJqD,GAAG,gBAAiBuD,GAJI,sCAiZ3BE,4BArakC,SAAOF,EAAItM,GAAX,SAAA6C,EAAAC,OAAA,gDAClCgC,GACGoB,WACAR,IAAI,kBAAoB1F,GACxB+I,GAAG,gBAAiBuD,GAJW,sCAsalCG,2BA1biC,SAAMH,GAAN,SAAAzJ,EAAAC,OAAA,gDACjCgC,GACGoB,WACAR,IAAI,kBACJqD,GAAG,gBAAiBuD,GAJU,sCA2bjCI,uBA7oB6B,SAAO1M,EAAK2M,GAAZ,SAAA9J,EAAAC,OAAA,kEAAAD,EAAA,MACvBiC,GACHoB,WACAR,IAAI,kBAAoB1F,EAAM,IAAM2M,GACpCjD,OAAO,CAAEkD,QAAQ,KAJS,sCA8oB7BC,uBAxoB6B,SAAO7M,EAAK0C,GAAZ,SAAAG,EAAAC,OAAA,kEAAAD,EAAA,MACvBiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtB0J,OAAO,CAAEiC,MAAOjJ,KAJU,sCAyoB7BoK,gBAhlBsB,SAAO9M,EAAK0C,GAAZ,SAAAG,EAAAC,OAAA,kEAAAD,EAAA,MAChBiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtB0J,OAAO,CAAEqD,aAAc,CAAEC,UAAWC,OAAOvK,OAJxB,sCAilBtBwK,aApoBmB,SACnBpN,EACAqL,EACAG,EACAL,EACAC,EACAN,EACAC,EACAC,EACA9K,GATmB,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MAWbiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtB0J,OAAO,CACN5J,OACAqL,SACAG,kBACAG,UAAW,CACTR,MACAC,SAEFM,aAAc,CACZZ,gBACAC,eACAC,gBAzBa,sCAqoBnBqC,kBAxmBwB,SAAO7H,EAAOtF,GAAd,mBAAA6C,EAAAC,OAAA,uDAClBsK,EAAiB9H,EAAMxF,KAAKuN,MAAM,KAClC9H,EAAY6H,EAAeA,EAAeE,OAAS,GAFjC,WAAAzK,EAAA,MAGAwC,GAAkBC,EAAOC,EAAWvF,IAHpC,cAGlBuL,EAHkB,kBAAA1I,EAAA,MAIlBiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtB0J,OAAO,CACN6B,eARoB,sCAymBxBgC,oBAxqB0B,gCAAA1K,EAAAC,OAAA,kEAAAD,EAAA,MACpB6D,MADoB,cAEpB8G,EAAW,IAAIzI,QAAc0I,qBAFT,WAAA5K,EAAA,MAGHiC,GAAII,OAAOwI,gBAAgBF,IAHxB,cAGpBpH,EAHoB,kBAAAvD,EAAA,MAILyD,GAAUF,EAAShB,KAAKpF,MAJnB,cAIpBV,EAJoB,OAKpBqO,EAASrO,GAAkB8G,EAAShB,KALhB,kBAMnB,CAAEuI,SAAQnL,QAASlD,EAAS,aAAe,mBANxB,uCAyqB1BsO,kBAjqBwB,gCAAA/K,EAAAC,OAAA,kEAAAD,EAAA,MAClB6D,MADkB,cAElB8G,EAAW,IAAIzI,QAAc8I,mBAFX,WAAAhL,EAAA,MAGDiC,GAAII,OAAOwI,gBAAgBF,IAH1B,cAGlBpH,EAHkB,kBAAAvD,EAAA,MAIHyD,GAAUF,EAAShB,KAAKpF,MAJrB,cAIlBV,EAJkB,OAKlBqO,EAASrO,GAAkB8G,EAAShB,KALlB,kBAMjB,CAAEuI,SAAQnL,QAASlD,EAAS,aAAe,mBAN1B,uCAkqBxBwO,mBA9zByB,SACzB/N,EACA4K,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACApL,EACAqL,EACAI,EACAD,EACAtL,GAdyB,eAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MAgBnBiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtBwI,IAAI,CACHzI,QACA4K,UACAa,aAAc,CAAEX,eAAcD,gBAAeE,aAC7CC,SACAC,WACAM,kBACAC,YACAJ,SACAM,UAAW,CACTR,MACAC,SAEFpL,OACAE,MACAgK,aAAa,EACbL,mBAAmB,EACnBI,oBAAoB,EACpB2B,mBAAmB,EACnBC,OAAO,KAtCc,yBAAA9I,EAAA,MAwCFiC,GACpBoB,WACAR,IAAI,gBAAkB1F,GACtBmG,KAAK,UA3CiB,cAwCnBC,EAxCmB,yBA4ClBA,EAASC,OA5CS,sCA+zBzB0H,YAhwBkB,SAAO/C,EAAUhL,GAAjB,eAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MAEViC,GACHoB,WACAR,IAAI,eAAiB1F,GACrB0D,QALa,cACZsK,EADY,OAMhB3G,IANgB,WAAAxE,EAAA,MAOZiC,GACHoB,WACAR,IAAI,eAAiB1F,EAAM,IAAMgO,GACjCxF,IAAI,CACHwC,WACAgD,kBAZc,sCAiwBlBC,eA/rBqB,SAAOD,EAAchO,GAArB,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACfiC,GACHoB,WACAR,IAAI,eAAiB1F,EAAM,IAAMgO,GACjCxE,UAJkB,sCAgsBrB0E,eAxsBqB,SAAOF,EAAchD,EAAUhL,GAA/B,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACfiC,GACHoB,WACAR,IAAI,eAAiB1F,EAAM,IAAMgO,GACjCtE,OAAO,CACNsB,cALiB,sCAysBrBmD,QApvBc,SAAOrO,EAAMkL,EAAUoD,EAAa9I,EAAO+I,EAAOrO,GAAlD,mBAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MAENiC,GACHoB,WACAR,IAAI,YACJhC,QALS,cACR4K,EADQ,OAMZjH,IACIkH,EAAajJ,EAAMxF,KAAKuN,MAAM,KAPtB,WAAAxK,EAAA,MAQUkD,GACtBT,EACAiJ,EAAWA,EAAWjB,OAAS,GAC/BgB,IAXY,cAQR/C,EARQ,kBAAA1I,EAAA,MAaRiC,GACHoB,WACAR,IAAI,WAAa4I,GACjB9F,IAAI,CACHwC,WACAsD,WACAtO,MACAoO,cACAtO,OACAuO,QACA9C,eAvBU,sCAqvBdiD,WAhtBiB,SAAMF,GAAN,SAAAzL,EAAAC,OAAA,kEAAAD,EAAA,MACXiC,GACHoB,WACAR,IAAI,WAAa4I,GACjB9E,UAJc,sCAitBjBiF,gBAtmBsB,SAAOnJ,EAAOtF,GAAd,mBAAA6C,EAAAC,OAAA,uDAChBsK,EAAiB9H,EAAMxF,KAAKuN,MAAM,KAClC9H,EAAY6H,EAAeA,EAAeE,OAAS,GAFnC,WAAAzK,EAAA,MAGEkD,GAAgBT,EAAOC,EAAWvF,IAHpC,cAGhBuL,EAHgB,kBAAA1I,EAAA,MAIhBiC,GACHoB,WACAR,IAAI,WAAa1F,GACjB0J,OAAO,CACN6B,eARkB,sCAumBtBmD,WA7tBiB,SAAO5O,EAAMkL,EAAUoD,EAAaC,EAAOC,GAA3C,SAAAzL,EAAAC,OAAA,kEAAAD,EAAA,MACXiC,GACHoB,WACAR,IAAI,WAAa4I,GACjB5E,OAAO,CACNsB,WACAoD,cACAtO,OACAuO,WARa,sCA8tBjBM,oBAvlB0B,SAC1B3O,EACAgN,EACA4B,EACAC,GAJ0B,SAAAhM,EAAAC,OAAA,kEAAAD,EAAA,MAMpBiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtB0J,OAAO,CACNqD,aAAc,CACZC,UAAWC,OAAOD,GAClB4B,iBAAkB3B,OAAO2B,GACzBC,UAAW5B,OAAO4B,OAbE,sCAwlB1BC,QAjkBc,SACd9O,EACAF,EACAiP,EACAzJ,EACA0J,GALc,mBAAAnM,EAAAC,OAAA,kEAAAD,EAAA,MAQNiC,GACHoB,WACAR,IAAI,gBAAkB1F,EAAM,kBAC5B0D,QAXS,cAORuL,EAPQ,OAYZ5H,IACI9B,EAAYD,EAAMxF,KAAKuN,MAAM,KAAK/H,EAAMxF,KAAKuN,MAAM,KAAKC,OAAS,GAbzD,WAAAzK,EAAA,MAcemD,GAAgBV,EAAOC,EAAW0J,IAdjD,cAcRC,EAdQ,kBAAArM,EAAA,MAeRiC,GACHoB,WACAR,IAAI,gBAAkB1F,EAAM,iBAAmBiP,GAC/CzG,IAAI,CACH1I,OACAiP,mBACAG,iBACAD,WACAD,qBACAG,WAAY,MAxBF,sCAkkBdC,gBA9hBsB,SAAOpP,EAAKiP,EAAUI,GAAtB,eAAAxM,EAAAC,OAAA,kEAAAD,EAAA,MAEdiC,GACHoB,WACAR,IAAI,gBAAkB1F,EAAM,iBAAmBiP,EAAW,gBAC1DvL,QALiB,cAChB4L,EADgB,OAMpBjI,IANoB,WAAAxE,EAAA,MAOhBiC,GACHoB,WACAR,IACC,gBACE1F,EACA,iBACAiP,EACA,eACAK,GAEH9G,IAAI,CACH6G,YACAC,gBACAC,MAAM,KApBY,sCA+hBtBC,2BAzkBiC,SAAOxP,EAAK0C,GAAZ,SAAAG,EAAAC,OAAA,kEAAAD,EAAA,MAC3BiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtB0J,OAAO,CAAE4B,gBAAiB,GAAK5I,KAJD,sCA0kBjC+M,uBAzgB6B,SAAOzP,EAAKiP,EAAUK,EAAe5M,GAArC,SAAAG,EAAAC,OAAA,kEAAAD,EAAA,MACvBiC,GACHoB,WACAR,IACC,gBACE1F,EACA,iBACAiP,EACA,eACAK,GAEH5F,OAAO,CACN6F,KAAM7M,KAZmB,sCA0gB7BgN,mBA3fyB,SAAO1P,EAAKiP,EAAUK,GAAtB,SAAAzM,EAAAC,OAAA,kEAAAD,EAAA,MACnBiC,GACHoB,WACAR,IACC,gBACE1F,EACA,iBACAiP,EACA,eACAK,GAEH9F,UAXsB,sCA4fzBmG,WA/eiB,SAAO3P,EAAKiP,GAAZ,SAAApM,EAAAC,OAAA,kEAAAD,EAAA,MACXiC,GACHoB,WACAR,IAAI,gBAAkB1F,EAAM,iBAAmBiP,GAC/CzF,UAJc,sCAgfjBoG,oBA3iB0B,SAAO5P,EAAKiP,EAAUF,GAAtB,SAAAlM,EAAAC,OAAA,kEAAAD,EAAA,MACpBiC,GACHoB,WACAR,IAAI,gBAAkB1F,EAAM,iBAAmBiP,GAC/CvF,OAAO,CACNqF,sBALsB,sCA4iB1Bc,eAlYqB,SAAM9P,GAAN,SAAA8C,EAAAC,OAAA,kEAAAD,EAAA,MACfiC,GACHI,OACA4K,uBAAuB/P,GACvBgQ,MAAK,WACJC,QAAQC,IACN,0EAGHC,OAAM,SAAAC,GACLH,QAAQC,IAAIE,OAVK,sCAmYrBC,oBAvW0B,SAAMrQ,GAAN,qBAAA8C,EAAAC,OAAA,kEAAAD,EAAA,MACHiC,GACpBoB,WACAR,IAAI,iBACJS,KAAK,UAJkB,cACpBC,EADoB,OAKpB1D,EAAQ0D,EAASC,MACjB9F,EAAU2G,OAAOC,KAAKzE,GAAO0E,KAAI,SAAAC,GACrC,OAAO3E,EAAM2E,MAETgJ,EAAc9P,EAAQ+P,MAAK,SAAAzM,GAAC,OAAIA,EAAE9D,QAAUA,KATxB,kBAUnBsQ,GAVmB,sCAwW1B3J,UACA6J,yBAxX+B,0BAAA1N,EAAAC,OAAA,uDACzBsC,EAAON,GAAII,OAAOyB,YADO,WAAA9D,EAAA,MAEzBuC,EAAKoL,yBAFoB,sCAyX/BC,cA7WoB,WACpB,OAAO3L,GAAII,OAAOyB,YAAY8J,eA6W9BC,wBAtX8B,SAAM1Q,GAAN,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACxBiC,GACHoB,WACAR,IAAI,gBAAkB1F,GACtB0J,OAAO,CACNgC,mBAAmB,KALO,uCCvhB1BiF,GAAW,SAAAvL,GACfwL,aAAaC,QAAQ,QAASC,KAAKC,UAAU3L,KAEzCa,GAAW,WAEf,OADa6K,KAAKE,MAAMJ,aAAaK,QAAQ,WAGzCC,GAAc,WAClBN,aAAaO,WAAW,UAEpBC,GAAY,SAAAhM,GAChBwL,aAAaC,QAAQ,SAAUC,KAAKC,UAAU3L,KAE1CkB,GAAY,WAEhB,OADawK,KAAKE,MAAMJ,aAAaK,QAAQ,YAGzCI,GAAe,WACnBT,aAAaO,WAAW,WChBpBG,GAAkB,SAAAnR,GACtB,OAAOA,EAAMQ,cAET4Q,GAAqB,SAAAC,GACzB,MAAO,CACLC,YAAa,SAAArM,GAAI,OACfoM,EAAS,CACPpR,KAAMjB,EACNkB,QAAS+E,KAEbsM,iBAAkB,SAAAlR,GAAU,OAC1BgR,EAAS,CACPpR,KAAMjB,EACNkB,QAASG,KAEbmR,uBAAwB,SAAAlR,GAAQ,OAC9B+Q,EAAS,CACPpR,KAAMjB,EACNkB,QAASI,KAEbmR,oBAAqB,SAAAhS,GAAa,OAChC4R,EAAS,CACPpR,KAAMjB,EACNkB,QAAST,KAEbiS,mBAAoB,SAAAtS,GAAY,OAC9BiS,EAAS,CACPpR,KAAMjB,EACNkB,QAASd,KAEbuS,cAAe,SAAAtS,GAAO,OACpBgS,EAAS,CAAEpR,KAAMjB,EAAiCkB,QAASb,KAC7DuS,gBAAiB,SAAAtS,GAAS,OACxB+R,EAAS,CAAEpR,KAAMjB,EAAmCkB,QAASZ,KAC/DuS,cAAe,SAAAzR,GAAO,OACpBiR,EAAS,CAAEpR,KAAMjB,EAAiCkB,QAASE,KAC7D0R,iBAAkB,SAAAvR,GAAU,OAC1B8Q,EAAS,CAAEpR,KAAMjB,EAAmCkB,QAASK,O,UCzB7DwR,G,2MACJ/R,MAAQ,CACNJ,MAAO,GACPkF,SAAU,GACVkN,aAAa,EACbC,cAAc,G,EAEhB3P,YAAc,SAAC3C,EAAM4C,GACnB,EAAKC,SAAL,eACG7C,EAAO4C,K,EAGZoE,MAAQ,0BAAAjE,EAAAC,OAAA,mDACN,EAAKH,SAAS,CAAEwP,aAAa,IADvB,SAG4B,KAA5B,EAAKhS,MAAMJ,MAAMgD,QAAgD,KAA/B,EAAK5C,MAAM8E,SAASlC,OAHtD,mCAAAF,EAAA,MAIiBgE,GAASC,MAC1B,EAAK3G,MAAMJ,MACX,EAAKI,MAAM8E,WANX,OAIIG,EAJJ,OAQFuL,GAASvL,GACT,EAAK5B,MAAMiO,YAAYrM,GACvBiN,OAAOC,SAASC,SAVd,wBAYFhP,MAAM,kDAZJ,0DAeJ,EAAKZ,SAAS,CAAEwP,aAAa,EAAOC,cAAc,IAf9C,0D,wEAmBE,IAAD,OACP,OACE,6BAEE,yBAAKpR,UAAU,cACb,yBAAKA,UAAU,8BACb,yBACEE,MAAO,CACLC,MAAO,MACPqR,UAAW,UACXC,OAAQ,QAEVrR,IAAKC,OAGT,yBAAKL,UAAU,8BACb,0BAAMA,UAAU,8BACd,+CACA,yBAAKA,UAAU,cACb,2BAAO0R,QAAQ,sBAAf,4BAGA,2BACE9O,SAAU,SAAAC,GAAC,OAAI,EAAKpB,YAAY,QAASoB,EAAEC,OAAOpB,QAClDtC,KAAK,QACLY,UAAU,eACVW,GAAG,qBACHoC,YAAY,gBACZC,mBAAiB,eAGrB,yBAAKhD,UAAU,cACb,2BAAO0R,QAAQ,YAAf,uBACA,2BACE9O,SAAU,SAAAC,GAAC,OAAI,EAAKpB,YAAY,WAAYoB,EAAEC,OAAOpB,QACrDtC,KAAK,WACLY,UAAU,eACVW,GAAG,WACHoC,YAAY,cAGfI,KAAKhE,MAAMiS,aACV,uBAAGpR,UAAU,eAAb,8BACE,KACJ,4BACEkD,QAASC,KAAK2C,MACd1G,KAAK,SACLY,UAAU,6BAETmD,KAAKhE,MAAMgS,YACV,kBAACQ,GAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YAEpC,YAOV,kBAAC,EAAD,W,GA1FYjR,aA+FLkR,eAAQxB,GAAiBC,GAAzBuB,CAA6C1O,YAAW8N,K,oHCrGjEa,G,2MACJrM,OAAS,oBAAA7D,EAAAC,OAAA,gDACPoO,KACA,EAAK1N,MAAMiO,YAAY,MACvB,EAAKjO,MAAMC,QAAQC,KAAK,WAHjB,sC,wEAMP,IAAMnD,EAAU4D,KAAKX,MAAMjD,QAAQyL,QAAO,SAAAnI,GAAC,OAAKA,EAAEmG,eAC5CpK,EAAgBW,EAAQ6G,KAAI,SAAAvD,GAChC,OACE,kBAACmP,GAAA,EAASC,KAAV,KACE,kBAAC,IAAD,CAAMhS,GAAI,iBAAmB4C,EAAE7D,KAA/B,qBAAuD6D,EAAE/D,UAI/D,OACE,6BACE,yBAAKoT,MAAM,gEACT,kBAAC,IAAD,CAAMA,MAAM,eAAejS,GAAG,WAC5B,yBAAKC,MAAO,CAAEC,MAAO,IAAMC,IAAKC,OAElC,4BACE6R,MAAM,iBACN9S,KAAK,SACLkB,cAAY,WACZC,cAAY,kBACZC,gBAAc,iBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMwR,MAAM,0BAGd,yBAAKA,MAAM,2BAA2BvR,GAAG,kBACvC,wBACEuR,MAAM,6CACNvR,GAAG,gBAEH,wBAAIuR,MAAM,mBACR,kBAAC,IAAD,CAAMjS,GAAG,WACP,yBACED,UAAU,WACVE,MAAO,CAAEC,MAAO,IAAKgS,OAAQ,cAC7B/R,IAAKC,OAGT,yBAAK6R,MAAM,QACT,wBAAIA,MAAM,YACR,kBAAC,IAAD,CAAMjS,GAAG,UAAUiS,MAAM,eACvB,0BAAMlS,UAAU,QAAhB,aAGJ,wBAAIkS,MAAM,YACR,kBAAC,IAAD,CAAMjS,GAAG,sBAAsBiS,MAAM,eACnC,0BAAMlS,UAAU,QAAhB,kBAGJ,wBAAIkS,MAAM,YACR,kBAAC,IAAD,CAAMjS,GAAG,sBAAsBiS,MAAM,eACnC,0BAAMlS,UAAU,QAAhB,0BAGJ,wBAAIkS,MAAM,YACR,kBAAC,IAAD,CAAMjS,GAAG,oBAAoBiS,MAAM,eACjC,0BAAMlS,UAAU,QAAhB,gBAGJ,wBAAIkS,MAAM,YACR,kBAAC,IAAD,CAAMjS,GAAG,kBAAkBiS,MAAM,eAC/B,0BAAMlS,UAAU,QAAhB,sBAGJ,wBAAIkS,MAAM,YACR,kBAAC,IAAD,CAAMjS,GAAG,mBAAmBiS,MAAM,eAChC,0BAAMlS,UAAU,QAAhB,uBAIJ,wBAAIkS,MAAM,YACR,kBAAC,IAAD,CAAMhP,QAASC,KAAKuC,OAAQwM,MAAM,gBAChC,0BAAMlS,UAAU,QAAhB,eAMV,0BAAMkS,MAAM,qCACZ,yBAAKA,MAAM,kCACT,kBAACF,GAAA,EAAD,KACE,kBAACA,GAAA,EAASI,OAAV,CAAiBP,QAAQ,OAAOlR,GAAG,kBACjC,8BAAU7B,KAAK,0BACf,kBAACuT,GAAA,EAAD,CAAOC,MAAI,EAACtS,UAAU,gBAAgB6R,QAAQ,WAC3CtS,EAAQ+M,SAIb,kBAAC0F,GAAA,EAASO,KAAV,KACG3T,EAAc0N,OACb1N,EAEA,kBAACoT,GAAA,EAASC,KAAV,8BAOZ,0BAAMC,MAAM,mBAAmB/O,KAAKX,MAAMgQ,e,GA3G7B5R,aAgHNwC,eAAW0O,YAAQxB,GAAiBC,GAAzBuB,CAA6CC,KC7FjEU,G,2MACJtT,MAAQ,CACNuT,WAAW,EACXC,eAAgB,GAChBC,QAAS,EACTC,KAAM,IAAIC,KACVhU,KAAM,I,EAERiU,aAAe,SAAM/T,GAAN,SAAA6C,EAAAC,OAAA,gDACb,EAAKU,MAAMC,QAAQC,KAAK,iBAAmB1D,GAD9B,sC,wEAGL,IAAD,OACDO,EAAU4D,KAAKX,MAAMjD,QAAQyL,QAAO,SAAAgI,GAIxC,OAHkBA,EAAQlU,KACvBmU,cACAC,SAAS,EAAK/T,MAAML,KAAKmU,cAAe,MAGvC1M,EAAchH,EAAQyL,QAC1B,SAAAgI,GAAO,MAAyB,gBAArBA,EAAQhJ,UAA8BgJ,EAAQhK,eAErDmK,EAAc5T,EAAQyL,QAC1B,SAAAgI,GAAO,MAAyB,iBAArBA,EAAQhJ,UAA+BgJ,EAAQhK,eAEtDoK,EAAQ7T,EAAQyL,QACpB,SAAAgI,GAAO,MAAyB,UAArBA,EAAQhJ,UAAwBgJ,EAAQhK,eAE/CqK,EAAS9T,EAAQyL,QACrB,SAAAgI,GAAO,MAAyB,WAArBA,EAAQhJ,UAAyBgJ,EAAQhK,eAEnCzJ,EAAQyL,QAAO,SAAAgI,GAAO,OAAKA,EAAQhK,eAEtD,OACE,6BAEE,kBAAC,GAAD,KACE,kBAACsK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKvT,UAAU,0BACb,kBAACwT,GAAA,EAAD,CAAKC,GAAI,IACP,kBAACC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,wCAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,kBAACC,GAAA,EAAKL,IAAN,CAAUrT,MAAO,CAAE2T,WAAY,GAAIC,cAAe,KAChD,kBAACF,GAAA,EAAKG,MAAN,CAAYC,GAAIR,KAAKS,UAAU,gBAC7B,kBAACL,GAAA,EAAKM,QAAN,CACEtR,SAAU,SAAAC,GAAC,OACT,EAAKlB,SAAS,CAAE7C,KAAM+D,EAAEC,OAAOpB,SAEjCqB,YAAY,aAIlB,kBAACoR,GAAA,EAAD,CACEtC,QAAQ,QACRuC,iBAAiB,cACjBzT,GAAG,sBAEH,kBAAC0T,GAAA,EAAD,CAAKC,SAAS,cAAcC,MAAM,eAChC,kBAACC,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,GAC7B,+BACE,4BACE,qCACA,oCACA,qCACA,wCAGJ,+BACGpO,EAAYH,KAAI,SAAA4M,GACf,OACE,oCACE,wBACE9P,QAAS,kBACP,EAAK6P,aAAaC,EAAQhU,OAG5B,4BACE,yBACEkB,MAAO,CACLC,MAAO,GACPsR,OAAQ,GACRmD,aAAc,GACdpD,UAAW,SAEbpR,IAAK4S,EAAQzI,aAGjB,4BAAKyI,EAAQlU,MACb,4BAAKkU,EAAQjU,OACb,4BACGiU,EAAQhK,YACP,kBAACqJ,GAAA,EAAD,CAAOR,QAAQ,WAAf,YAIA,kBAACQ,GAAA,EAAD,CAAOR,QAAQ,UAAf,uBAYlB,kBAACwC,GAAA,EAAD,CAAKC,SAAS,OAAOC,MAAM,QACzB,kBAACC,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,GAC7B,+BACE,4BACE,qCACA,oCACA,qCACA,wCAGJ,+BACGvB,EAAMhN,KAAI,SAAA4M,GACT,OACE,oCACE,wBACE9P,QAAS,kBACP,EAAK6P,aAAaC,EAAQhU,OAG5B,4BACE,yBACEkB,MAAO,CACLC,MAAO,GACPsR,OAAQ,GACRmD,aAAc,GACdpD,UAAW,SAEbpR,IAAK4S,EAAQzI,aAGjB,4BAAKyI,EAAQlU,MACb,4BAAKkU,EAAQjU,OACb,4BACGiU,EAAQhK,YACP,kBAACqJ,GAAA,EAAD,CAAOR,QAAQ,WAAf,YAIA,kBAACQ,GAAA,EAAD,CAAOR,QAAQ,UAAf,sBAYlB,kBAACwC,GAAA,EAAD,CAAKC,SAAS,eAAeC,MAAM,gBACjC,kBAACC,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,GAC7B,+BACE,4BACE,qCACA,oCACA,qCACA,wCAGJ,+BACGxB,EAAY/M,KAAI,SAAA4M,GACf,OACE,oCACE,wBACE9P,QAAS,kBACP,EAAK6P,aAAaC,EAAQhU,OAG5B,4BACE,yBACEkB,MAAO,CACLC,MAAO,GACPsR,OAAQ,GACRmD,aAAc,GACdpD,UAAW,SAEbpR,IAAK4S,EAAQzI,aAGjB,4BAAKyI,EAAQlU,MACb,4BAAKkU,EAAQjU,OACb,4BACGiU,EAAQhK,YACP,kBAACqJ,GAAA,EAAD,CAAOR,QAAQ,WAAf,YAIA,kBAACQ,GAAA,EAAD,CAAOR,QAAQ,UAAf,sBAYlB,kBAACwC,GAAA,EAAD,CAAKC,SAAS,mBAAmBC,MAAM,oBACrC,kBAACC,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,GAC7B,+BACE,4BACE,qCACA,oCACA,qCACA,wCAGJ,+BACGtB,EAAOjN,KAAI,SAAA4M,GACV,OACE,oCACE,wBACE9P,QAAS,kBACP,EAAK6P,aAAaC,EAAQhU,OAG5B,4BACE,yBACEkB,MAAO,CACLC,MAAO,GACPsR,OAAQ,GACRmD,aAAc,GACdpD,UAAW,SAEbpR,IAAK4S,EAAQzI,aAGjB,4BAAKyI,EAAQlU,MACb,4BAAKkU,EAAQjU,OACb,4BACGiU,EAAQhK,YACP,kBAACqJ,GAAA,EAAD,CAAOR,QAAQ,WAAf,YAIA,kBAACQ,GAAA,EAAD,CAAOR,QAAQ,UAAf,4BAiBjB,IACb,kBAAC,EAAD,Y,GAzQcjR,aAgRTkR,eACbxB,GACAC,GAFauB,CAGb1O,YAAWqP,K,uCClSPoC,G,2MACJnP,OAAS,oBAAA7D,EAAAC,OAAA,gDACPoO,KACA,EAAK1N,MAAMiO,YAAY,MACvB,EAAKjO,MAAMC,QAAQC,KAAK,WAHjB,sC,wEAMP,IAAMnD,EAAU4D,KAAKX,MAAMjD,QAAQyL,QAAO,SAAAnI,GAAC,OAAKA,EAAEmG,eAC5CpK,EAAgBW,EAAQ6G,KAAI,SAAAvD,GAChC,OACE,kBAACmP,GAAA,EAASC,KAAV,KACE,kBAAC,IAAD,CAAMhS,GAAI,iBAAmB4C,EAAE7D,KAA/B,qBAAuD6D,EAAE/D,UAI/D,OACE,kBAACgW,GAAA,EAAD,CAAQ9U,UAAU,YAAY+U,GAAG,QAAQC,OAAO,MAC9C,kBAACF,GAAA,EAAOG,MAAR,KACE,kBAAC,IAAD,CAAMhV,GAAG,WACP,yBAAKC,MAAO,CAAEC,MAAO,KAAOC,IAAKC,QAGrC,kBAACyU,GAAA,EAAO1C,OAAR,CAAe5R,gBAAc,qBAC7B,kBAACsU,GAAA,EAAOI,SAAR,CAAiBvU,GAAG,oBAClB,kBAACwU,GAAA,EAAD,CAAKnV,UAAU,2BACb,kBAACmV,GAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAAMnV,GAAG,UAAT,YAEF,kBAACkV,GAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAAMnV,GAAG,uBAAT,iBAEF,kBAACkV,GAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAAMnV,GAAG,mBAAT,sBAEF,kBAACkV,GAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAAMnV,GAAG,qBAAT,eAEF,kBAACkV,GAAA,EAAIC,KAAL,KACE,kBAAC,IAAD,CAAMnV,GAAG,oBAAT,cAEF,kBAAC+R,GAAA,EAAD,KACE,kBAACA,GAAA,EAASI,OAAV,CAAiBP,QAAQ,OAAOlR,GAAG,kBACjC,8BAAU7B,KAAK,0BACf,kBAACuT,GAAA,EAAD,CAAOC,MAAI,EAACtS,UAAU,gBAAgB6R,QAAQ,WAC3CtS,EAAQ+M,SAIb,kBAAC0F,GAAA,EAASO,KAAV,KACG3T,EAAc0N,OACb1N,EAEA,kBAACoT,GAAA,EAASC,KAAV,4BAKR,kBAAC,IAAD,KACE,kBAACoD,GAAA,EAAD,CACEnS,QAASC,KAAKuC,OACdtG,KAAK,SACLyS,QAAQ,mBAHV,iB,GA1DcjR,a,IAwEXwC,YACb0O,YAAQxB,GAAiBC,GAAzBuB,CAA6C+C,K,sCC1DzCS,I,kNACJnW,MAAQ,CACNwK,QAAS,GACTI,OAAQ,GACRC,SAAU,GACVW,OAAO,EACP5L,MAAO,GACPgN,aAAc,CACZC,UAAW,GAEb0G,WAAW,EACX6C,kBAAkB,EAClBxM,oBAAoB,EACpBJ,mBAAmB,EACnBK,aAAa,EACbyB,UAAW,CACTR,IAAK,EACLC,MAAO,GAETpL,KAAM,GACNqL,OAAQ,GACRI,UAAW,GACXD,gBAAiB,IACjBzB,eAAgB,IAChB7J,IAAK,+BACLwL,aAAc,CACZZ,cAAe,GACfC,aAAc,GACdC,UAAW,IAEbtL,QAAS,GACTgX,UAAW,G,EAEb/M,cAAgB,SAAMzJ,GAAN,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACRgE,GAAS4C,eAAe,EAAKtJ,MAAMwJ,kBAAmB3J,IAD9C,OAEd,EAAK2C,SAAS,CACZgH,mBAAoB,EAAKxJ,MAAMwJ,oBAHnB,sC,EAMhB8M,UAAY,SAAA5C,GACV,IAAI6C,EAAY,IAAI5C,KAEpB4C,EAAUC,QAAQD,EAAUE,UAAY,IACxC,IAAIC,EAAU,IAAI/C,MAAM4C,GAExB,OADAG,EAAQF,QAAQE,EAAQD,UAAY,IAC7B/C,GAAQ6C,GAAa7C,GAAQgD,G,EAEtCC,kBAAoB,8BAAAjU,EAAAC,OAAA,gDACZxD,EAAS,EAAKkE,MAAMjD,QAAQ+P,MAChC,SAAA0D,GAAO,OAAIA,EAAQhU,MAAQ,EAAKwD,MAAMuT,MAAMC,OAAOhX,OAErD,EAAK2C,SAAL,eACKrD,IAECE,EAAU,EAAKgE,MAAMhE,QAAQwM,QACjC,SAAAgI,GAAO,OAAIA,EAAQ/H,iBAAmB,EAAKzI,MAAMuT,MAAMC,OAAOhX,OAE5DiX,EAA+BzX,EAAQ4H,KAAI,SAAA4M,GAC7C,IAAMkD,EAAW,EAAK1T,MAAM/D,UAAU6Q,MACpC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQoD,gBAEnBC,EAAa,EAAK7T,MAAMjD,QAAQ+P,MACpC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQ/H,kBAEnBqL,EAAQ,CACZ,eACA,eACA,eACA,eACA,gBAGF,OADAA,EAAMC,KAAK,OAAQ,EAAGvD,EAAQwD,QACvB,eACFxD,EADL,CAEEkD,WACAG,aACAC,aAGJ,EAAK3U,SAAS,CACZnD,QAASyX,IAjCO,sC,EAoCpBlD,aAAe,SAAM/T,GAAN,SAAA6C,EAAAC,OAAA,gDACb,EAAKU,MAAMC,QAAQC,KAAK,mBAAqB1D,GADhC,sC,EAGfyX,cAAgB,oBAAA5U,EAAAC,OAAA,kEAAAD,EAAA,MACRgE,GAAS0C,aAAa,EAAKpJ,MAAMH,MADzB,OAEd,EAAKwD,MAAMC,QAAQC,KAAK,WAFV,sC,wEAIN,IAAD,OACDnE,EAAe4E,KAAKX,MAAMjE,aAAayM,QAC3C,SAAAgI,GAAO,OAAIA,EAAQ/H,iBAAmB,EAAKzI,MAAMuT,MAAMC,OAAOhX,OAE1D0X,EAAuBnY,EAAa6H,KAAI,SAAA4M,GAC5C,IAAMkD,EAAW,EAAK1T,MAAM/D,UAAU6Q,MACpC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQoD,gBAKnBO,GAHS,EAAKnU,MAAMjD,QAAQ+P,MAChC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQ/H,kBAGL,YAAlB+H,EAAQ4D,OACJ,UACkB,aAAlB5D,EAAQ4D,OACR,UACA,UACN,OACE,wBAAI1T,QAAS,kBAAM,EAAK6P,aAAamD,EAASlX,OAC5C,4BACE,yBACEkB,MAAO,CACLC,MAAO,GACPsR,OAAQ,GACRmD,aAAc,GACdpD,UAAW,SAEbpR,IAAK8V,EAAS9L,SAGlB,4BAAK8L,EAASpX,MACd,4BAAKkU,EAAQ6D,MACb,4BAAK7D,EAAQH,MACb,4BAAKG,EAAQ8D,UACb,4BAAKC,KAAKC,MAAM/K,OAAO+G,EAAQ8D,SAAW,IAAM,GAChD,4BACE,kBAACzE,GAAA,EAAD,CAAOR,QAAS8E,GAAe3D,EAAQ4D,aAQzCK,EAHa9T,KAAKX,MAAMhD,WAAWwL,QACvC,SAAAgI,GAAO,OAAIA,EAAQ/H,iBAAmB,EAAKzI,MAAMuT,MAAMC,OAAOhX,OAE1BoH,KAAI,SAAA4M,GACxC,IAAMkD,EAAW,EAAK1T,MAAM/D,UAAU6Q,MACpC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQoD,gBAEnB9X,EAAS,EAAKkE,MAAMjD,QAAQ+P,MAChC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQ/H,kBAEzB,OAAOiL,EACL,kBAACgB,GAAA,EAAD,CAAOlD,GAAG,MACR,yBACE7T,MAAO,GACPsR,OAAQ,GACRzR,UAAU,OACVE,MAAO,CAAEsR,UAAW,SACpBpR,IACE8V,EAAS9L,MACL8L,EAAS9L,MACT,6GAEN+M,IAAI,wBAEN,kBAACD,GAAA,EAAMvD,KAAP,KACE,4BAAKuC,EAASpX,MACd,kBAACyU,GAAA,EAAD,CAAKvT,UAAU,QACb,wBAAIkD,QAAS,EAAKkU,kBAAmB9Y,EAAOQ,OAE9C,kBAACyU,GAAA,EAAD,CAAKvT,UAAU,QACb,wBAAIA,UAAU,cAAcgT,EAAQuB,QAEtC,2BAAIvB,EAAQqE,aACZ,gDACqB,IACnB,2BAAOrX,UAAU,cAAcgT,EAAQH,SAI3C,QAEAyE,EAAsB/Y,EAAayM,QAAO,SAAAnI,GAC9C,IAAMgQ,EAAO,IAAIC,KAAKjQ,EAAEgQ,MAExB,OADA7D,QAAQC,IAAI4D,GACL,EAAK4C,UAAU5C,MAExB7D,QAAQC,IAAIqI,GACZtI,QAAQC,IAAI1Q,GACZ,IAAIgZ,EAAc,EAMlB,OALAD,EAAoB1Q,SAAQ,SAAA4Q,GAC1BD,GAAeR,KAAKC,MAAM/K,OAAOA,OAAOuL,EAAEV,UAAY,IAAM,KAE9D9H,QAAQC,IAAIsI,GAGV,6BACE,kBAAC,GAAD,KACE,kBAACjE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KAAKgE,GAAG,KACd,kBAAC/D,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,KAAN,KACE,yBACEzT,MAAO,CACLC,MAAO,OACPsR,OAAQ,IACRD,UAAW,SAEbpR,IAAK+C,KAAKhE,MAAMoL,YAElB,6BACA,uBAAGvK,UAAU,MACVmD,KAAKhE,MAAML,KACXqE,KAAKhE,MAAM6J,YAAc,KACxB,2BAAOhJ,UAAU,0BACd,IADH,2BAMJ,uBAAGA,UAAU,cAAcmD,KAAKhE,MAAM6K,UACtC,6BACA,uBAAGhK,UAAU,MAAb,UACU,IACR,0BAAMA,UAAU,cAAcmD,KAAKhE,MAAM4K,SAE3C,uBAAG/J,UAAU,MAAb,SACS,IACP,0BAAMA,UAAU,cAAcmD,KAAKhE,MAAMgL,SAE3C,uBAAGnK,UAAU,MAAb,SACS,IACP,0BAAMA,UAAU,cAAcmD,KAAKhE,MAAMJ,QAE3C,6BACA,uBAAGiB,UAAU,MAAb,aACa,IACX,0BAAMA,UAAU,cACbmD,KAAKhE,MAAMqL,aAAaV,YAG7B,uBAAG9J,UAAU,MAAb,gBACgB,IACd,0BAAMA,UAAU,cACbmD,KAAKhE,MAAMqL,aAAaX,eAG7B,uBAAG7J,UAAU,MAAb,kBACkB,IAChB,0BAAMA,UAAU,cACbmD,KAAKhE,MAAMqL,aAAaZ,gBAG7B,6BACA,uBAAG5J,UAAU,MAAb,mBACmB,IACjB,0BAAMA,UAAU,cAAhB,OACOmD,KAAKhE,MAAMmL,kBAGpB,uBAAGtK,UAAU,MAAb,kBACkB,IAChB,0BAAMA,UAAU,cAAhB,OACOmD,KAAKhE,MAAM0J,iBAGpB,6BACA,uBAAG7I,UAAU,MAAb,mCACmC,IACjC,0BAAMA,UAAU,cAAhB,OACOmD,KAAKhE,MAAMmL,gBAAkBiN,IAGtC,uBAAGvX,UAAU,MAAb,kCACkC,IAChC,0BAAMA,UAAU,cAAhB,OACOmD,KAAKhE,MAAM0J,eAAiB0O,IAGrC,6BACA,uBAAGvX,UAAU,MAAb,0BAC0B,IACxB,0BAAMA,UAAU,cACbmD,KAAKhE,MAAM4M,aAAaC,YAG7B,6BACA,kBAAC4H,GAAA,EAAK8D,MAAN,CACEC,QAASxU,KAAKhE,MAAMwJ,kBACpBvJ,KAAK,SACLuB,GAAG,gBACHiX,MAAM,oBACNhV,SAAU,kBAAM,EAAK6F,cAAc,EAAKtJ,MAAMH,WAKtD,kBAACwU,GAAA,EAAD,CAAKxT,UAAU,oBAAoByT,GAAG,KAAKgE,GAAG,KAC5C,kBAAC/D,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,+CAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,kBAACJ,GAAA,EAAD,CAAKvT,UAAU,QACb,kBAACqV,GAAA,EAAD,CACEnS,QAAS,WACP,EAAKvB,SAAS,CACZ+Q,WAAW,KAGfb,QAAQ,UACR7R,UAAU,QAETmD,KAAKhE,MAAM6J,YACR,sBACA,wBAEN,kBAACqM,GAAA,EAAD,CACEnS,QAASC,KAAKsT,cACd5E,QAAQ,SACR7R,UAAU,QAETmD,KAAKhE,MAAM6J,YACR,gBACA,wBAGR,6BACA,wCACA,yBAAKhJ,UAAU,OACb,2DAEF,6BACC0W,EAAqBpK,OAAS,EAC7B,oCACE,4CACA,kBAACkI,GAAA,EAAD,CAAOG,YAAU,EAACF,SAAO,EAACC,OAAK,GAC7B,+BACE,4BACE,qCACA,6CACA,gDACA,mDACA,mDACA,gDACA,wCAGJ,+BAAQgC,KAIZ,oDAEF,6BACCvT,KAAKhE,MAAMX,QAAQ8N,OAAS,EAC3B,oCACE,uCACA,wBAAItM,UAAU,sBACXmD,KAAKhE,MAAMX,QAAQ4H,KAAI,SAAA4M,GACtB,OACE,kBAACkE,GAAA,EAAD,CAAOlD,GAAG,MACR,yBACE7T,MAAO,GACPsR,OAAQ,GACRzR,UAAU,OACVE,MAAO,CAAEsR,UAAW,SACpBpR,IACE4S,EAAQkD,SAAS9L,MACb4I,EAAQkD,SAAS9L,MACjB,6GAEN+M,IAAI,wBAEN,kBAACD,GAAA,EAAMvD,KAAP,KACE,4BAAKX,EAAQkD,SAASpX,MACtB,kBAACyU,GAAA,EAAD,CAAKvT,UAAU,gBACZgT,EAAQsD,MAAMlQ,KAAI,SAAAyR,GACjB,OAAO,8BAAU/Y,KAAM+Y,QAG3B,2BAAI7E,EAAQ8E,gBAQxB,yDAEF,6BACCb,EAAmB3K,OAAS,EAC3B,oCACE,0CACA,wBAAItM,UAAU,sBACXiX,IAIL,iEAOZ,kBAAC,EAAD,OAEF,kBAACc,GAAA,EAAD,CACEC,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EACRC,KAAMhV,KAAKhE,MAAMuT,UACjB0F,OAAQ,kBAAM,EAAKzW,SAAS,CAAE+Q,WAAW,MAEzC,kBAACqF,GAAA,EAAMhG,OAAP,CAAcsG,aAAW,GACvB,kBAACN,GAAA,EAAMO,MAAP,CAAa3X,GAAG,iCAAhB,wBAIF,kBAACoX,GAAA,EAAMpE,KAAP,KACE,kBAAC4E,GAAA,EAAD,CAAYvY,UAAU,QACpB,kBAACuY,GAAA,EAAWC,QAAZ,KACE,kBAACD,GAAA,EAAWE,KAAZ,CAAiB9X,GAAG,6BAApB,mBAIF,kBAAC+X,GAAA,EAAD,CACEhY,aAAW,UACXsC,mBAAiB,4BACjB5D,KAAK,SACLwD,SAAU,SAAAC,GACR,EAAKlB,SAAS,CACZ6T,UAAW3S,EAAEC,OAAOpB,aAM9B,kBAACqW,GAAA,EAAMlX,OAAP,KACE,kBAACwU,GAAA,EAAD,CACEnS,QAAS,oBAAArB,EAAAC,OAAA,oDACH,EAAK3C,MAAM6J,YADR,kCAAAnH,EAAA,MAECgE,GAAS+C,oBACb,EAAKzJ,MAAMqW,UACX,EAAKrW,MAAMH,MAJR,+CAAA6C,EAAA,MAOCgE,GAASiD,6BACb,EAAK3J,MAAMqW,UACX,EAAKrW,MAAMH,MATR,OAYP,EAAK2C,SAAS,CAAE+Q,WAAW,IAC3BrB,OAAOC,SAASC,SAbT,uCAgBRpO,KAAKhE,MAAM6J,YAAc,SAAW,UAEvC,kBAACqM,GAAA,EAAD,CACExD,QAAQ,SACR3O,QAAS,kBAAM,EAAKvB,SAAS,CAAE+Q,WAAW,MAF5C,gB,GAncS9R,cA+cNkR,eAAQxB,GAAiBC,GAAzBuB,CAA6C1O,YAAWkS,KC9djEqD,G,2MACJvB,iBAAmB,oBAAAvV,EAAAC,OAAA,gDACjB,EAAKU,MAAMC,QAAQC,KAAK,iBADP,sC,wEAGT,IAAD,OACDuU,EAAqB9T,KAAKX,MAAMhD,WAAW4G,KAAI,SAAA4M,GACnD,IAAMkD,EAAW,EAAK1T,MAAM/D,UAAU6Q,MACpC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQoD,gBAEnB9X,EAAS,EAAKkE,MAAMjD,QAAQ+P,MAChC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQ/H,kBAGzB,OADkBiL,GAAY5X,EAE5B,oCACE,kBAAC4Y,GAAA,EAAD,CAAOlD,GAAG,MACR,yBACE7T,MAAO,GACPsR,OAAQ,GACRzR,UAAU,OACVE,MAAO,CAAEsR,UAAW,SACpBpR,IACE8V,EAAS9L,MACL8L,EAAS9L,MACT,6GAEN+M,IAAI,wBAEN,kBAACD,GAAA,EAAMvD,KAAP,KACE,4BAAKuC,EAASpX,MACd,kBAACyU,GAAA,EAAD,CAAKvT,UAAU,QACb,wBAAIkD,QAAS,EAAKkU,kBAAmB9Y,EAAOQ,OAE9C,kBAACyU,GAAA,EAAD,CAAKvT,UAAU,QACb,wBAAIA,UAAU,cAAcgT,EAAQuB,QAEtC,2BAAIvB,EAAQqE,aACZ,gDACqB,IACnB,2BAAOrX,UAAU,cAAcgT,EAAQH,SAI7C,8BAEA,QAEN,OACE,6BACE,kBAAC,GAAD,KACE,kBAACS,GAAA,EAAD,KACE,kBAACI,GAAA,EAAD,CAAM1T,UAAU,QACd,kBAAC0T,GAAA,EAAK3B,OAAN,KACE,2CAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,wBAAI3T,UAAU,sBAAsBiX,MAK1C,kBAAC,EAAD,Y,GA7DerW,aAmEVkR,eACbxB,GACAC,GAFauB,CAGb1O,YAAWuV,KCvEPC,G,2MACJzZ,MAAQ,CACNb,OAAQ,GACR4X,SAAU,GACV2C,QAAS,KACTC,QAAS,KACTC,WAAY,O,EAEdC,mBAAqB,SAAMha,GAAN,SAAA6C,EAAAC,OAAA,gDACnB,EAAKU,MAAMC,QAAQC,KAAK,mBAAqB1D,GAD1B,sC,wEAGX,IAAD,OACD0X,EAAuBvT,KAAKX,MAAMjE,aAAa6H,KAAI,SAAA4M,GACvD,IAAMkD,EAAW,EAAK1T,MAAM/D,UAAU6Q,MACpC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQoD,gBAEnB9X,EAAS,EAAKkE,MAAMjD,QAAQ+P,MAChC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQ/H,kBAGnB4H,EAAO,IAAIC,KAAKE,EAAQH,MACxBgG,EAAU,IAAI/F,KAAK,EAAK3T,MAAM0Z,SAC9BC,EAAU,IAAIhG,KAAK,EAAK3T,MAAM2Z,SAC9BG,EACJ3a,EAAOQ,KACJmU,cACAC,SAAS,EAAK/T,MAAMb,OAAO2U,cAAe,KAClB,QAA1B,EAAK9T,MAAM4Z,YACV,EAAK5Z,MAAM4Z,aAAeza,EAAO0L,WACnCkM,EAASpX,KACNmU,cACAC,SAAS,EAAK/T,MAAM+W,SAASjD,cAAe,MAC7C,EAAK9T,MAAM0Z,UACV,EAAK1Z,MAAM2Z,SACXjG,GAAQgG,GAAWhG,GAAQiG,GAC1BnC,EACc,YAAlB3D,EAAQ4D,OACJ,UACkB,aAAlB5D,EAAQ4D,OACR,UACA,SACN,OAAOqC,EACL,wBAAI/V,QAAS,kBAAM,EAAK8V,mBAAmB9C,EAASlX,OAClD,4BACE,yBACEkB,MAAO,CACLC,MAAO,GACPsR,OAAQ,GACRmD,aAAc,GACdpD,UAAW,SAEbpR,IAAK8V,EAAS9L,SAGlB,4BAAK8L,EAASpX,MACd,4BAAKR,EAASA,EAAOQ,KAAO,kBAC5B,4BAAKkU,EAAQ6D,MACb,4BAAK7D,EAAQH,MACb,4BAAKG,EAAQ8D,UACb,4BAAKC,KAAKC,MAAM/K,OAAO+G,EAAQ8D,SAAW,IAAM,GAChD,4BACE,kBAACzE,GAAA,EAAD,CAAOR,QAAS8E,GAAe3D,EAAQ4D,UAGzC,QAEN,OACE,6BACE,kBAAC,GAAD,KACE,kBAACtD,GAAA,EAAD,KACE,kBAACI,GAAA,EAAD,CAAM1T,UAAU,QACd,kBAAC0T,GAAA,EAAK3B,OAAN,KACE,6CAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,kBAACC,GAAA,EAAKL,IAAN,CAAUrT,MAAO,CAAE2T,WAAY,KAC7B,kBAACD,GAAA,EAAKG,MAAN,CAAYC,GAAIR,KAAKS,UAAU,gBAC7B,kBAACL,GAAA,EAAKsF,MAAN,oBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEF,GAAG,SACHpR,SAAU,SAAAC,GAAC,OACT,EAAKlB,SAAS,CAAEoX,WAAYlW,EAAEC,OAAOpB,UAGvC,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,UAAd,aAIN,kBAACkS,GAAA,EAAKL,IAAN,CAAUrT,MAAO,CAAE2T,WAAY,KAC7B,kBAACD,GAAA,EAAKG,MAAN,CAAYC,GAAIR,KAAKS,UAAU,gBAC7B,kBAACL,GAAA,EAAKsF,MAAN,oBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAU,SAAAC,GAAC,OAAI,EAAKlB,SAAS,CAAErD,OAAQuE,EAAEC,OAAOpB,SAChDqB,YAAY,sBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYC,GAAIR,KAAKS,UAAU,gBAC7B,kBAACL,GAAA,EAAKsF,MAAN,sBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAU,SAAAC,GAAC,OACT,EAAKlB,SAAS,CAAEuU,SAAUrT,EAAEC,OAAOpB,SAErCqB,YAAY,yBAIlB,kBAAC6Q,GAAA,EAAKL,IAAN,CAAUrT,MAAO,CAAE2T,WAAY,KAC7B,kBAACD,GAAA,EAAKG,MAAN,CAAYC,GAAIR,KAAKS,UAAU,gBAC7B,kBAACL,GAAA,EAAKsF,MAAN,iBACA,kBAACtF,GAAA,EAAKM,QAAN,CACE9U,KAAK,OACLwD,SAAU,SAAAC,GAAC,OAAI,EAAKlB,SAAS,CAAEkX,QAAShW,EAAEC,OAAOpB,YAGrD,kBAACkS,GAAA,EAAKG,MAAN,CAAYC,GAAIR,KAAKS,UAAU,gBAC7B,kBAACL,GAAA,EAAKsF,MAAN,iBACA,kBAACtF,GAAA,EAAKM,QAAN,CACE9U,KAAK,OACLwD,SAAU,SAAAC,GAAC,OAAI,EAAKlB,SAAS,CAAEmX,QAASjW,EAAEC,OAAOpB,aAIvD,kBAAC8S,GAAA,EAAD,CAAOG,YAAU,EAACF,SAAO,EAACC,OAAK,GAC7B,+BACE,4BACE,8CACA,6CACA,2CACA,gDACA,mDACA,mDACA,gDACA,wCAGJ,+BAAQgC,OAKhB,kBAAC,EAAD,Y,GAhJiB9V,aAsJZkR,eACbxB,GACAC,GAFauB,CAGb1O,YAAWwV,KClJPO,G,2MACJpG,aAAe,SAAM/T,GAAN,SAAA6C,EAAAC,OAAA,gDACb,EAAKU,MAAMC,QAAQC,KAAK,iBAAmB1D,GAD9B,sC,wEAGL,IAAD,OACDkX,EAAW/S,KAAKX,MAAM/D,UAAU6Q,MACpC,SAAAzM,GAAC,OAAIA,EAAE7D,MAAQ,EAAKwD,MAAMuT,MAAMC,OAAOhX,OAEnCT,EAAe4E,KAAKX,MAAMjE,aAAayM,QAC3C,SAAAwM,GAAC,OAAIA,EAAEpB,cAAgB,EAAK5T,MAAMuT,MAAMC,OAAOhX,OAE3CQ,EAAa2D,KAAKX,MAAMhD,WAAWwL,QACvC,SAAAwM,GAAC,OAAIA,EAAEpB,cAAgB,EAAK5T,MAAMuT,MAAMC,OAAOhX,OAE3CR,EAAU2E,KAAKX,MAAMhE,QAAQwM,QACjC,SAAAwM,GAAC,OAAIA,EAAEpB,cAAgB,EAAK5T,MAAMuT,MAAMC,OAAOhX,OAE3C0X,EAAuBnY,EAAa6H,KAAI,SAAAgT,GAC5C,IAAM9a,EAAS,EAAKkE,MAAMjD,QAAQ+P,MAChC,SAAAzM,GAAC,OAAIA,EAAE7D,MAAQoa,EAAYnO,kBAEvB0L,EACkB,YAAtByC,EAAYxC,OACR,UACsB,aAAtBwC,EAAYxC,OACZ,UACA,SACN,OACE,wBAAI1T,QAAS,kBAAM,EAAK6P,aAAazU,EAAOU,OAC1C,4BACE,yBACEoB,IAAK9B,EAASA,EAAOiM,UAAY,GACjCrK,MAAO,CACLC,MAAO,GACPsR,OAAQ,GACRD,UAAW,QACXoD,aAAc,OAIpB,4BAAKtW,EAASA,EAAOQ,KAAO,kBAC5B,4BAAKsa,EAAYvC,MACjB,4BAAKuC,EAAYvG,MACjB,4BAAKuG,EAAYtC,UACjB,4BAAKC,KAAKC,MAAM/K,OAAOmN,EAAYtC,SAAW,IAAM,GACpD,4BACE,kBAACzE,GAAA,EAAD,CAAOR,QAAS8E,GAAeyC,EAAYxC,aAK7CyC,EAAkB7a,EAAQ4H,KAAI,SAAAkT,GAClC,IAAMhb,EAAS,EAAKkE,MAAMjD,QAAQ+P,MAChC,SAAAzM,GAAC,OAAIA,EAAE7D,MAAQsa,EAAOrO,kBAGlBqL,EAAQ,CACZ,eACA,eACA,eACA,eACA,gBAGF,OADAA,EAAMC,KAAK,OAAQ,EAAG+C,EAAO9C,QAE3B,kBAACU,GAAA,EAAD,CAAOlD,GAAG,MACR,yBACE7T,MAAO,GACPsR,OAAQ,GACRzR,UAAU,OACVE,MAAO,CAAEsR,UAAW,SACpBpR,IACE9B,EAAOiM,UACHjM,EAAOiM,UACP,6GAEN4M,IAAI,wBAEN,kBAACD,GAAA,EAAMvD,KAAP,KACE,4BAAKrV,EAAOQ,MACZ,kBAACyU,GAAA,EAAD,CAAKvT,UAAU,gBACZsW,EAAMlQ,KAAI,SAAAvD,GAAC,OACV,8BAAU/D,KAAM+D,QAGpB,2BAAIyW,EAAOxB,cAKbb,EAAqBzX,EAAW4G,KAAI,SAAAmT,GACxC,IAAMjb,EAAS,EAAKkE,MAAMjD,QAAQ+P,MAChC,SAAAzM,GAAC,OAAIA,EAAE7D,MAAQua,EAAUtO,kBAG3B,OACE,kBAACiM,GAAA,EAAD,CAAOlD,GAAG,MACR,yBACE7T,MAAO,GACPsR,OAAQ,GACRzR,UAAU,OACVE,MAAO,CAAEsR,UAAW,SACpBpR,IACE9B,EAAOiM,UACHjM,EAAOiM,UACP,6GAEN4M,IAAI,wBAEN,kBAACD,GAAA,EAAMvD,KAAP,KACE,4BAAKrV,EAAOQ,MACZ,kBAACyU,GAAA,EAAD,CAAKvT,UAAU,QACb,wBAAIA,UAAU,cAAc1B,EAAOiW,QAErC,2BAAIgF,EAAUlC,aACd,gDACqB,IACnB,2BAAOrX,UAAU,cAAcuZ,EAAU1G,YAMnD,OACE,6BACE,kBAAC,GAAD,KACE,kBAACS,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KAAKgE,GAAG,KACd,kBAAC/D,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,KAAN,KACE,yBACEzT,MAAO,CAAEC,MAAO,OAAQsR,OAAQ,IAAKD,UAAW,SAChDpR,IAAK8V,EAAS9L,QAEhB,6BACA,uBAAGpK,UAAU,MAAMkW,EAASpX,MAC5B,6BACA,uBAAGkB,UAAU,MAAb,SACS,IACP,0BAAMA,UAAU,cAAckW,EAAS/L,SAEzC,uBAAGnK,UAAU,MAAb,SACS,IACP,0BAAMA,UAAU,cAAckW,EAASnX,WAK/C,kBAACyU,GAAA,EAAD,CAAKxT,UAAU,oBAAoByT,GAAG,KAAKgE,GAAG,KAC5C,kBAAC/D,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,iDAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,4CACA,kBAACa,GAAA,EAAD,CAAOG,YAAU,EAACF,SAAO,EAACC,OAAK,GAC7B,+BACE,4BACE,qCACA,2CACA,gDACA,oDACA,mDACA,gDACA,wCAGJ,+BAAQgC,IAGV,6BACC2C,EAAgB/M,OAAS,EACxB,oCACE,uCACA,wBAAItM,UAAU,sBACXqZ,IAIL,0DAEF,6BAECpC,EAAmB3K,OAAS,EAC3B,oCACE,0CACA,wBAAItM,UAAU,sBACXiX,IAIL,kEAOZ,kBAAC,EAAD,Y,GAvMarW,aA6MRkR,eACbxB,GACAC,GAFauB,CAGb1O,YAAW+V,KC7MPK,I,kNACJra,MAAQ,CACNgI,KAAM,GACNC,QAAS,GACTC,QAAS,EACTC,YAAa,cACb6Q,MAAM,EACNsB,aAAc,GACdC,UAAU,EACVnS,WAAY,G,EAEdoS,UAAY,WACV,EAAKhY,SAAS,CAAEwW,MAAO,EAAKhZ,MAAMgZ,Q,EAEpCyB,IAAM,oBAAA/X,EAAAC,OAAA,uDACJ,EAAKH,SAAS,CACZ+X,UAAU,IAFR,WAAA7X,EAAA,MAIEgE,GAASqB,mBACb,EAAK/H,MAAMgI,KACX,EAAKhI,MAAMiI,QACX,EAAKjI,MAAMkI,QACX,EAAKlI,MAAMmI,YACX,EAAKnI,MAAMoI,aATT,OAWJ8J,OAAOC,SAASC,SAXZ,sC,EAaNsI,QAAU,SAAC/a,EAAM4C,GACf,EAAKC,SAAL,eACG7C,EAAO4C,K,EAGZoY,YAAc,SAAAjX,GACZ,IAAMkX,EAAYlX,EAAEC,OAAOpB,MAAM2K,MAAM,KAEvC,EAAK1K,SAAS,CACZyF,QAAS2S,EAAU,GAAK,IAAMA,EAAU,GAAK,IAAMA,EAAU,M,EAGjEC,MAAQ,SAAOhb,EAAK0C,GAAZ,SAAAG,EAAAC,OAAA,kEAAAD,EAAA,MACAgE,GAASoD,sBAAsBjK,GAAM0C,IADrC,OAEN2P,OAAOC,SAASC,SAFV,sC,wEAIE,IAAD,OACSpO,KAAKX,MAAMjD,QAAQ6G,KAAI,SAAAvD,GACrC,OAAO,4BAAQnB,MAAOmB,EAAE7D,KAAM6D,EAAE/D,SAElC,OACE,6BACE,kBAAC,GAAD,KACE,kBAACwU,GAAA,EAAD,KACE,kBAACI,GAAA,EAAD,CAAM1T,UAAU,QACd,kBAAC0T,GAAA,EAAK3B,OAAN,KACE,kDAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,kBAACC,GAAA,EAAD,KACE,4BAAQ5T,UAAU,MAAlB,wBACA,kBAAC4T,GAAA,EAAKL,IAAN,KACE,kBAACK,GAAA,EAAKG,MAAN,CAAYC,GAAIR,KAAKS,UAAU,iBAC7B,kBAACL,GAAA,EAAKsF,MAAN,aACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAU,SAAAC,GAAC,OAAI,EAAKgX,QAAQ,OAAQhX,EAAEC,OAAOpB,QAC7CtC,KAAK,OACL2D,YAAY,gBAIhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYC,GAAIR,KAAKS,UAAU,cAC7B,kBAACL,GAAA,EAAKsF,MAAN,oBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAUO,KAAK2W,YACf1a,KAAK,OACL2D,YAAY,kBAIlB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,8BACpB,kBAACL,GAAA,EAAKsF,MAAN,oBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAU,SAAAC,GAAC,OACT,EAAKgX,QAAQ,cAAehX,EAAEC,OAAOpB,QAEvCsS,GAAG,UAEH,4BAAQtS,MAAO,eAAgB,eAC/B,4BAAQA,MAAO,SAAU,SACzB,4BAAQA,MAAO,gBAAiB,gBAChC,4BAAQA,MAAO,UAAW,YAG9B,kBAACkS,GAAA,EAAKG,MAAN,CAAYE,UAAU,oBACpB,kBAACL,GAAA,EAAKsF,MAAN,2BACA,kBAACtF,GAAA,EAAKM,QAAN,CACE9U,KAAK,SACL2D,YAAY,WACZrB,MAAOyB,KAAKhE,MAAMkI,QAClBzE,SAAU,SAAAC,GACJA,EAAEC,OAAOpB,OAAS,GACpB,EAAKmY,QAAQ,UAAWhX,EAAEC,OAAOpB,WAKzC,kBAACkS,GAAA,EAAKG,MAAN,CAAYE,UAAU,oBACpB,kBAACL,GAAA,EAAKsF,MAAN,4BACA,kBAACtF,GAAA,EAAKM,QAAN,CACE9U,KAAK,SACL2D,YAAY,sBACZrB,MAAOyB,KAAKhE,MAAMoI,WAClB3E,SAAU,SAAAC,GACJA,EAAEC,OAAOpB,OAAS,GAAKmB,EAAEC,OAAOpB,OAAS,KAC3C,EAAKmY,QAAQ,aAAchX,EAAEC,OAAOpB,WAK5C,kBAAC2T,GAAA,EAAD,CACEnS,QAASC,KAAKyW,IACdI,OAAK,EACLnI,QAAQ,UACRzS,KAAK,UAEJ+D,KAAKhE,MAAMua,SACV,kBAAC/H,GAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YAEpC,oBAIN,6BACA,kBAAC2C,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,GAC7B,+BACE,4BACE,oCACA,0CACA,wCACA,2CACA,2CACA,mDACA,sCACA,6CACA,wCAGJ,+BACGxR,KAAKX,MAAM/C,SAAS2G,KAAI,SAAA4M,GACvB,IAAMH,EAAO,IAAIC,KACXmH,EAAejH,EAAQ5L,QAAQiF,MAAM,KACrCjF,EAAU,IAAI0L,KAClB7G,OAAOgO,EAAa,IACpBhO,OAAOgO,EAAa,IAAM,EAC1BhO,OAAOgO,EAAa,KAEhBhB,EACJjG,EAAQtL,WACRuE,OAAO+G,EAAQ3L,UACb4E,OAAO+G,EAAQvL,eACjBoL,EAAOzL,EACT,OACE,4BACE,4BAAK4L,EAAQ7L,MACb,4BAAK6L,EAAQvL,cAEb,4BAAKuL,EAAQ3L,SACb,4BAAK2L,EAAQ5L,SACb,4BAAK4L,EAAQ1L,aACb,4BAAK0L,EAAQzL,WAAb,KACA,4BACE,kBAAC8K,GAAA,EAAD,CAAOR,QAASoH,EAAY,SAAW,WACpCA,EAAY,cAAgB,cAGjC,wBACE/V,QAAS,WACP,EAAK8W,MAAMhH,EAAQhU,IAAKgU,EAAQtL,aAGlC,8BACEwK,MACE+G,EACI,2BACA,0BAENna,KACEma,EACI,2BACA,0BAIV,wBACE/V,QAAS,oBAAArB,EAAAC,OAAA,gDACP,EAAKH,SAAS,CACZ8X,aAAczG,EAAQhU,MAExB,EAAK2a,YAJE,uCAOT,8BACEzH,MAAM,0BACNpT,KAAK,4BAWzB,kBAAC,EAAD,OAEF,kBAACiZ,GAAA,EAAD,CACEG,UAAQ,EACRC,KAAMhV,KAAKhE,MAAMgZ,KACjBC,OAAQjV,KAAKwW,UACb/H,WAAW,GAEX,kBAACmG,GAAA,EAAMhG,OAAP,CAAcsG,aAAW,GACvB,kBAACN,GAAA,EAAMO,MAAP,uDAIF,kBAACP,GAAA,EAAMlX,OAAP,KACE,kBAACwU,GAAA,EAAD,CACExD,QAAQ,UACR3O,QAAS,oBAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACDgE,GAAS2D,eAAe,EAAKrK,MAAMsa,eADlC,OAEPpI,OAAOC,SAASC,SAFT,uCAFX,OASA,kBAAC8D,GAAA,EAAD,CAAQxD,QAAQ,SAAS3O,QAASC,KAAKwW,WAAvC,a,GA3OmB/Y,cAoPhBkR,eAAQxB,GAAiBC,GAAzBuB,CAA6C0H,I,UCpPtDU,G,2MACJ/a,MAAQ,CACNqG,KAAM,KACN2D,WAAY,GACZuQ,UAAU,G,EAEZG,QAAU,SAAC/a,EAAM4C,GACf,EAAKC,SAAL,eACG7C,EAAO4C,K,EAGZkY,IAAM,4BAAA/X,EAAAC,OAAA,uDACJ,EAAKH,SAAS,CACZ+X,UAAU,IAENS,EAAgB,EAAKhb,MAAMqG,KAAK1G,KAAKuN,MAAM,KAC3C9H,EAAY4V,EAAcA,EAAc7N,OAAS,GALnD,WAAAzK,EAAA,MAMEgE,GAASqD,aACb,EAAK/J,MAAMqG,KACXjB,EACA,EAAKpF,MAAMgK,aATT,OAWJkI,OAAOC,SAASC,SAXZ,sC,EAaN6I,YAAc,SAAAvX,GACZ,EAAKlB,SAAS,CACZ6D,KAAM3C,EAAEC,OAAOuX,MAAM,M,EAGzBC,OAAS,SAAMtb,GAAN,SAAA6C,EAAAC,OAAA,kEAAAD,EAAA,MACDgE,GAAS0D,gBAAgBvK,IADxB,OAEPqS,OAAOC,SAASC,SAFT,sC,wEAIC,IAAD,OACDhS,EAAU4D,KAAKX,MAAMjD,QAAQ6G,KAAI,SAAAvD,GACrC,OAAO,4BAAQnB,MAAOmB,EAAE7D,KAAM6D,EAAE/D,SAE5BY,EAAayD,KAAKX,MAAM9C,WAAW0G,KAAI,SAAAvD,GAC3C,IAAMvE,EAAS,EAAKkE,MAAMjD,QAAQ+P,MAAK,SAAAiL,GAAC,OAAIA,EAAEvb,MAAQ6D,EAAEsG,cACxD,OACE,kBAACqR,GAAA,EAASvI,KAAV,KACE,yBACE/R,MAAO,CACLuR,OAAQ,IACRD,UAAW,SAEbxR,UAAU,gBACVI,IAAKyC,EAAEuG,YAET,kBAACoR,GAAA,EAASC,QAAV,CACEva,MAAO,CACLwa,WAAY,kBACZC,QAAS,GACT/F,aAAc,KAGhB,4BAAKtW,EAAOQ,MACZ,kBAACuW,GAAA,EAAD,CACExD,QAAQ,SACRzS,KAAK,SACLc,MAAO,CACLiS,OAAQ,IAEVjP,QAAS,kBAAM,EAAKoX,OAAOzX,EAAE7D,OAN/B,eAcR,OACE,6BACE,kBAAC,GAAD,KACE,kBAACsU,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKvT,UAAU,0BACb,kBAACwT,GAAA,EAAD,CAAKC,GAAI,IACP,kBAACC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,0CAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACGjU,EAAW4M,OAAS,EACnB,kBAACkO,GAAA,EAAD,KAAW9a,GAEX,gEAEF,6BACA,kBAACkU,GAAA,EAAD,KACE,4BAAQ5T,UAAU,MAAlB,kBACA,kBAAC4T,GAAA,EAAKG,MAAN,CAAYE,UAAU,8BACpB,kBAACL,GAAA,EAAKsF,MAAN,eACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAU,SAAAC,GAAC,OACT,EAAKgX,QAAQ,aAAchX,EAAEC,OAAOpB,QAEtCsS,GAAG,UAEFzU,IAGL,kBAACqU,GAAA,EAAKG,MAAN,CAAYE,UAAU,oBACpB,kBAACL,GAAA,EAAKsF,MAAN,cACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAUO,KAAKiX,YACfhb,KAAK,OACL2D,YAAY,QACZ6X,OAAO,aAGX,kBAACvF,GAAA,EAAD,CACEnS,QAASC,KAAKyW,IACdI,OAAK,EACLnI,QAAQ,UACRzS,KAAK,UAEJ+D,KAAKhE,MAAMua,SACV,kBAAC/H,GAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YAEpC,oBAShB,kBAAC,EAAD,Y,GAhIcjR,aAsITkR,eACbxB,GACAC,GAFauB,CAGb1O,YAAW8W,KC5JPW,I,OAAwB,SAAA1b,GAC5B,OAAOA,EAAMD,gBAET4b,GAA2B,SAAAtK,GAC/B,MAAO,CACLC,YAAa,SAAArM,GAAI,OACfoM,EAAS,CACPpR,KAAMhB,EACNiB,QAAS+E,KAEbwM,oBAAqB,SAAAhS,GAAa,OAChC4R,EAAS,CACPpR,KAAMhB,EACNiB,QAAST,KAEbiS,mBAAoB,SAAAtS,GAAY,OAC9BiS,EAAS,CACPpR,KAAMhB,EACNiB,QAASd,KAEbuS,cAAe,SAAAtS,GAAO,OACpBgS,EAAS,CAAEpR,KAAMhB,EAAkCiB,QAASb,KAC9DuS,gBAAiB,SAAAtS,GAAS,OACxB+R,EAAS,CACPpR,KAAMhB,EACNiB,QAASZ,KAEbsc,iBAAkB,SAAArc,GAAU,OAC1B8R,EAAS,CACPpR,KAAMhB,EACNiB,QAASX,KAEbsc,aAAc,SAAArc,GAAM,OAClB6R,EAAS,CAAEpR,KAAMhB,EAAiCiB,QAASV,KAC7Dsc,yBAA0B,SAAAC,GAAU,OAClC1K,EAAS,CACPpR,KAAMhB,EACNiB,QAAS6b,OCzBXhK,G,2MACJ/R,MAAQ,CACNJ,MAAO,GACPkF,SAAU,GACVkX,WAAY,GACZC,aAAa,EACbC,YAAY,EACZC,MAAO,I,EAETC,eAAiB,WACf,EAAK5Z,SAAS,CACZyZ,aAAc,EAAKjc,MAAMic,e,EAG7BI,aAAe,SAAA3Y,GACb,EAAKlB,SAAL,eACGkB,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOpB,S,EAG9B+Z,sBAAwB,oBAAA5Z,EAAAC,OAAA,kEAAAD,EAAA,MACIgE,GAASuJ,oBAAoB,EAAKjQ,MAAMJ,QAD5C,oDAAA8C,EAAA,MAGdgE,GAASgJ,eAAe,EAAK1P,MAAMgc,aAHrB,OAIpB5Y,MACE,uEALkB,uBAQpBA,MAAM,mDARc,uC,EAWxBmZ,cAAgB,0BAAA7Z,EAAAC,OAAA,kEAAAD,EAAA,MACSgE,GAAS0G,uBADlB,OAEW,gBADnBnH,EADQ,QAED5D,SACX,EAAKgB,MAAMiO,YAAYrL,EAASuH,QAChCyD,GAAUhL,EAASuH,QACnB0E,OAAOC,SAASC,WAEhB,EAAK/O,MAAMyY,yBAAyB,CAClCnc,KAAMsG,EAASuH,OAAOgP,YACtB5c,MAAOqG,EAASuH,OAAO5N,MACvBC,IAAKoG,EAASuH,OAAO3N,IACrBC,SAAUmG,EAASuH,OAAOiP,WAE5B,EAAKpZ,MAAMC,QAAQC,KAAK,2BAbZ,sC,EAgBhBmZ,YAAc,0BAAAha,EAAAC,OAAA,kEAAAD,EAAA,MACWgE,GAAS+G,qBADpB,OAEa,gBADnBxH,EADM,QAEC5D,SACX,EAAKgB,MAAMiO,YAAYrL,EAASuH,QAChCyD,GAAUhL,EAASuH,QACnB0E,OAAOC,SAASC,WAEhB,EAAK/O,MAAMyY,yBAAyB,CAClCnc,KAAMsG,EAASuH,OAAOgP,YACtB5c,MAAOqG,EAASuH,OAAO5N,MACvBC,IAAKoG,EAASuH,OAAO3N,IACrBC,SAAUmG,EAASuH,OAAOiP,WAE5B,EAAKpZ,MAAMC,QAAQC,KAAK,2BAbd,sC,EAgBdoD,MAAQ,0BAAAjE,EAAAC,OAAA,kEAAAD,EAAA,MACagE,GAAS4D,YAC1B,EAAKtK,MAAMJ,MACX,EAAKI,MAAM8E,WAHP,QACAG,EADA,SAMJ,EAAK5B,MAAMiO,YAAYrM,GACvBgM,GAAUhM,GAEViN,OAAOC,SAASC,UAEhBhP,MAAM,sBAXF,sC,wEAeN,OACE,kBAAC+Q,GAAA,EAAD,CAAWwI,OAAK,GACd,kBAACvI,GAAA,EAAD,CAAKrT,MAAO,CAAE6b,UAAW,UACvB,kBAACvI,GAAA,EAAD,CACEC,GAAG,KACHgE,GAAG,IACHzX,UAAU,mBACVE,MAAO,CACLwa,WAAY,QACZsB,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,yBACEhc,MAAO,CAAEC,MAAO,MAAOqR,UAAW,WAClCpR,IAAKC,OAGT,kBAACmT,GAAA,EAAD,CACEC,GAAG,KACHgE,GAAG,IACHvX,MAAO,CACLwa,WAAY,UACZsB,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,kBAACtI,GAAA,EAAD,CACE1T,MAAO,CACLwa,WAAY,OACZC,QAAS,GACT/F,aAAc,EACdzU,MAAO,QAGT,4BAAQD,MAAO,CAAEic,aAAc,GAAIC,UAAW,WAA9C,gCAGA,kBAACxI,GAAA,EAAKG,MAAN,CAAYE,UAAU,kBACpB,kBAACL,GAAA,EAAKsF,MAAN,sBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,QACL8D,SAAUO,KAAKqY,aACfpc,KAAK,QACL2D,YAAY,iBAIhB,kBAAC6Q,GAAA,EAAKG,MAAN,CACE7T,MAAO,CAAEic,aAAc,IACvBlI,UAAU,qBAEV,kBAACL,GAAA,EAAKsF,MAAN,iBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,WACL8D,SAAUO,KAAKqY,aACfpc,KAAK,WACL2D,YAAY,cAGhB,kBAACsS,GAAA,EAAD,CACEnS,QAASC,KAAK2C,MACdkU,OAAK,EACLnI,QAAQ,UACRzS,KAAK,UAJP,SAgBA,uBAAG8D,QAASC,KAAKoY,eAAgBvb,UAAU,eAA3C,yBAGA,kBAACuT,GAAA,EAAD,CAAKvT,UAAU,eAAeE,MAAO,CAAEmc,UAAW,KAChD,kBAAC7I,GAAA,EAAD,CAAKC,GAAG,KACN,8BAEF,kBAACD,GAAA,EAAD,CAAKC,GAAG,IAAIzT,UAAU,0BAAtB,MAGA,kBAACwT,GAAA,EAAD,CAAKC,GAAG,KACN,+BAGJ,kBAACF,GAAA,EAAD,CAAKrT,MAAO,CAAEmc,UAAW,KACvB,kBAAC7I,GAAA,EAAD,KACE,kBAAC6B,GAAA,EAAD,CACEnS,QAASC,KAAKuY,cACd1B,OAAK,EACLha,UAAU,uBACVZ,KAAK,UAJP,mBASF,kBAACoU,GAAA,EAAD,KACE,kBAAC6B,GAAA,EAAD,CACEnS,QAASC,KAAK0Y,YACd7B,OAAK,EACLha,UAAU,oBACVZ,KAAK,UAJP,kBAUJ,wBAAIc,MAAO,CAAEmc,UAAW,GAAIF,aAAc,MAC1C,uBAAGnc,UAAU,eAAb,yBACyB,IACvB,kBAAC,IAAD,CAAMC,GAAG,oBAAT,8BAKR,kBAAC8X,GAAA,EAAD,CACEI,KAAMhV,KAAKhE,MAAMic,YACjBpD,KAAK,KACLI,OAAQjV,KAAKoY,eACbtD,kBAAgB,gCAChBC,UAAQ,GAER,kBAACH,GAAA,EAAMhG,OAAP,KACE,qDAEF,kBAACgG,GAAA,EAAMpE,KAAP,KACE,kBAACC,GAAA,EAAKG,MAAN,CAAYE,UAAU,kBACpB,kBAACL,GAAA,EAAKsF,MAAN,sBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,aACL8D,SAAUO,KAAKqY,aACfpc,KAAK,QACLsC,MAAOyB,KAAKhE,MAAMgc,WAClBpY,YAAY,kBAIlB,kBAACgV,GAAA,EAAMlX,OAAP,KACE,kBAACwU,GAAA,EAAD,CAAQnS,QAASC,KAAKsY,uBAAtB,2BAGA,kBAACpG,GAAA,EAAD,CAAQxD,QAAQ,SAAS3O,QAASC,KAAKoY,gBAAvC,gB,GAjOQ3a,aA0OLkR,eACb+I,GACAC,GAFahJ,CAGb1O,YAAW8N,KC/OPoL,I,kNACJ1L,oBAAsB,SAAOjF,EAAkB4Q,GAAzB,SAAA1a,EAAAC,OAAA,kEAAAD,EAAA,MACdgE,GAAS6F,uBACb,EAAKlJ,MAAMlE,OAAOU,IAClB2M,IAHkB,OAKpB,EAAKnJ,MAAMC,QAAQC,KAAK6Z,GALJ,sC,EAOtB7W,OAAS,oBAAA7D,EAAAC,OAAA,kEAAAD,EAAA,MACDgE,GAASH,UADR,OAEP2K,KACA,EAAK7N,MAAMiO,YAAY,MACvB,EAAKjO,MAAMC,QAAQC,KAAK,YAJjB,sC,wEAMC,IAAD,OACP,OACE,6BACE,yBAAK1C,UAAU,2DACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,YAChC,yBAAKC,MAAO,CAAEC,MAAO,QAAUC,IAAKC,OAEtC,4BACEL,UAAU,iBACVZ,KAAK,SACLkB,cAAY,WACZC,cAAY,kBACZC,gBAAc,iBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMV,UAAU,0BAGlB,yBAAKA,UAAU,2BAA2BW,GAAG,kBAC3C,wBACEX,UAAU,mDACVW,GAAG,gBAEH,wBAAIX,UAAU,mBACZ,yBAAKA,UAAU,+BACb,kBAAC,IAAD,CACEA,UAAU,mDACVC,GAAG,YAEH,yBAAKC,MAAO,CAAEC,MAAO,OAASC,IAAKC,QAGvC,yBAAKL,UAAU,QACb,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,6BAC5B,0BAAMA,UAAU,QAAhB,aACA,yBAAKA,UAAU,SAGa,gBAA/BmD,KAAKX,MAAMlE,OAAO0L,UACY,UAA/B7G,KAAKX,MAAMlE,OAAO0L,SAChB,wBAAIhK,UAAU,YACZ,kBAAC,IAAD,CACEC,GAAG,eACHD,UAAU,6BAEV,0BAAMA,UAAU,QAAhB,QACA,yBAAKA,UAAU,SAGjB,KACJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CACEC,GAAG,mBACHD,UAAU,6BAEV,0BAAMA,UAAU,QAAhB,yBACA,yBAAKA,UAAU,SAGnB,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CACEC,GAAG,eACHD,UAAU,6BAEV,0BAAMA,UAAU,QAAhB,qBACA,yBAAKA,UAAU,SAGnB,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CACEC,GAAG,kBACHD,UAAU,6BAEV,0BAAMA,UAAU,QAAhB,qBACA,yBAAKA,UAAU,SAGnB,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CACEC,GAAG,kBACHD,UAAU,6BAEV,0BAAMA,UAAU,QAAhB,mBACA,yBAAKA,UAAU,SAGnB,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CACEkD,QAASC,KAAKuC,OACd1F,UAAU,6BAEV,0BAAMA,UAAU,QAAhB,UACA,yBAAKA,UAAU,YAMzB,0BAAMA,UAAU,qCAChB,yBAAKA,UAAU,iCACb,kBAACgS,GAAA,EAAD,KACE,kBAACA,GAAA,EAASI,OAAV,CACElS,MAAO,CAAEC,MAAO,IAChB0R,QAAQ,OACRlR,GAAG,kBAEH,yBACET,MAAO,CACLC,MAAO,OACPqR,UAAW,QACXC,OAAQ,OACRmD,aAAc,OACd4H,OAAQ,qBAEVpc,IACE+C,KAAKX,MAAMlE,OAAOiM,UACdpH,KAAKX,MAAMlE,OAAOiM,UAClB,kGAGR,kBAAC8H,GAAA,EAAD,CACEnS,MAAO,CACLuc,SAAU,WACVC,IAAK,EACLC,KAAM,GACNlL,OAAQ,GACRtR,MAAO,GACPyU,aAAc,GACd8F,WAAY,UACZkC,MAAO,OACPC,WAAY,QAEdvK,MAAI,GAEHnP,KAAKX,MAAM5D,cAAc0N,SAI9B,kBAAC0F,GAAA,EAASO,KAAV,KACuC,IAApCpP,KAAKX,MAAM5D,cAAc0N,OACxB,kBAAC0F,GAAA,EAASC,KAAV,yBAEA9O,KAAKX,MAAM5D,cAAcwH,KAAI,SAAA4M,GAAO,OAClC,kBAAChB,GAAA,EAASC,KAAV,CACE/O,QAAS,oBAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACD,EAAK+O,oBACToC,EAAQrH,iBACR,aAHK,+EAORqH,EAAQxR,iBASzB,0BAAMxB,UAAU,0BACd,yBAAKA,UAAU,aAAamD,KAAKX,MAAMgQ,gB,GAjLrB5R,cAuLbwC,eACb0O,YAAQ+I,GAAuBC,GAA/BhJ,CAAyDwK,K,4BCxK5CQ,I,OA5BE,SAAAC,GACf,OAAQA,GACN,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,EACH,MAAO,MACT,KAAK,GACH,MAAO,MACT,KAAK,GACH,MAAO,SCeP/b,G,2MACJ7B,MAAQ,CACN6M,UAAW,EACXgR,eAAgB,EAChBC,SAAU,EACVC,eAAgB,EAChBC,qBAAqB,EACrBC,YAAa,GACbC,mBAAoB,GACpBC,yBAA0B,EAC1BC,aAAc,KACdC,gBAAiB,GACjBC,gBAAiB,GACjBC,kBAAkB,EAClB9O,oBAAqB,GACrB+O,YAAa,GACbC,eAAe,G,EAEjB9P,QAAU,0BAAAjM,EAAAC,OAAA,kEAAAD,EAAA,MACFgE,GAASiI,QACb,EAAKtL,MAAMlE,OAAOU,IAClB,EAAKG,MAAMie,YACX,EAAKje,MAAMke,mBACX,EAAKle,MAAMoe,aACX,EAAKpe,MAAMme,2BANL,yBAAAzb,EAAA,MAQagE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MARlD,OAQFV,EARE,OASR,EAAKkE,MAAMiO,YAAYnS,GACvB8R,GAAU9R,GACV+S,OAAOC,SAASC,SAXR,sC,EAaVnD,gBAAkB,0BAAAvM,EAAAC,OAAA,kEAAAD,EAAA,MACVgE,GAASuI,gBACb,EAAK5L,MAAMlE,OAAOU,IAClB,EAAKG,MAAMse,gBACX,EAAKte,MAAMqe,kBAJG,yBAAA3b,EAAA,MAMKgE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MAN1C,OAMVV,EANU,OAOhB,EAAKkE,MAAMiO,YAAYnS,GACvB8R,GAAU9R,GACV+S,OAAOC,SAASC,SATA,sC,EAWlBsM,uBAAyB,WACvB,EAAKlc,SAAS,CACZwb,qBAAsB,EAAKhe,MAAMge,uB,EAGrCW,wBAA0B,WACxB,EAAKnc,SAAS,CACZic,eAAgB,EAAKze,MAAMye,iB,EAG/BrP,KAAO,SAAON,EAAUK,EAAe5M,GAAhC,eAAAG,EAAAC,OAAA,kEAAAD,EAAA,MACCgE,GAAS4I,uBACb,EAAKjM,MAAMlE,OAAOU,IAClBiP,EACAK,EACA5M,IALG,yBAAAG,EAAA,MAOgBgE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MAPrD,OAOCV,EAPD,OAQL8R,GAAU9R,GACV,EAAKkE,MAAMiO,YAAYnS,GATlB,sC,EAWPgc,OAAS,SAAOrM,EAAUK,GAAjB,eAAAzM,EAAAC,OAAA,kEAAAD,EAAA,MACDgE,GAAS6I,mBACb,EAAKlM,MAAMlE,OAAOU,IAClBiP,EACAK,IAJK,yBAAAzM,EAAA,MAMcgE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MANnD,OAMDV,EANC,OAOP8R,GAAU9R,GACV,EAAKkE,MAAMiO,YAAYnS,GARhB,sC,EAUTqQ,WAAa,SAAMV,GAAN,eAAApM,EAAAC,OAAA,kEAAAD,EAAA,MACLgE,GAAS8I,WAAW,EAAKnM,MAAMlE,OAAOU,IAAKiP,IADtC,yBAAApM,EAAA,MAEUgE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MAF/C,OAELV,EAFK,OAGX8R,GAAU9R,GACV,EAAKkE,MAAMiO,YAAYnS,GAJZ,sC,EAMbyf,2BAA6B,WAC3B,EAAKpc,SAAS,CACZ+b,kBAAmB,EAAKve,MAAMue,oB,EAGlC9O,oBAAsB,0BAAA/M,EAAAC,OAAA,kEAAAD,EAAA,MACdgE,GAAS+I,oBACb,EAAKpM,MAAMlE,OAAOU,IAClB,EAAKG,MAAMwe,YACX,EAAKxe,MAAMyP,sBAJO,yBAAA/M,EAAA,MAMCgE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MANtC,OAMdV,EANc,OAOpB8R,GAAU9R,GACV,EAAKkE,MAAMiO,YAAYnS,GACvB+S,OAAOC,SAASC,SATI,sC,EAWtBuE,kBAAoB,WAClB,EAAKnU,SAAS,CACZqK,UAAW,EAAKxJ,MAAMlE,OAAOyN,aACzB,EAAKvJ,MAAMlE,OAAOyN,aAAaC,UAC/B,EACJgR,eAAgB,EAAKxa,MAAMlE,OAAOyN,aAC9B,EAAKvJ,MAAMlE,OAAOyN,aAAa6B,iBAC/B,EACJqP,SAAU,EAAKza,MAAMlE,OAAOyN,aACxB,EAAKvJ,MAAMlE,OAAOyN,aAAa8B,UAC/B,K,EAGRmQ,oBAAsB,0BAAAnc,EAAAC,OAAA,kEAAAD,EAAA,MACdgE,GAAS4C,eACZ,EAAKjG,MAAMlE,OAAOqK,kBACnB,EAAKnG,MAAMlE,OAAOU,MAHA,yBAAA6C,EAAA,MAKCgE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MALtC,OAKdV,EALc,OAMpB,EAAKkE,MAAMiO,YAAYnS,GACvB8R,GAAU9R,GAPU,sC,EAStB2f,YAAc,0BAAApc,EAAAC,OAAA,kEAAAD,EAAA,MACNgE,GAASgG,uBACb,EAAKrJ,MAAMlE,OAAOU,KACjB,EAAKwD,MAAMlE,OAAOqM,QAHT,yBAAA9I,EAAA,MAKSgE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MAL9C,OAKNV,EALM,OAMZ,EAAKkE,MAAMiO,YAAYnS,GACvB8R,GAAU9R,GAPE,sC,EASd4f,uBAAyB,SAAArb,GACvB,IAAMgQ,EAAO,IAAIC,KACXqL,EAAuB,EAAK3b,MAAMjE,aAAayM,QACnD,SAAAnI,GAAC,OACCA,EAAEgQ,OACFiK,GAASjK,EAAKiK,YACZ,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,iBAEPvb,EAAEC,OAAOpB,MAAQyc,EAAqB7R,QACxC/J,MACE,0DACE4b,EAAqB7R,QAEzB,EAAK3K,SAAS,CACZqK,UAAW,EAAKxJ,MAAMlE,OAAOyN,aACzB,EAAKvJ,MAAMlE,OAAOyN,aAAaC,UAC/B,KAGN,EAAKrK,SAAS,CACZqK,UAAWnJ,EAAEC,OAAOpB,S,EAI1B2c,uBAAyB,0BAAAxc,EAAAC,OAAA,kEAAAD,EAAA,MACjBgE,GAASiG,gBAAgB,EAAKtJ,MAAMlE,OAAOU,IAAK,EAAKG,MAAM6M,YAD1C,yBAAAnK,EAAA,MAEFgE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MAFnC,OAEjBV,EAFiB,OAGvB,EAAKkE,MAAMiO,YAAYnS,GACvB8R,GAAU9R,GAJa,sC,EAMzBggB,aAAe,0BAAAzc,EAAAC,OAAA,kEAAAD,EAAA,MACPgE,GAAS8H,oBACb,EAAKnL,MAAMlE,OAAOU,IAClB,EAAKG,MAAM6M,UACX,EAAK7M,MAAM6d,eACX,EAAK7d,MAAM8d,WALA,yBAAApb,EAAA,MAOQgE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MAP7C,OAOPV,EAPO,OAQb,EAAKkE,MAAMiO,YAAYnS,GACvB8R,GAAU9R,GACV+S,OAAOC,SAASC,SAVH,sC,EAYf/C,2BAA6B,0BAAA3M,EAAAC,OAAA,kEAAAD,EAAA,MACrBgE,GAAS2I,2BACb,EAAKhM,MAAMlE,OAAOU,IAClB,EAAKG,MAAM+d,iBAHc,yBAAArb,EAAA,MAKNgE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MAL/B,OAKrBV,EALqB,OAM3B,EAAKkE,MAAMiO,YAAYnS,GACvB8R,GAAU9R,GACV+S,OAAOC,SAASC,SARW,sC,EAU7BiK,aAAe,SAAC1c,EAAM4C,GACpB,EAAKC,SAAL,eACG7C,EAAO4C,K,EAGZmY,QAAU,SAAAhX,GACR,EAAKlB,SAAL,eACGkB,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOpB,S,EAG9B6c,YAAc,SAAA1b,GACZ,EAAKlB,SAAL,eACGkB,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOuX,MAAM,M,wEAG1B,IAAD,OACDxH,EAAO,IAAIC,KAEX0L,EAAoB,CACxB1f,KACEge,GAASjK,EAAKiK,YACd,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,cACP7f,aAAc4E,KAAKX,MAAMjE,aAAayM,QACpC,SAAAnI,GAAC,OACCA,EAAEgQ,OACFiK,GAASjK,EAAKiK,YACZ,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,iBACT9R,QAEJuG,EAAK8C,QAAQ9C,EAAK+C,UAAY,GAC9B,IAAM6I,EAAwB,CAC5B3f,KACEge,GAASjK,EAAKiK,YACd,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,cACP7f,aAAc4E,KAAKX,MAAMjE,aAAayM,QACpC,SAAAnI,GAAC,OACCA,EAAEgQ,OACFiK,GAASjK,EAAKiK,YACZ,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,iBACT9R,QAEJuG,EAAK8C,QAAQ9C,EAAK+C,UAAY,GAC9B,IAAM8I,EAAyB,CAC7B5f,KACEge,GAASjK,EAAKiK,YACd,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,cACP7f,aAAc4E,KAAKX,MAAMjE,aAAayM,QACpC,SAAAnI,GAAC,OACCA,EAAEgQ,OACFiK,GAASjK,EAAKiK,YACZ,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,iBACT9R,QAEJuG,EAAK8C,QAAQ9C,EAAK+C,UAAY,GAC9B,IAAM+I,EAAyB,CAC7B7f,KACEge,GAASjK,EAAKiK,YACd,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,cACP7f,aAAc4E,KAAKX,MAAMjE,aAAayM,QACpC,SAAAnI,GAAC,OACCA,EAAEgQ,OACFiK,GAASjK,EAAKiK,YACZ,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,iBACT9R,QAEJuG,EAAK8C,QAAQ9C,EAAK+C,UAAY,GAC9B,IAAMgJ,EAAyB,CAC7B9f,KACEge,GAASjK,EAAKiK,YACd,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,cACP7f,aAAc4E,KAAKX,MAAMjE,aAAayM,QACpC,SAAAnI,GAAC,OACCA,EAAEgQ,OACFiK,GAASjK,EAAKiK,YACZ,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,iBACT9R,QAEJuG,EAAK8C,QAAQ9C,EAAK+C,UAAY,GAC9B,IAAMiJ,EAAyB,CAC7B/f,KACEge,GAASjK,EAAKiK,YACd,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,cACP7f,aAAc4E,KAAKX,MAAMjE,aAAayM,QACpC,SAAAnI,GAAC,OACCA,EAAEgQ,OACFiK,GAASjK,EAAKiK,YACZ,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,iBACT9R,QAEJuG,EAAK8C,QAAQ9C,EAAK+C,UAAY,GAC9B,IAiBM/O,EAAO,CACX2X,EACAC,EACAC,EACAC,EACAC,EACAC,EAvB6B,CAC7B/f,KACEge,GAASjK,EAAKiK,YACd,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,cACP7f,aAAc4E,KAAKX,MAAMjE,aAAayM,QACpC,SAAAnI,GAAC,OACCA,EAAEgQ,OACFiK,GAASjK,EAAKiK,YACZ,IACAjK,EAAK+C,UACL,KACA/C,EAAKuL,iBACT9R,SAWEwS,EAAW,IAAIhM,KACfiM,EAAmB5b,KAAKX,MAAMjE,aAAayM,QAAO,SAAAnI,GAEtD,OADAmM,QAAQC,IAAIpM,GAEVA,EAAEgQ,OACFiK,GAASgC,EAAShC,YAChB,IACAgC,EAASlJ,UACT,KACAkJ,EAASV,iBAGXY,EAAQ,GAEqB,iBAA/B7b,KAAKX,MAAMlE,OAAO0L,UAClB7G,KAAKX,MAAMlE,OAAOyN,eAElBiT,EAAQ9Y,OAAOC,KAAKhD,KAAKX,MAAMlE,OAAOyN,cAAc3F,KAAI,SAAA4M,GACtD,IAAI7E,EAAa,GAmBjB,OAlBI,EAAK3L,MAAMlE,OAAOyN,aAAaiH,GAAS7E,aAC1CA,EAAajI,OAAOC,KAClB,EAAK3D,MAAMlE,OAAOyN,aAAaiH,GAAS7E,YACxC/H,KAAI,SAAA6Y,GACJ,IAAMC,EAAaH,EAAiBzP,MAAK,SAAA6P,GACvC,OACEA,EAASC,kBACP,EAAK5c,MAAMlE,OAAOyN,aAAaiH,GAASlU,MAC1CqgB,EAAStI,OACP,EAAKrU,MAAMlE,OAAOyN,aAAaiH,GAASiM,GAAG5Q,aAGjD,OAAO,eACF,EAAK7L,MAAMlE,OAAOyN,aAAaiH,GAAS7E,WAAW8Q,GADxD,CAEEC,mBAIC,eACF,EAAK1c,MAAMlE,OAAOyN,aAAaiH,GADpC,CAEE7E,mBAIN,IAAMuI,EAAuBqI,EAAiB3Y,KAAI,SAAAvD,GAChD,IAAMqT,EAAW,EAAK1T,MAAM/D,UAAU6Q,MAAK,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQ6D,EAAEuT,gBAC5D,OACE,4BACE,4BACE,yBACElW,MAAO,CACLC,MAAO,GACPsR,OAAQ,GACRmD,aAAc,GACdpD,UAAW,SAEbpR,IACE8V,GAAYA,EAAS3L,UACjB2L,EAAS3L,UACT,0GAIV,wBAAI8U,QAAQ,KACV,mDAAiC,IAChCnJ,EAASpX,KAAOoX,EAASpX,KAAO,4BACjC,6BACA,sDAJF,IAIuC+D,EAAEgU,KACvC,6BACA,yDANF,IAM0ChU,EAAEiU,SAC1C,6BACA,sDAAoC,IACnCC,KAAKC,MAAM/K,OAAOpJ,EAAEiU,SAAW,IAAM,EACtC,6BACA,2DAXF,IAW4CjU,EAAE+T,OAC5C,6BACA,2DAbF,IAa4CV,EAAS/L,OACnD,6BACA,oDAfF,IAeqC+L,EAASnX,MAC5C,kCAKR,OACE,6BACE,kBAAC,GAAD,KACE,kBAACuU,GAAA,EAAD,CAAWwI,OAAK,GACd,kBAACvI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KAAKvT,MAAO,CAAEya,QAAS,KAC7B,kBAACjH,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,0CAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,wBAAI3T,UAAU,QAAd,qBACgC,gBAA/BmD,KAAKX,MAAMlE,OAAO0L,UACY,UAA/B7G,KAAKX,MAAMlE,OAAO0L,SAChB,oCACE,+DACA,kBAACuO,GAAA,EAAD,CAAYvY,UAAU,QACpB,kBAAC0Y,GAAA,EAAD,CACE3V,YAAY,0CACZ3D,KAAK,SACLsB,aAAW,uBACXsC,mBAAiB,eACjBtB,MAAOyB,KAAKhE,MAAM6M,UAClBpJ,SAAUO,KAAK+a,yBAEjB,kBAAC3F,GAAA,EAAW+G,OAAZ,KACE,kBAACjK,GAAA,EAAD,CACEnS,QAASC,KAAKkb,uBACdxM,QAAQ,WAFV,oBAQJ,kBAAC+B,GAAA,EAAK8D,MAAN,CACEtY,KAAK,SACLuY,QAASxU,KAAKX,MAAMlE,OAAOqK,kBAC3BzF,QAASC,KAAK6a,oBACdhe,UAAU,YACVW,GAAG,gBACHiX,MAAM,iBAGR,KAEJ,kBAAChE,GAAA,EAAK8D,MAAN,CACEtY,KAAK,SACLuY,QAASxU,KAAKX,MAAMlE,OAAOqM,MAC3BzH,QAASC,KAAK8a,YACdje,UAAU,iBACVW,GAAG,iBACHiX,MAAM,sBAEwB,WAA/BzU,KAAKX,MAAMlE,OAAO0L,SACjB,oCACE,uBAAGhK,UAAU,QAAb,2BACA,kBAACuY,GAAA,EAAD,CAAYvY,UAAU,QACpB,kBAAC0Y,GAAA,EAAD,CACE3V,YAAY,0BACZ3D,KAAK,SACLsC,MAAOyB,KAAKhE,MAAM6M,UAClBpJ,SAAU,SAAAC,GAAC,OACT,EAAK2Y,aAAa,YAAa3Y,EAAEC,OAAOpB,UAG5C,kBAAC6W,GAAA,EAAW+G,OAAZ,KACE,kBAACjK,GAAA,EAAD,CACEnS,QAASC,KAAKmb,aACdzM,QAAQ,WAFV,oBAQJ,uBAAG7R,UAAU,QAAb,0BACA,kBAACuY,GAAA,EAAD,CAAYvY,UAAU,QACpB,kBAAC0Y,GAAA,EAAD,CACE3V,YAAY,yBACZ3D,KAAK,SACLsC,MAAOyB,KAAKhE,MAAM6d,eAClBpa,SAAU,SAAAC,GAAC,OACT,EAAK2Y,aACH,iBACA3Y,EAAEC,OAAOpB,UAIf,kBAAC6W,GAAA,EAAW+G,OAAZ,KACE,kBAACjK,GAAA,EAAD,CACEnS,QAASC,KAAKmb,aACdzM,QAAQ,WAFV,oBAQJ,uBAAG7R,UAAU,QAAb,yBACA,kBAACuY,GAAA,EAAD,CAAYvY,UAAU,QACpB,kBAAC0Y,GAAA,EAAD,CACE3V,YAAY,wBACZ3D,KAAK,SACLsC,MAAOyB,KAAKhE,MAAM8d,SAClBra,SAAU,SAAAC,GAAC,OACT,EAAK2Y,aAAa,WAAY3Y,EAAEC,OAAOpB,UAG3C,kBAAC6W,GAAA,EAAW+G,OAAZ,KACE,kBAACjK,GAAA,EAAD,CACEnS,QAASC,KAAKmb,aACdzM,QAAQ,WAFV,qBASJ,KACJ,6BACgC,iBAA/B1O,KAAKX,MAAMlE,OAAO0L,SACjB,oCACE,wBAAIhK,UAAU,QAAd,yBACA,kBAAC0T,GAAA,EAAD,CAAM1T,UAAU,QACd,kBAAC0T,GAAA,EAAKC,KAAN,KACGqL,EAAM5Y,KAAI,SAAAmZ,GACT,OACE,oCACE,kBAAChM,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KACN,4BAAK8L,EAAKzgB,OAEZ,kBAAC0U,GAAA,EAAD,CACEC,GAAG,IACHzT,UAAU,2BAEV,kBAACqV,GAAA,EAAD,CACEnS,QAAS,oBAAArB,EAAAC,OAAA,gDACP,EAAKH,SAAS,CACZiN,oBACE2Q,EAAKxR,iBACP4P,YAAa4B,EAAKtR,WAEpB,EAAK6P,0BANE,sCAQTjM,QAAQ,WATV,QAaA,kBAACwD,GAAA,EAAD,CACErV,UAAU,OACVkD,QAAS,oBAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACD,EAAK8M,WAAW4Q,EAAKtR,WADpB,sCAGT4D,QAAQ,UALV,YAWJ,kBAAC6B,GAAA,EAAD,CAAM1T,UAAU,QACd,kBAAC0T,GAAA,EAAKC,KAAN,KACG4L,EAAKpR,WAAW/H,KAAI,SAAAiI,GAEnB,OADAW,QAAQC,IAAIZ,GAEV,oCACE,kBAACkF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,MACN,kBAACF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,GAAG,IACHzT,UACEqO,EAAU6Q,WACN,iBACA,mBAGL7Q,EAAUA,WAEb,kBAACmF,GAAA,EAAD,CAAKC,GAAG,KACN,kBAACF,GAAA,EAAD,CAAKvT,UAAU,2BACb,kBAACqV,GAAA,EAAD,CACEnS,QAAS,oBAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACD,EAAK0M,KACTgR,EAAKtR,SACLI,EAAUC,eACTD,EAAUE,OAJN,sCAOTvO,UAAU,OACV6R,QACExD,EAAUE,KACN,UACA,UAGLF,EAAUE,KACP,SACA,QAEN,kBAAC8G,GAAA,EAAD,CACEnS,QAAS,oBAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACD,EAAKyY,OACTiF,EAAKtR,SACLI,EAAUC,gBAHL,sCAMTuD,QAAQ,UAPV,eAgBV,iCAIN,kBAAC0B,GAAA,EAAD,CAAKvT,UAAU,2BACb,kBAACqV,GAAA,EAAD,CACEnS,QAAS,WACP,EAAK6a,6BACL,EAAKpc,SAAS,CACZ8b,gBAAiB8B,EAAKtR,YAG1BjO,UAAU,OACV6R,QAAQ,QARV,oBAeN,iCAKN,kBAAC0B,GAAA,EAAD,CAAKvT,UAAU,2BACb,kBAACqV,GAAA,EAAD,CACEnS,QAASC,KAAK0a,uBACd7d,UAAU,OACV6R,QAAQ,QAHV,eAUN,kBAACkG,GAAA,EAAD,CACEI,KAAMhV,KAAKhE,MAAMge,oBACjBnF,KAAK,KACLI,OAAQjV,KAAK0a,uBACb5F,kBAAgB,gCAChBC,UAAQ,GAER,kBAACH,GAAA,EAAMhG,OAAP,CAAcsG,aAAW,GACvB,kBAACN,GAAA,EAAMO,MAAP,CAAa3X,GAAG,iCAAhB,aAIF,kBAACoX,GAAA,EAAMpE,KAAP,KACE,yBAAK3T,UAAU,sEACb,yBACEE,MAAO,CACLC,MAAO,IACPqR,UAAW,QACXC,OAAQ,IACRmD,aAAc,OAEhBxU,IACE+C,KAAKhE,MAAMoe,aACPiC,IAAIC,gBACFtc,KAAKhE,MAAMoe,cAEb,yGAGR,kBAAC3J,GAAA,EAAKG,MAAN,CACE/T,UAAU,OACViU,UAAU,oBAEV,kBAACL,GAAA,EAAKM,QAAN,CACElU,UAAU,kBACVlB,KAAK,eACL8b,OAAO,UACPhY,SAAUO,KAAKob,YACfnf,KAAK,WAIX,kBAACwU,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,kBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAUO,KAAK0W,QACf/a,KAAK,cACL4C,MAAOyB,KAAKhE,MAAMie,YAClBhe,KAAK,OACL2D,YAAY,qBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,yBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAUO,KAAK0W,QACf/a,KAAK,qBACL4C,MAAOyB,KAAKhE,MAAMke,mBAClBrJ,GAAG,WACHjR,YAAY,4BAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,gCACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAUO,KAAK0W,QACf/a,KAAK,2BACL4C,MAAOyB,KAAKhE,MAAMme,yBAClBle,KAAK,SACL2D,YAAY,8BAIlB,kBAACgV,GAAA,EAAMlX,OAAP,KACE,kBAACwU,GAAA,EAAD,CAAQnS,QAASC,KAAK2K,SAAtB,YACA,kBAACuH,GAAA,EAAD,CACExD,QAAQ,SACR3O,QAASC,KAAK0a,wBAFhB,WASJ,kBAAC9F,GAAA,EAAD,CACEI,KAAMhV,KAAKhE,MAAMye,cACjB5F,KAAK,KACLI,OAAQjV,KAAK2a,wBACb7F,kBAAgB,gCAChBC,UAAQ,GAER,kBAACH,GAAA,EAAMhG,OAAP,CAAcsG,aAAW,GACvB,kBAACN,GAAA,EAAMO,MAAP,CAAa3X,GAAG,iCAAhB,cAIF,kBAACoX,GAAA,EAAMpE,KAAP,KACE,kBAACC,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,yBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAUO,KAAK0W,QACf/a,KAAK,sBACL4C,MAAOyB,KAAKhE,MAAMyP,oBAClBoF,GAAG,WACHjR,YAAY,6BAIlB,kBAACgV,GAAA,EAAMlX,OAAP,KACE,kBAACwU,GAAA,EAAD,CAAQnS,QAASC,KAAKyL,qBAAtB,aAGA,kBAACyG,GAAA,EAAD,CACExD,QAAQ,SACR3O,QAASC,KAAK2a,yBAFhB,WAQJ,kBAAC/F,GAAA,EAAD,CACEI,KAAMhV,KAAKhE,MAAMue,iBACjB1F,KAAK,KACLI,OAAQjV,KAAK4a,2BACb9F,kBAAgB,gCAChBC,UAAQ,GAER,kBAACH,GAAA,EAAMhG,OAAP,CAAcsG,aAAW,GACvB,kBAACN,GAAA,EAAMO,MAAP,CAAa3X,GAAG,iCAAhB,uBAIF,kBAACoX,GAAA,EAAMpE,KAAP,KACE,kBAACC,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAAC,KAAD,CACEyL,YAAY,EACZ9c,SAAU,SAAAlB,GAAK,OACb,EAAKC,SAAS,CACZ6b,gBACE9b,GAASA,EAAMie,OAtyBtC,aAyyBiB5c,YAAY,mBACZ/C,UAAU,OACV2f,OA3yBjB,SA4yBiBC,YAAU,EACVC,eAAa,MAInB,kBAAC9H,GAAA,EAAMlX,OAAP,KACE,kBAACwU,GAAA,EAAD,CAAQnS,QAASC,KAAKiL,iBAAtB,YAGA,kBAACiH,GAAA,EAAD,CACExD,QAAQ,SACR3O,QAASC,KAAK4a,4BAFhB,YAUN,oCACE,wBAAI/d,UAAU,QAAd,yBACA,yBAAKA,UAAU,wDACb,kBAAC,KAAD,CAAUG,MAAO,IAAKsR,OAAQ,IAAK5K,KAAMA,GACvC,kBAAC,KAAD,CAAeiZ,gBAAgB,QAC/B,kBAAC,KAAD,CAAOC,QAAQ,SACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAKA,QAAQ,eAAexJ,KAAK,cAGrC,6BACA,wBAAIvW,UAAU,QAAd,wBAEA,kBAACwU,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,GAC7B,+BACE,4BACE,8CACA,wBAAI0K,QAAQ,KAAZ,iBAGJ,+BACG3I,EAAqBpK,OAAS,EAC7BoK,EAEA,2E,GAv1BX9V,aAu2BJkR,eAAQ+I,GAAuBC,GAA/BhJ,CAAyD9Q,I,UC93BlEgf,G,iLACM,IAAD,OACDnN,EAAO,IAAIC,KACXmN,GAAY,IAAInN,MAAO6C,QAAQ9C,EAAK+C,UAAY,GAChDrX,EAAe4E,KAAKX,MAAMjE,aAAayM,QAAO,SAAAgI,GAElD,OADoB,IAAIF,KAAKE,EAAQH,MAChBoN,KAGjBvJ,EAAuB,GAY7B,OAXAnY,EAAaqI,SAAQ,SAAAoM,GACnB,IAAMkD,EAAW,EAAK1T,MAAM/D,UAAU6Q,MACpC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQoD,gBAEzB,GAAIM,EAAqB1D,EAAQH,MAC/B6D,EAAqB1D,EAAQH,MAAMqN,IAAIxd,KAAvC,eAAiDsQ,EAAjD,CAA0DkD,kBACrD,CACL,IAAMgK,EAAM,CAAC,aAAEhK,YAAalD,IAC5B0D,EAAqB1D,EAAQH,MAAQ,CAAEqN,WAIzC,6BACE,kBAAC,GAAD,KACE,kBAAC5M,GAAA,EAAD,CAAWwI,OAAK,GACd,kBAACvI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KAAKvT,MAAO,CAAEya,QAAS,KAC7B,kBAACjH,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,sDAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,kBAACwM,GAAA,EAAD,KACGja,OAAOC,KAAKuQ,GAAsBtQ,KAAI,SAACC,EAAK+Z,GAC3C,IAAMC,EAAU3J,EAAqBrQ,GACrC,OACE,kBAACqN,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,kBAACoO,GAAA,EAAU/N,OAAX,CACE4B,GAAIqB,KACJf,SAAU,GAAK8L,GAEd/Z,EAJH,2BAOF,kBAAC8Z,GAAA,EAAUjL,SAAX,CAAoBZ,SAAU,GAAK8L,GACjC,kBAAC1M,GAAA,EAAKC,KAAN,KACE,kBAACa,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,GAC7B,+BACE,4BACE,8CACA,wBAAI0K,QAAQ,KAAZ,iBAGJ,+BACGgB,EAAQH,IAAI9Z,KAAI,SAAA4M,GACf,OACE,4BACE,4BACE,yBACE9S,MAAO,CACLC,MAAO,GACPsR,OAAQ,GACRmD,aAAc,GACdpD,UAAW,SAEbpR,IACE4S,EAAQkD,SAAS3L,UACbyI,EAAQkD,SAAS3L,UACjB,mGAIV,wBAAI8U,QAAQ,KACV,mDAAiC,IAChCrM,EAAQkD,SAASpX,KAClB,6BACA,oDACoB,KACV,IACTkU,EAAQ6D,KACT,6BACA,uDACuB,KACb,IACT7D,EAAQ8D,SACT,6BACA,oDACoB,KACV,IACTC,KAAKC,MACJ/K,OAAO+G,EAAQ8D,SAAW,IACxB,EACJ,6BACA,yDACyB,KACf,IACT9D,EAAQ4D,OACT,6BACA,yDACyB,KACf,IACT5D,EAAQkD,SAAS/L,OAClB,6BACA,kDACkB,KACR,IACT6I,EAAQkD,SAASnX,MAClB,sD,GA5GT6B,aAmIpBkR,eACb+I,GACAC,GAFahJ,CAGbkO,ICvIIM,G,iLACM,IAAD,OACDzN,EAAO,IAAIC,KACXvU,EAAe4E,KAAKX,MAAMjE,aAAayM,QAAO,SAAAgI,GAElD,OADoB,IAAIF,KAAKE,EAAQH,MAChBA,KAGjB6D,EAAuB,GAY7B,OAXAnY,EAAaqI,SAAQ,SAAAoM,GACnB,IAAMkD,EAAW,EAAK1T,MAAM/D,UAAU6Q,MACpC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQoD,gBAEzB,GAAIM,EAAqB1D,EAAQH,MAC/B6D,EAAqB1D,EAAQH,MAAMqN,IAAIxd,KAAvC,eAAiDsQ,EAAjD,CAA0DkD,kBACrD,CACL,IAAMgK,EAAM,CAAC,aAAEhK,YAAalD,IAC5B0D,EAAqB1D,EAAQH,MAAQ,CAAEqN,WAIzC,6BACE,kBAAC,GAAD,KACE,kBAAC5M,GAAA,EAAD,CAAWwI,OAAK,GACd,kBAACvI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KAAKvT,MAAO,CAAEya,QAAS,KAC7B,kBAACjH,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,sDAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,kBAACwM,GAAA,EAAD,KACGja,OAAOC,KAAKuQ,GAAsBtQ,KAAI,SAACC,EAAK+Z,GAC3C,IAAMC,EAAU3J,EAAqBrQ,GACrC,OACE,kBAACqN,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,kBAACoO,GAAA,EAAU/N,OAAX,CACE4B,GAAIqB,KACJf,SAAU,GAAK8L,GAEd/Z,EAJH,2BAOF,kBAAC8Z,GAAA,EAAUjL,SAAX,CAAoBZ,SAAU,GAAK8L,GACjC,kBAAC1M,GAAA,EAAKC,KAAN,KACE,kBAACa,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,GAC7B,+BACE,4BACE,8CACA,wBAAI0K,QAAQ,KAAZ,iBAGJ,+BACGgB,EAAQH,IAAI9Z,KAAI,SAAA4M,GACf,OACE,4BACE,4BACE,yBACE9S,MAAO,CACLC,MAAO,GACPsR,OAAQ,GACRmD,aAAc,GACdpD,UAAW,SAEbpR,IACE4S,EAAQkD,SAAS3L,UACbyI,EAAQkD,SAAS3L,UACjB,mGAIV,wBAAI8U,QAAQ,KACV,mDAAiC,IAChCrM,EAAQkD,SAASpX,KAClB,6BACA,oDACoB,KACV,IACTkU,EAAQ6D,KACT,6BACA,uDACuB,KACb,IACT7D,EAAQ8D,SACT,6BACA,oDACoB,KACV,IACTC,KAAKC,MACJ/K,OAAO+G,EAAQ8D,SAAW,IACxB,EACJ,6BACA,yDACyB,KACf,IACT9D,EAAQ4D,OACT,6BACA,yDACyB,KACf,IACT5D,EAAQkD,SAAS/L,OAClB,6BACA,kDACkB,KACR,IACT6I,EAAQkD,SAASnX,MAClB,sD,GA3GT6B,aAmIpBkR,eACb+I,GACAC,GAFahJ,CAGbwO,IC9HIC,G,2MACJphB,MAAQ,CACNuT,WAAW,EACXC,eAAgB,GAChBC,QAAS,EACTC,KAAM,IAAIC,KACVhU,KAAM,I,EAERiU,aAAe,SAAM/T,GAAN,SAAA6C,EAAAC,OAAA,gDACb,EAAKU,MAAMC,QAAQC,KAAK,iBAAmB1D,GAD9B,sC,wEAGL,IAAD,OAODwhB,EANUrd,KAAKX,MAAMjD,QAAQyL,QAAO,SAAAgI,GAIxC,OAHkBA,EAAQlU,KACvBmU,cACAC,SAAS,EAAK/T,MAAML,KAAKmU,cAAe,MAGlBjI,QAAO,SAAAgI,GAAO,OAAKA,EAAQhK,eACtD,OACE,6BACE,kBAAC,GAAD,KACE,kBAACsK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKvT,UAAU,0BACb,kBAACwT,GAAA,EAAD,CAAKC,GAAI,IACP,kBAACC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,qDAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,kBAACC,GAAA,EAAKL,IAAN,CAAUrT,MAAO,CAAE2T,WAAY,KAC7B,kBAACD,GAAA,EAAKG,MAAN,CAAYC,GAAIR,KAAKS,UAAU,gBAC7B,kBAACL,GAAA,EAAKM,QAAN,CACEtR,SAAU,SAAAC,GAAC,OACT,EAAKlB,SAAS,CAAE7C,KAAM+D,EAAEC,OAAOpB,SAEjCqB,YAAY,aAIlB,kBAACyR,GAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,YAAU,GAC7B,+BACE,4BACE,qCACA,oCACA,qCACA,iDACA,sCACA,+BAGJ,+BACG6L,EAAWpa,KAAI,SAAA4M,GACd,OACE,oCACE,4BACE,wBACE9P,QAAS,kBAAM,EAAK6P,aAAaC,EAAQhU,OAEzC,yBACEkB,MAAO,CACLC,MAAO,GACPsR,OAAQ,GACRmD,aAAc,GACdpD,UAAW,SAEbpR,IACE4S,EAAQzI,UACJyI,EAAQzI,UACR,gHAIV,4BAAKyI,EAAQlU,MACb,4BAAKkU,EAAQjU,OACb,4BAAKiU,EAAQ1I,iBACb,4BACG0I,EAAQhK,YACP,kBAACqJ,GAAA,EAAD,CAAOR,QAAQ,WAAf,YAEA,kBAACQ,GAAA,EAAD,CAAOR,QAAQ,UAAf,cAGJ,4BACE,kBAACwD,GAAA,EAAD,CACEnS,QAAS,WACP,EAAKvB,SAAS,CACZ+Q,WAAW,EACXC,eAAgBK,EAAQhU,OAG5B6S,QAAQ,UACRmG,KAAK,MARP,uBAuBX,IACb,kBAAC,EAAD,OAEF,kBAACD,GAAA,EAAD,CACEC,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EACRC,KAAMhV,KAAKhE,MAAMuT,UACjB0F,OAAQ,kBAAM,EAAKzW,SAAS,CAAE+Q,WAAW,MAEzC,kBAACqF,GAAA,EAAMhG,OAAP,CAAcsG,aAAW,GACvB,kBAACN,GAAA,EAAMO,MAAP,CAAa3X,GAAG,iCAAhB,wBAIF,kBAACoX,GAAA,EAAMpE,KAAP,KACE,kBAAC4E,GAAA,EAAD,CAAYvY,UAAU,QACpB,kBAACuY,GAAA,EAAWC,QAAZ,KACE,kBAACD,GAAA,EAAWE,KAAZ,CAAiB9X,GAAG,6BAApB,mBAIF,kBAAC+X,GAAA,EAAD,CACEhY,aAAW,UACXsC,mBAAiB,4BACjB5D,KAAK,SACLwD,SAAU,SAAAC,GACR,EAAKlB,SAAS,CACZ6T,UAAW3S,EAAEC,OAAOpB,aAM9B,kBAACqW,GAAA,EAAMlX,OAAP,KACE,kBAACwU,GAAA,EAAD,CACEnS,QAAS,oBAAArB,EAAAC,OAAA,kEAAAD,EAAA,MACDgE,GAASiD,6BACb,EAAK3J,MAAMqW,UACX,EAAKrW,MAAMwT,iBAHN,OAKP,EAAKhR,SAAS,CAAE+Q,WAAW,IALpB,uCADX,UAWA,kBAAC2C,GAAA,EAAD,CACExD,QAAQ,SACR3O,QAAS,kBAAM,EAAKvB,SAAS,CAAE+Q,WAAW,MAF5C,gB,GAzJsB9R,aAqKnBwC,eACb0O,YAAQxB,GAAiBC,GAAzBuB,CAA6CyO,KCrLzCE,G,iLACM,IAAD,OACDpH,EAAkBlW,KAAKX,MAAMhE,QAAQ4H,KAAI,SAAA4M,GAC7C,IAAMkD,EAAW,EAAK1T,MAAM/D,UAAU6Q,MACpC,SAAA6G,GAAC,OAAIA,EAAEnX,MAAQgU,EAAQoD,gBAGnBE,EAAQ,CACZ,eACA,eACA,eACA,eACA,gBAGF,OADAA,EAAMC,KAAK,OAAQ,EAAGvD,EAAQwD,QAE5B,oCACE,kBAACU,GAAA,EAAD,CAAOlD,GAAG,MACR,yBACE7T,MAAO,GACPsR,OAAQ,GACRzR,UAAU,OACVE,MAAO,CAAEsR,UAAW,QAASoD,aAAc,OAC3CxU,IACE8V,EAAS3L,UACL2L,EAAS3L,UACT,6GAEN4M,IAAI,wBAEN,kBAACD,GAAA,EAAMvD,KAAP,KACE,wBAAIzT,MAAO,CAAE2c,WAAY,SAAW3G,EAASpX,MAC7C,kBAACyU,GAAA,EAAD,CAAKvT,UAAU,oBACZsW,EAAMlQ,KAAI,SAAAyR,GACT,OAAO,8BAAU/Y,KAAM+Y,QAG3B,2BAAI7E,EAAQ8E,WAGhB,iCAIN,OACE,6BACE,kBAAC,GAAD,KACE,kBAACxE,GAAA,EAAD,CAAWwI,OAAK,GACd,kBAACvI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KAAKvT,MAAO,CAAEya,QAAS,KAC7B,kBAACjH,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,kDAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,wBAAI3T,UAAU,sBACXqZ,EAAgB/M,OAAS,EACxB+M,EAEA,qE,GA3DFzY,aAwEPkR,eACb+I,GACAC,GAFahJ,CAGb2O,IClEIlO,I,kNACJpT,MAAQ,CACNuhB,yBAAyB,EACzBC,uBAAuB,EACvBC,0BAA0B,EAC1BC,wBAAwB,EACxBC,gBAAiB,GACjBC,mBAAoB,GACpBC,iBAAkB,GAClBC,aAAc,KACdC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,EACdC,mBAAoB,GACpB5T,gBAAiB,KACjB6T,mBAAoB,GACpBC,eAAgB,GAChBC,mBAAoB,GACpBC,gBAAiB,EACjBC,sBAAuB,GACvBC,cAAe,I,EAEjB7L,kBAAoB,WAClB,EAAKnU,SAAS,CACZwf,gBAAiB,EAAK3e,MAAM9D,WAAW,GACnC,EAAK8D,MAAM9D,WAAW,GAAGsL,SACzB,M,EAGRwR,aAAe,SAAA3Y,GACb,EAAKlB,SAAL,eACGkB,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOpB,S,EAG9BkgB,sBAAwB,WACtB,EAAKjgB,SAAS,CACZ+e,yBAA0B,EAAKvhB,MAAMuhB,2B,EAGzCmB,oBAAsB,WACpB,EAAKlgB,SAAS,CACZgf,uBAAwB,EAAKxhB,MAAMwhB,yB,EAGvCmB,uBAAyB,WACvB,EAAKngB,SAAS,CACZif,0BAA2B,EAAKzhB,MAAMyhB,4B,EAG1CmB,qBAAuB,WACrB,EAAKpgB,SAAS,CACZkf,wBAAyB,EAAK1hB,MAAM0hB,0B,EAGxC9T,YAAc,oBAAAlL,EAAAC,OAAA,kEAAAD,EAAA,MACNgE,GAASkH,YACb,EAAK5N,MAAM2hB,gBACX,EAAKte,MAAMlE,OAAOU,MAHR,OAKZ,EAAK4iB,wBACLvQ,OAAOC,SAASC,SANJ,sC,EAQdrE,eAAiB,oBAAArL,EAAAC,OAAA,kEAAAD,EAAA,MACTgE,GAASqH,eACb,EAAK/N,MAAM6hB,iBACX,EAAK7hB,MAAM4hB,mBACX,EAAKve,MAAMlE,OAAOU,MAJL,OAMf,EAAK8iB,yBACLzQ,OAAOC,SAASC,SAPD,sC,EASjBtE,eAAiB,SAAMD,GAAN,SAAAnL,EAAAC,OAAA,kEAAAD,EAAA,MACTgE,GAASoH,eAAeD,EAAc,EAAKxK,MAAMlE,OAAOU,MAD/C,OAEfqS,OAAOC,SAASC,SAFD,sC,EAIjB/D,WAAa,SAAMF,GAAN,SAAAzL,EAAAC,OAAA,kEAAAD,EAAA,MACLgE,GAAS2H,WAAWF,IADf,OAEX+D,OAAOC,SAASC,SAFL,sC,EAIbyQ,iBAAmB,SAAAnf,GACjBmM,QAAQC,IAAIpM,EAAEC,OAAOuX,MAAM,IAC3B,EAAK1Y,SAAL,eACGkB,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOuX,MAAM,M,EAGpC4H,qBAAuB,SAAApf,GACrB,EAAKlB,SACH,CACE8L,gBAAiB5K,EAAEC,OAAOuX,MAAM,KAElC,oBAAAxY,EAAAC,OAAA,kEAAAD,EAAA,MACQgE,GAAS4H,gBACb,EAAKtO,MAAMsO,gBACX,EAAKtO,MAAMwiB,gBAHf,yC,EAQJxU,QAAU,oBAAAtL,EAAAC,OAAA,kEAAAD,EAAA,MACFgE,GAASsH,QACb,EAAKhO,MAAM+hB,YACX,EAAK/hB,MAAMgiB,gBACX,EAAKhiB,MAAMkiB,mBACX,EAAKliB,MAAM8hB,aACX,EAAK9hB,MAAMiiB,aACX,EAAK5e,MAAMlE,OAAOU,MAPZ,OASRqS,OAAOC,SAASC,SATR,sC,EAWV7D,WAAa,oBAAA7L,EAAAC,OAAA,kEAAAD,EAAA,MACLgE,GAAS6H,WACb,EAAKvO,MAAMoiB,eACX,EAAKpiB,MAAMqiB,mBACX,EAAKriB,MAAMuiB,sBACX,EAAKviB,MAAMsiB,gBACX,EAAKtiB,MAAMwiB,gBANF,OAQXtQ,OAAOC,SAASC,SARL,sC,wEAUH,IAAD,OACP,OACE,6BACE,kBAAC,GAAD,KACE,kBAAC+B,GAAA,EAAD,CAAWwI,OAAK,GACd,kBAACvI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KAAKvT,MAAO,CAAEya,QAAS,KAC7B,kBAACjH,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,qCAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,kBAACJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KAAKgE,GAAG,KACd,kBAAC/D,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,CAAamQ,WAAS,GACpB,gDAEF,kBAACxO,GAAA,EAAKC,KAAN,KACGxQ,KAAKX,MAAM9D,WAAW0H,KAAI,SAAA4M,GACzB,OACE,oCACE,kBAACO,GAAA,EAAD,CAAKvT,UAAU,+DACb,kBAACwT,GAAA,EAAD,CAAKC,GAAG,KAAKT,EAAQhJ,UACrB,kBAACwJ,GAAA,EAAD,CACEC,GAAG,IACHvQ,QAAS,WACP,EAAKvB,SAAS,CACZof,mBAAoB/N,EAAQhJ,SAC5BgX,iBAAkBhO,EAAQhG,eAE5B,EAAK8U,2BAGP,8BACE9hB,UAAU,YACVlB,KAAK,oBAGT,kBAAC0U,GAAA,EAAD,CACEC,GAAG,IACHvQ,QAAS,kBACP,EAAK+J,eACH+F,EAAQhG,gBAIZ,8BACEhN,UAAU,YACVlB,KAAK,2BAIX,wBAAIkB,UAAU,aAIpB,yBACEkD,QAASC,KAAKye,sBACd5hB,UAAU,yDAEV,8BAAUlB,KAAK,2BAKvB,kBAAC0U,GAAA,EAAD,CAAKC,GAAG,KAAKgE,GAAG,KACd,kBAAC/D,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,CAAamQ,WAAS,GACpB,4CAEF,kBAACxO,GAAA,EAAKC,KAAN,KACGxQ,KAAKX,MAAM7D,OAAOyH,KAAI,SAAA4M,GACrB,OACE,oCACE,kBAACO,GAAA,EAAD,CAAKvT,UAAU,+DACb,kBAACwT,GAAA,EAAD,CAAKC,GAAG,KACN,yBAAKzT,UAAU,mCACb,yBACEE,MAAO,CACLC,MAAO,GACPsR,OAAQ,GACRmD,aAAc,GACdpD,UAAW,SAEbpR,IAAK4S,EAAQzI,YAEf,uBAAGvK,UAAU,aACVgT,EAAQlU,QAIf,kBAAC0U,GAAA,EAAD,CACEC,GAAG,IACHvQ,QAAS,WACP,EAAKvB,SAAS,CACZ6f,mBAAoBxO,EAAQhJ,SAC5ByX,gBAAiBzO,EAAQ3F,MACzBiU,mBAAoBtO,EAAQzI,UAC5BmX,sBACE1O,EAAQ5F,YACVuU,cAAe3O,EAAQ1F,SACvBiU,eAAgBvO,EAAQlU,OAE1B,EAAKijB,yBAGP,8BACE/hB,UAAU,YACVlB,KAAK,oBAGT,kBAAC0U,GAAA,EAAD,CACEC,GAAG,IACHvQ,QAAS,kBACP,EAAKsK,WAAWwF,EAAQ1F,YAG1B,8BACEtN,UAAU,YACVlB,KAAK,2BAIX,wBAAIkB,UAAU,aAIpB,yBACEkD,QAASC,KAAK0e,oBACd7hB,UAAU,yDAEV,8BAAUlB,KAAK,kCAYrC,kBAACiZ,GAAA,EAAD,CACEI,KAAMhV,KAAKhE,MAAMuhB,wBACjB1I,KAAK,KACLI,OAAQjV,KAAKye,sBACb3J,kBAAgB,gCAChBC,UAAQ,GAER,kBAACH,GAAA,EAAMhG,OAAP,CAAcsG,aAAW,GACvB,kBAACN,GAAA,EAAMO,MAAP,CAAa3X,GAAG,iCAAhB,iBAIF,kBAACoX,GAAA,EAAMpE,KAAP,KACE,kBAACC,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,sBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAUO,KAAKqY,aACf1c,KAAK,kBACL4C,MAAOyB,KAAKhE,MAAM2hB,gBAClB1hB,KAAK,OACL2D,YAAY,0BAIlB,kBAACgV,GAAA,EAAMlX,OAAP,KACE,kBAACwU,GAAA,EAAD,CAAQnS,QAASC,KAAK4J,aAAtB,gBACA,kBAACsI,GAAA,EAAD,CAAQxD,QAAQ,SAAS3O,QAASC,KAAKye,uBAAvC,WAKJ,kBAAC7J,GAAA,EAAD,CACEI,KAAMhV,KAAKhE,MAAMyhB,yBACjB5I,KAAK,KACLI,OAAQjV,KAAK2e,uBACb7J,kBAAgB,gCAChBC,UAAQ,GAER,kBAACH,GAAA,EAAMhG,OAAP,CAAcsG,aAAW,GACvB,kBAACN,GAAA,EAAMO,MAAP,CAAa3X,GAAG,iCAAhB,oBAIF,kBAACoX,GAAA,EAAMpE,KAAP,KACE,kBAACC,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,sBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEtR,SAAUO,KAAKqY,aACf1c,KAAK,qBACL4C,MAAOyB,KAAKhE,MAAM4hB,mBAClB3hB,KAAK,OACL2D,YAAY,0BAIlB,kBAACgV,GAAA,EAAMlX,OAAP,KACE,kBAACwU,GAAA,EAAD,CAAQnS,QAASC,KAAK+J,gBAAtB,mBACA,kBAACmI,GAAA,EAAD,CAAQxD,QAAQ,SAAS3O,QAASC,KAAK2e,wBAAvC,WAKJ,kBAAC/J,GAAA,EAAD,CACEI,KAAMhV,KAAKhE,MAAMwhB,sBACjB3I,KAAK,KACLI,OAAQjV,KAAK0e,oBACb5J,kBAAgB,gCAChBC,UAAQ,GAER,kBAACH,GAAA,EAAMhG,OAAP,CAAcsG,aAAW,GACvB,kBAACN,GAAA,EAAMO,MAAP,CAAa3X,GAAG,iCAAhB,aAIF,kBAACoX,GAAA,EAAMpE,KAAP,KACE,yBAAK3T,UAAU,sEACb,yBACEE,MAAO,CACLC,MAAO,IACPqR,UAAW,QACXC,OAAQ,IACRmD,aAAc,OAEhBxU,IACE+C,KAAKhE,MAAM8hB,aACPzB,IAAIC,gBAAgBtc,KAAKhE,MAAM8hB,cAC/B,yGAGR,kBAACrN,GAAA,EAAKG,MAAN,CAAY/T,UAAU,OAAOiU,UAAU,oBACrC,kBAACL,GAAA,EAAKM,QAAN,CACElU,UAAU,kBACVlB,KAAK,eACL8b,OAAO,UACPhY,SAAUO,KAAK6e,iBACf5iB,KAAK,WAKX,kBAACwU,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,kBACA,kBAACtF,GAAA,EAAKM,QAAN,CACExS,MAAOyB,KAAKhE,MAAM+hB,YAClBpiB,KAAK,cACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,qBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,8BACpB,kBAACL,GAAA,EAAKsF,MAAN,iBACA,kBAACtF,GAAA,EAAKM,QAAN,CACExS,MAAOyB,KAAKhE,MAAMgiB,gBAClBriB,KAAK,kBACL8D,SAAUO,KAAKqY,aACfxH,GAAG,UAEF7Q,KAAKX,MAAM9D,WAAW0H,KAAI,SAAC+b,EAAK/B,GAAN,OACzB,4BAAQgC,SAAoB,IAAVhC,EAAa1e,MAAOygB,EAAInY,UACvCmY,EAAInY,eAKb,kBAAC4J,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,mBACA,kBAACtF,GAAA,EAAKM,QAAN,CACExS,MAAOyB,KAAKhE,MAAMiiB,aAClBtiB,KAAK,eACL8D,SAAUO,KAAKqY,aACfpc,KAAK,SACL2D,YAAY,sBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,gCACpB,kBAACL,GAAA,EAAKsF,MAAN,oBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEnR,YAAY,oBACZiR,GAAG,WACHtS,MAAOyB,KAAKhE,MAAMkiB,mBAClBviB,KAAK,qBACL8D,SAAUO,KAAKqY,aACfvY,KAAK,QAIX,kBAAC8U,GAAA,EAAMlX,OAAP,KACE,kBAACwU,GAAA,EAAD,CAAQnS,QAASC,KAAKgK,SAAtB,cACA,kBAACkI,GAAA,EAAD,CAAQxD,QAAQ,SAAS3O,QAASC,KAAK0e,qBAAvC,WAKJ,kBAAC9J,GAAA,EAAD,CACEI,KAAMhV,KAAKhE,MAAM0hB,uBACjB7I,KAAK,KACLI,OAAQjV,KAAK4e,qBACb9J,kBAAgB,gCAChBC,UAAQ,GAER,kBAACH,GAAA,EAAMhG,OAAP,CAAcsG,aAAW,GACvB,kBAACN,GAAA,EAAMO,MAAP,CAAa3X,GAAG,iCAAhB,cAIF,kBAACoX,GAAA,EAAMpE,KAAP,KACE,yBAAK3T,UAAU,sEACb,yBACEE,MAAO,CACLC,MAAO,IACPqR,UAAW,QACXC,OAAQ,IACRmD,aAAc,OAEhBxU,IACE+C,KAAKhE,MAAMsO,gBACP+R,IAAIC,gBAAgBtc,KAAKhE,MAAMsO,iBAC/BtK,KAAKhE,MAAMmiB,qBAGnB,kBAAC1N,GAAA,EAAKG,MAAN,CAAY/T,UAAU,OAAOiU,UAAU,oBACrC,kBAACL,GAAA,EAAKM,QAAN,CACElU,UAAU,kBACVlB,KAAK,kBACL8b,OAAO,UACPhY,SAAUO,KAAK8e,qBACf7iB,KAAK,WAKX,kBAACwU,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,kBACA,kBAACtF,GAAA,EAAKM,QAAN,CACExS,MAAOyB,KAAKhE,MAAMoiB,eAClBziB,KAAK,iBACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,qBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,8BACpB,kBAACL,GAAA,EAAKsF,MAAN,iBACA,kBAACtF,GAAA,EAAKM,QAAN,CACExS,MAAOyB,KAAKhE,MAAMqiB,mBAClB1iB,KAAK,qBACL8D,SAAUO,KAAKqY,aACfxH,GAAG,UAEF7Q,KAAKX,MAAM9D,WAAW0H,KAAI,SAAC+b,EAAK/B,GAAN,OACzB,4BACEgC,SAAU,EAAKjjB,MAAMqiB,qBAAuBW,EAAInY,SAChDtI,MAAOygB,EAAInY,UAEVmY,EAAInY,eAKb,kBAAC4J,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,mBACA,kBAACtF,GAAA,EAAKM,QAAN,CACExS,MAAOyB,KAAKhE,MAAMsiB,gBAClB3iB,KAAK,kBACL8D,SAAUO,KAAKqY,aACfpc,KAAK,SACL2D,YAAY,sBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,gCACpB,kBAACL,GAAA,EAAKsF,MAAN,oBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEnR,YAAY,oBACZiR,GAAG,WACHtS,MAAOyB,KAAKhE,MAAMuiB,sBAClB5iB,KAAK,wBACL8D,SAAUO,KAAKqY,aACfvY,KAAK,QAIX,kBAAC8U,GAAA,EAAMlX,OAAP,KACE,kBAACwU,GAAA,EAAD,CAAQnS,QAASC,KAAKuK,YAAtB,eACA,kBAAC2H,GAAA,EAAD,CAAQxD,QAAQ,SAAS3O,QAASC,KAAK4e,sBAAvC,gB,GA3fOnhB,cAogBJkR,eAAQ+I,GAAuBC,GAA/BhJ,CAAyDS,ICjgBlE8P,G,2MACJljB,MAAQ,CACNmc,MAAO,GACP4B,eAAgB,EAChB5L,SAAU,CACRrH,IAAK,EACLqY,KAAM,GAERC,SAAU,GACVC,YAAa,GACb5Y,cAAe,GACfD,QAAS,GACT8Y,gBAAgB,EAChBC,gBAAgB,EAChB5jB,KAAM,I,EAERgX,kBAAoB,WAClB,EAAKnU,SAAS,CACZ2Z,MAAO,EAAK9Y,MAAMlE,OAAO6L,OACzB+S,eAAgB,EAAK1a,MAAMlE,OAAOgM,gBAClCgH,SAAU,CACRrH,IAAK,EAAKzH,MAAMlE,OAAOmM,UAAUR,IACjCqY,KAAM,EAAK9f,MAAMlE,OAAOmM,UAAUP,OAEpCqY,SAAU,EAAK/f,MAAMlE,OAAOkM,aAAaV,UACzC0Y,YAAa,EAAKhgB,MAAMlE,OAAOkM,aAAaX,aAC5CD,cAAe,EAAKpH,MAAMlE,OAAOkM,aAAaZ,cAC9CD,QAAS,EAAKnH,MAAMlE,OAAOqL,QAC3B7K,KAAM,EAAK0D,MAAMlE,OAAOQ,Q,EAG5B6jB,YAAc,SAAM9f,GAAN,eAAAhB,EAAAC,OAAA,uDACZ,EAAKH,SAAS,CACZ8gB,gBAAgB,IAFN,WAAA5gB,EAAA,MAINgE,GAASsG,kBAAkBtJ,EAAEC,OAAOuX,MAAM,GAAI,EAAK7X,MAAMlE,OAAOU,MAJ1D,yBAAA6C,EAAA,MAKSgE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MAL9C,OAKNV,EALM,OAMZ,EAAKkE,MAAMiO,YAAYnS,GACvB8R,GAAU9R,GACV,EAAKqD,SAAS,CACZ8gB,gBAAgB,IATN,sC,EAYdjH,aAAe,SAAA3Y,GACb,EAAKlB,SAAL,eACGkB,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOpB,S,EAG9BkhB,OAAS,0BAAA/gB,EAAAC,OAAA,uDACP,EAAKH,SAAS,CACZ8gB,gBAAgB,IAFX,WAAA5gB,EAAA,MAIDgE,GAASqG,aACb,EAAK/M,MAAML,KACX,EAAKK,MAAMmc,MACX,EAAKnc,MAAM+d,eACX,EAAK/d,MAAMmS,SAASrH,IACpB,EAAK9K,MAAMmS,SAASgR,KACpB,EAAKnjB,MAAMyK,cACX,EAAKzK,MAAMqjB,YACX,EAAKrjB,MAAMojB,SACX,EAAK/f,MAAMlE,OAAOU,MAbb,yBAAA6C,EAAA,MAecgE,GAASP,UAAU,EAAK9C,MAAMlE,OAAOU,MAfnD,OAeDV,EAfC,OAgBP,EAAKkE,MAAMiO,YAAYnS,GACvB8R,GAAU9R,GACV,EAAKqD,SAAS,CACZ8gB,gBAAgB,IAElB,EAAKjgB,MAAMC,QAAQC,KAAK,YArBjB,uC,wEAwBP,OACE,6BACE,kBAAC,GAAD,KACE,kBAAC4Q,GAAA,EAAD,CAAWwI,OAAK,GACd,kBAACvI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KAAKvT,MAAO,CAAEya,QAAS,KAC7B,kBAACjH,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,gDAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,yBAAK3T,UAAU,gEACb,yBACEE,MAAO,CACLC,MAAO,QACPsR,OAAQ,QACRD,UAAW,QACXoD,aAAc,OAEhBxU,IACE+C,KAAKX,MAAMlE,OAAOiM,UACdpH,KAAKX,MAAMlE,OAAOiM,UAClB,+GAGPpH,KAAKhE,MAAMsjB,eACV,kBAAC9Q,GAAA,EAAD,CACEzR,MAAO,CAAEC,MAAO,GAAIsR,OAAQ,IAC5BG,UAAU,SACVC,QAAQ,OACR7R,UAAU,SAGZ,kBAAC4T,GAAA,EAAKG,MAAN,CACE/T,UAAU,OACViU,UAAU,oBAEV,kBAACL,GAAA,EAAKM,QAAN,CACElU,UAAU,kBACV4a,OAAO,UACPhY,SAAUO,KAAKwf,YACfvjB,KAAK,WAKb,wBAAIY,UAAU,SACd,kBAAC4T,GAAA,EAAKG,MAAN,CAAYE,UAAU,kBACpB,kBAACL,GAAA,EAAKsF,MAAN,oBACA,kBAACtF,GAAA,EAAKM,QAAN,CACE9U,KAAK,OACL2D,YAAY,oBACZrB,MAAOyB,KAAKhE,MAAML,KAClBA,KAAK,OACL8D,SAAUO,KAAKqY,gBAGnB,kBAAC5H,GAAA,EAAKG,MAAN,CAAYE,UAAU,8BACpB,kBAACL,GAAA,EAAKsF,MAAN,oBACA,kBAACtF,GAAA,EAAKM,QAAN,CAAc2O,UAAQ,EAAC7O,GAAG,UACxB,4BACEoO,SACiC,gBAA/Bjf,KAAKX,MAAMlE,OAAO0L,SAEpBtI,MAAM,cAJR,cAQA,4BACE0gB,SAAyC,UAA/Bjf,KAAKX,MAAMlE,OAAO0L,SAC5BtI,MAAM,QAFR,QAMA,4BACE0gB,SACiC,iBAA/Bjf,KAAKX,MAAMlE,OAAO0L,SAEpBtI,MAAM,eAJR,eAQA,4BACE0gB,SAAyC,WAA/Bjf,KAAKX,MAAMlE,OAAO0L,SAC5BtI,MAAM,SAFR,WAQJ,kBAACkS,GAAA,EAAKG,MAAN,CAAYE,UAAU,8BACpB,kBAACL,GAAA,EAAKsF,MAAN,eACA,kBAACtF,GAAA,EAAKM,QAAN,CAAc2O,UAAQ,EAAC7O,GAAG,UACxB,4BACEoO,SAAuC,SAA7Bjf,KAAKX,MAAMlE,OAAOyL,OAC5BrI,MAAM,QAFR,QAMA,4BACE0gB,SAAuC,QAA7Bjf,KAAKX,MAAMlE,OAAOyL,OAC5BrI,MAAM,OAFR,SAQJ,wBAAI1B,UAAU,SACd,kBAAC4T,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,sBACA,kBAACtF,GAAA,EAAKM,QAAN,CACExS,MAAOyB,KAAKX,MAAMlE,OAAOS,MACzB8jB,UAAQ,EACRzjB,KAAK,QACL2D,YAAY,8BAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,qBACA,kBAACtF,GAAA,EAAKM,QAAN,CACExS,MAAOyB,KAAKhE,MAAMmc,MAClBxc,KAAK,QACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,sBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,wBACA,kBAACX,GAAA,EAAD,CAAYvY,UAAU,QACpB,kBAACuY,GAAA,EAAWC,QAAZ,KACE,kBAACD,GAAA,EAAWE,KAAZ,aAEF,kBAACC,GAAA,EAAD,CACEhX,MAAOyB,KAAKhE,MAAM+d,eAClBpe,KAAK,iBACL8D,SAAUO,KAAKqY,aACfpc,KAAK,SACLsB,aAAW,qCAIjB,wBAAIV,UAAU,SACd,wCACA,wBAAIA,UAAU,SACd,wBAAIA,UAAU,QAAd,gBACA,kBAAC4T,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,kBACA,kBAACtF,GAAA,EAAKM,QAAN,CACExS,MAAOyB,KAAKhE,MAAMojB,SAClBzjB,KAAK,WACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,0BAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,qBACA,kBAACtF,GAAA,EAAKM,QAAN,CACExS,MAAOyB,KAAKhE,MAAMqjB,YAClB1jB,KAAK,cACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,6BAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,uBACA,kBAACtF,GAAA,EAAKM,QAAN,CACExS,MAAOyB,KAAKhE,MAAMyK,cAClB9K,KAAK,QACL8D,SAAUO,KAAKqY,aACfpc,KAAK,SACL2D,YAAY,+BAGhB,wBAAI/C,UAAU,SACbmD,KAAKhE,MAAMujB,eACV,kBAAC/Q,GAAA,EAAD,CACEzR,MAAO,CAAEC,MAAO,GAAIsR,OAAQ,IAC5BG,UAAU,SACVC,QAAQ,OACR7R,UAAU,SAGZ,kBAACqV,GAAA,EAAD,CACEnS,QAASC,KAAKyf,OACd/Q,QAAQ,UACRmG,KAAK,KACLgC,OAAK,GAJP,mB,GAjQIpZ,aAoRXkR,eACb+I,GACAC,GAFahJ,CAGb1O,YAAWif,KCzRPS,G,2MACJ3jB,MAAQ,CACNmF,MAAO,KACPxF,KAAM,GACNia,WAAY,cACZhP,OAAQ,OACRhL,MAAO,GACPuc,MAAO,GACP4B,eAAgB,EAChB5L,SAAU,CACRrH,IAAK,EACLqY,KAAM,GAERC,SAAU,GACVC,YAAa,GACb5Y,cAAe,GACf3F,SAAU,GACV8e,gBAAiB,GACjBpZ,QAAS,I,EAEX6R,aAAe,SAAA3Y,GACb,EAAKlB,SAAL,eACGkB,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOpB,S,EAG9BsgB,iBAAmB,SAAAnf,GACjBmM,QAAQC,IAAIpM,EAAEC,OAAOuX,MAAM,IAC3B,EAAK1Y,SAAL,eACGkB,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOuX,MAAM,M,EAGpC2I,SAAW,0BAAAnhB,EAAAC,OAAA,kEAAAD,EAAA,MACUgE,GAAS6D,aAC1B,EAAKvK,MAAMJ,MACX,EAAKI,MAAM8E,SACX,EAAK9E,MAAMwK,QACX,EAAKxK,MAAMyK,cACX,EAAKzK,MAAMqjB,YACX,EAAKrjB,MAAMojB,SACX,EAAKpjB,MAAM4K,OACX,EAAK5K,MAAM4Z,WACX,EAAK5Z,MAAMmS,SAASrH,IACpB,EAAK9K,MAAMmS,SAASgR,KACpB,EAAKnjB,MAAML,KACX,EAAKK,MAAMmc,MACX,EAAKnc,MAAMmF,MACX,EAAKnF,MAAMmF,MAAMxF,KAAKuN,MAAM,KAC1B,EAAKlN,MAAMmF,MAAMxF,KAAKuN,MAAM,KAAKC,OAAS,GAE5C,EAAKnN,MAAM+d,iBAlBJ,0CAqBP3a,MAAM,+BArBC,WAAAV,EAAA,MAsBcgE,GAAS4D,YAC5B,EAAKtK,MAAMJ,MACX,EAAKI,MAAM8E,WAxBN,OAsBD3F,EAtBC,OA0BP,EAAKkE,MAAMiO,YAAYnS,GACvB8R,GAAU9R,GACV,EAAKkE,MAAMC,QAAQC,KAAK,YACxB2O,OAAOC,SAASC,SA7BT,wBA+BPhP,MAAM,mCA/BC,uC,wEAmCT,OACE,6BACE,kBAAC+Q,GAAA,EAAD,CAAWwI,OAAK,GACd,kBAACvI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,GAAG,KACHvT,MAAO,CACLya,QAAS,GACT9G,WAAY,OACZC,cAAe,OACfmP,gBAAiB,YAGnB,kBAACvP,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,oDAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,yBAAK3T,UAAU,gEACb,yBACEE,MAAO,CACLC,MAAO,QACPsR,OAAQ,QACRD,UAAW,QACXoD,aAAc,OAEhBxU,IACE+C,KAAKhE,MAAMmF,MACPkb,IAAIC,gBAAgBtc,KAAKhE,MAAMmF,OAC/B,yGAGR,kBAACsP,GAAA,EAAKG,MAAN,CAAY/T,UAAU,OAAOiU,UAAU,oBACrC,kBAACL,GAAA,EAAKM,QAAN,CACElU,UAAU,kBACVlB,KAAK,QACL8b,OAAO,UACPhY,SAAUO,KAAK6e,iBACf5iB,KAAK,WAIX,wBAAIY,UAAU,SACd,kBAAC4T,GAAA,EAAKG,MAAN,CAAYE,UAAU,kBACpB,kBAACL,GAAA,EAAKsF,MAAN,oBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,OACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,uBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,8BACpB,kBAACL,GAAA,EAAKsF,MAAN,oBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,aACL8D,SAAUO,KAAKqY,aACfxH,GAAG,UAEH,4BAAQtS,MAAM,eAAd,cACA,4BAAQA,MAAM,SAAd,QACA,4BAAQA,MAAM,gBAAd,eACA,4BAAQA,MAAM,UAAd,WAGJ,kBAACkS,GAAA,EAAKG,MAAN,CAAYE,UAAU,8BACpB,kBAACL,GAAA,EAAKsF,MAAN,eACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,SACL8D,SAAUO,KAAKqY,aACfxH,GAAG,UAEH,4BAAQtS,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,SAGJ,wBAAI1B,UAAU,SACd,kBAAC4T,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,sBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,QACL8D,SAAUO,KAAKqY,aACfpc,KAAK,QACL2D,YAAY,8BAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,gBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,UACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,wBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,qBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,QACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,sBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,wBACA,kBAACX,GAAA,EAAD,CAAYvY,UAAU,QACpB,kBAACuY,GAAA,EAAWC,QAAZ,KACE,kBAACD,GAAA,EAAWE,KAAZ,aAEF,kBAACC,GAAA,EAAD,CACE5Z,KAAK,iBACL8D,SAAUO,KAAKqY,aACfpc,KAAK,SACLsB,aAAW,qCAIjB,wBAAIV,UAAU,SACd,uCACA,wBAAIA,UAAU,SACd,wBAAIA,UAAU,QAAd,gBACA,kBAAC4T,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,kBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,WACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,0BAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,qBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,cACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,6BAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,uBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,gBACL8D,SAAUO,KAAKqY,aACfpc,KAAK,SACL2D,YAAY,+BAGhB,wBAAI/C,UAAU,SAEd,wBAAIA,UAAU,QAAd,mBACA,kBAAC4T,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,iBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,WACL8D,SAAUO,KAAKqY,aACfpc,KAAK,WACL2D,YAAY,yBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,yBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,kBACL8D,SAAUO,KAAKqY,aACfpc,KAAK,WACL2D,YAAY,0BAGhB,wBAAI/C,UAAU,SACd,kBAACqV,GAAA,EAAD,CACEnS,QAASC,KAAK6f,SACdnR,QAAQ,UACRmG,KAAK,KACLgC,OAAK,GAJP,iC,GA7OSpZ,aA+PZkR,eACb+I,GACAC,GAFahJ,CAGb1O,YAAW0f,KC5QPI,G,2MACJC,qBAAuB,oBAAAthB,EAAAC,OAAA,kEAAAD,EAAA,MACfgE,GAAS0J,4BADM,sC,wEAIrB,OACE,yBACErP,MAAO,CAAEuR,OAAQ,QAASiJ,WAAY,SACtC1a,UAAU,sEAEV,2BAAOI,IAAKC,IAAMH,MAAO,CAAEC,MAAO,OAASgB,OAAK,EAACF,UAAQ,IACxDkC,KAAKX,MAAMlE,OACT6E,KAAKX,MAAMlE,OAAO0K,YAKf,KAJF,uBAAGhJ,UAAU,cAAb,2EAKA,KAEHmD,KAAKX,MAAMlE,OACT6E,KAAKX,MAAMlE,OAAOoM,kBAIf,KAHF,kBAAC2K,GAAA,EAAD,CAAQnS,QAASC,KAAKggB,qBAAsBtR,QAAQ,QAApD,gEAIA,U,GA1BoBjR,aA+BjBkR,eACb+I,GACAC,GAFahJ,CAGboR,ICxBIE,G,2MACJjkB,MAAQ,CACNmF,MAAO,KACPxF,KAAM,GACNia,WAAY,cACZhP,OAAQ,OACRhL,MAAO,GACPuc,MAAO,GACP4B,eAAgB,EAChB5L,SAAU,CACRrH,IAAK,EACLqY,KAAM,GAERC,SAAU,GACVC,YAAa,GACb5Y,cAAe,GACf3F,SAAU,GACV8e,gBAAiB,GACjBpZ,QAAS,GACT3K,IAAK,I,EAEP8W,kBAAoB,WAClB,EAAKnU,SAAS,CACZ2C,MAAO,EAAK9B,MAAM3D,iBAAiBI,SACnCH,KAAM,EAAK0D,MAAM3D,iBAAiBC,KAClCC,MAAO,EAAKyD,MAAM3D,iBAAiBE,MACnCC,IAAK,EAAKwD,MAAM3D,iBAAiBG,O,EAGrCwc,aAAe,SAAA3Y,GACb,EAAKlB,SAAL,eACGkB,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOpB,S,EAG9BsgB,iBAAmB,SAAAnf,GACjBmM,QAAQC,IAAIpM,EAAEC,OAAOuX,MAAM,IAC3B,EAAK1Y,SAAL,eACGkB,EAAEC,OAAOhE,KAAO+D,EAAEC,OAAOuX,MAAM,M,EAGpC2I,SAAW,0BAAAnhB,EAAAC,OAAA,kEAAAD,EAAA,MACUgE,GAASiH,mBAC1B,EAAK3N,MAAMJ,MACX,EAAKI,MAAMwK,QACX,EAAKxK,MAAMyK,cACX,EAAKzK,MAAMqjB,YACX,EAAKrjB,MAAMojB,SACX,EAAKpjB,MAAM4K,OACX,EAAK5K,MAAM4Z,WACX,EAAK5Z,MAAMmS,SAASrH,IACpB,EAAK9K,MAAMmS,SAASgR,KACpB,EAAKnjB,MAAML,KACX,EAAKK,MAAMmc,MACX,EAAKnc,MAAMmF,MACX,EAAKnF,MAAM+d,eACX,EAAK/d,MAAMH,MAfJ,0CAkBPuD,MAAM,+BAlBC,WAAAV,EAAA,MAmBcgE,GAASP,UAAU,EAAKnG,MAAMH,MAnB5C,OAmBDV,EAnBC,OAoBP,EAAKkE,MAAMiO,YAAYnS,GACvB8R,GAAU9R,GACV,EAAKkE,MAAMC,QAAQC,KAAK,YACxB2O,OAAOC,SAASC,SAvBT,wBAyBPhP,MAAM,mCAzBC,uC,wEA6BT,OACE,6BACE,kBAAC+Q,GAAA,EAAD,CAAWwI,OAAK,GACd,kBAACvI,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,GAAG,KACHvT,MAAO,CACLya,QAAS,GACT9G,WAAY,OACZC,cAAe,OACfmP,gBAAiB,YAGnB,kBAACvP,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK3B,OAAN,KACE,oDAEF,kBAAC2B,GAAA,EAAKC,KAAN,KACE,yBAAK3T,UAAU,gEACb,yBACEE,MAAO,CACLC,MAAO,QACPsR,OAAQ,QACRD,UAAW,QACXoD,aAAc,OAEhBxU,IACE+C,KAAKhE,MAAMmF,MACPnB,KAAKhE,MAAMmF,MACX,0GAIV,wBAAItE,UAAU,SACd,kBAAC4T,GAAA,EAAKG,MAAN,CAAYE,UAAU,kBACpB,kBAACL,GAAA,EAAKsF,MAAN,oBACA,kBAACtF,GAAA,EAAKM,QAAN,CACE2O,UAAQ,EACRnhB,MAAOyB,KAAKhE,MAAML,KAClBA,KAAK,OACLM,KAAK,OACL2D,YAAY,uBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,8BACpB,kBAACL,GAAA,EAAKsF,MAAN,oBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,aACL8D,SAAUO,KAAKqY,aACfxH,GAAG,UAEH,4BAAQtS,MAAM,eAAd,cACA,4BAAQA,MAAM,SAAd,QACA,4BAAQA,MAAM,gBAAd,eACA,4BAAQA,MAAM,UAAd,WAGJ,kBAACkS,GAAA,EAAKG,MAAN,CAAYE,UAAU,8BACpB,kBAACL,GAAA,EAAKsF,MAAN,eACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,SACL8D,SAAUO,KAAKqY,aACfxH,GAAG,UAEH,4BAAQtS,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,SAGJ,wBAAI1B,UAAU,SACd,kBAAC4T,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,sBACA,kBAACtF,GAAA,EAAKM,QAAN,CACE2O,UAAQ,EACRnhB,MAAOyB,KAAKhE,MAAMJ,MAClBD,KAAK,QACL8D,SAAUO,KAAKqY,aACfpc,KAAK,QACL2D,YAAY,8BAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,gBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,UACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,wBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,qBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,QACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,sBAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,wBACA,kBAACX,GAAA,EAAD,CAAYvY,UAAU,QACpB,kBAACuY,GAAA,EAAWC,QAAZ,KACE,kBAACD,GAAA,EAAWE,KAAZ,aAEF,kBAACC,GAAA,EAAD,CACE5Z,KAAK,iBACL8D,SAAUO,KAAKqY,aACfpc,KAAK,SACLsB,aAAW,qCAIjB,wBAAIV,UAAU,SACd,uCACA,wBAAIA,UAAU,SACd,wBAAIA,UAAU,QAAd,gBACA,kBAAC4T,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,kBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,WACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,0BAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,qBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,cACL8D,SAAUO,KAAKqY,aACfpc,KAAK,OACL2D,YAAY,6BAGhB,kBAAC6Q,GAAA,EAAKG,MAAN,CAAYE,UAAU,6BACpB,kBAACL,GAAA,EAAKsF,MAAN,uBACA,kBAACtF,GAAA,EAAKM,QAAN,CACEpV,KAAK,gBACL8D,SAAUO,KAAKqY,aACfpc,KAAK,SACL2D,YAAY,+BAGhB,wBAAI/C,UAAU,SACd,kBAACqV,GAAA,EAAD,CACEnS,QAASC,KAAK6f,SACdnR,QAAQ,UACRmG,KAAK,KACLgC,OAAK,GAJP,iC,GArNepZ,aAuOlBkR,eACb+I,GACAC,GAFahJ,CAGb1O,YAAWggB,KCxOPC,G,2MACJlkB,MAAQ,CAAEmkB,SAAS,G,EAEnBxN,kBAAoB,0CAAAjU,EAAAC,OAAA,mDACZyhB,EAAgBje,KACtB0J,QAAQC,IAAIsU,IACRA,EAHc,mCAAA1hB,EAAA,MAIGgE,GAASP,UAAUie,EAAcvkB,MAJpC,UAIZV,EAJY,QAKZuH,GAAS4J,iBAAoBnR,EAAOoM,kBALxB,mCAAA7I,EAAA,MAMRgE,GAAS6J,wBAAwB6T,EAAcvkB,MANvC,0BAAA6C,EAAA,MAOEgE,GAASP,UAAUie,EAAcvkB,MAPnC,QAORub,EAPQ,OAQdnK,GAAUmK,GACV,EAAK/X,MAAMiO,YAAY8J,GACvBlJ,OAAOC,SAASC,SAVF,2BAYVjT,EAAO0K,cAAgBua,EAAcva,YAZ3B,iBAaZoH,GAAU9R,GACV+S,OAAOC,SAASC,SAdJ,4BAgBRjT,EAhBQ,oCAAAuD,EAAA,MAiBWgE,GAASsF,gBAAgB7M,EAAOU,MAjB3C,eAiBJL,EAjBI,OAkBV,EAAK6D,MAAMwY,aAAarc,GAlBd,YAAAkD,EAAA,MAmBYgE,GAASY,WAAWnI,EAAOU,MAnBvC,eAmBJR,EAnBI,OAoBV,EAAKgE,MAAMsO,cAActS,GApBf,YAAAqD,EAAA,MAqBegE,GAAS+E,cAActM,EAAOU,MArB7C,eAqBJN,EArBI,OAsBV,EAAK8D,MAAMuY,iBAAiBrc,GAtBlB,YAAAmD,EAAA,MAwBcgE,GAASmB,gBAxBvB,eAwBJvI,EAxBI,OAyBV,EAAK+D,MAAMuO,gBAAgBtS,GAzBjB,YAAAoD,EAAA,MA0BkBgE,GAASqF,uBACnC5M,EAAOU,MA3BC,eA0BJJ,EA1BI,OA6BV,EAAK4D,MAAMoO,oBAAoBhS,GA7BrB,YAAAiD,EAAA,MA8BiBgE,GAASiF,sBAClCxM,EAAOU,MA/BC,QA8BJT,EA9BI,OAiCV,EAAKiE,MAAMqO,mBAAmBtS,GAE9BsH,GAAS0F,sBAAqB,SAAAiY,GAC5B,IAAMC,EAAeD,EAASne,MAC1Bqe,EAAS,YAAO,EAAKlhB,MAAM7D,QACzBglB,EAAaD,EAAUE,WAC3B,SAAA/gB,GAAC,OAAIA,EAAEyK,UAAYmW,EAAanW,YAE9BqW,GAAc,EAChBD,EAAUC,GAAcF,EAEpBA,EAAazkB,MAAQV,EAAOU,KAC9B0kB,EAAUhhB,KAAK+gB,GAGnB,EAAKjhB,MAAMwY,aAAa0I,MAE1B7d,GAASwF,0BAAyB,SAAAmY,GAChC,IAAMC,EAAeD,EAASne,MAC9B2J,QAAQC,IAAIwU,GACZ,IAAII,EAAa,YAAO,EAAKrhB,MAAM9D,YAC7BilB,EAAaE,EAAcD,WAC/B,SAAA/gB,GAAC,OAAIA,EAAEmK,cAAgByW,EAAazW,gBAElC2W,GAAc,EAChBE,EAAcF,GAAcF,EAE5BI,EAAcnhB,KAAK+gB,GAErB,EAAKjhB,MAAMuY,iBAAiB8I,KAC3BvlB,EAAOU,KACV6G,GAAS2F,6BAA4B,SAAAgY,GACnC,IAAMC,EAAeD,EAASne,MAC1Bye,EAAgB,YAAO,EAAKthB,MAAM5D,eAChC+kB,EAAaG,EAAiBF,WAClC,SAAA/gB,GAAC,OAAIA,EAAE8I,kBAAoB8X,EAAa9X,oBAEtCgY,GAAc,EAChBG,EAAiBH,GAAcF,EAE/BK,EAAiBphB,KAAK+gB,GAExB,EAAKjhB,MAAMoO,oBAAoBkT,KAC9BxlB,EAAOU,KACV6G,GAAS4F,4BAA2B,SAAA+X,GAClC,IAAMC,EAAeD,EAASne,MAC1B0e,EAAe,YAAO,EAAKvhB,MAAMjE,cAC/BolB,EAAaI,EAAgBH,WACjC,SAAA/gB,GAAC,OAAIA,EAAEmhB,iBAAmBP,EAAaO,mBAErCL,GAAc,EAChBI,EAAgBJ,GAAcF,EAE1BA,EAAaxY,iBAAmB3M,EAAOU,KACzC+kB,EAAgBrhB,KAAK+gB,GAGzB,EAAKjhB,MAAMqO,mBAAmBkT,MAGhC,EAAKvhB,MAAMiO,YAAYnS,GA7Fb,QAkGlB,EAAKqD,SAAS,CAAE2hB,SAAS,IAlGP,uC,wEAqGlB,OAAQngB,KAAKhE,MAAMmkB,QAgDjB,yBACEpjB,MAAO,CAAEuR,OAAQ,QAASiJ,WAAY,SACtC1a,UAAU,sEAEV,2BAAOI,IAAKC,IAAMH,MAAO,CAAEC,MAAO,OAASgB,OAAK,EAACF,UAAQ,EAACgjB,MAAI,IAC9D,kBAACtS,GAAA,EAAD,CACEzR,MAAO,CAAEC,MAAO,GAAIsR,OAAQ,IAC5BG,UAAU,SACVC,QAAQ,UAvDZ,oCACG1O,KAAKX,MAAMlE,OACV,oCACG6E,KAAKX,MAAMlE,OAAO0K,cAClB7F,KAAKX,MAAMlE,OAAOoM,mBACjBvH,KAAKX,MAAMlE,OAAOyK,oBAClB,oCACE,kBAAC,IAAD,CAAOmb,OAAK,EAACC,KAAK,YAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,oBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,mBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,mBAChB,kBAAC,GAAD,QAIJ,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,GAAD,QAKN,oCACE,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,oBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,0BAChB,kBAAC,GAAD,a,GAlJavjB,aAsKZkR,eACb+I,GACAC,GAFahJ,CAGbuR,IC/JIe,G,2MACJjlB,MAAQ,CACNmkB,SAAS,G,EAEXxN,kBAAoB,0CAAAjU,EAAAC,OAAA,qDACZkE,EAAQf,MADI,mCAAApD,EAAA,MAGMgE,GAASS,kBAHf,cAGV/G,EAHU,OAIhB,EAAKiD,MAAMwO,cAAczR,GAJT,WAAAsC,EAAA,MAKMgE,GAASc,iBALf,cAKVnI,EALU,OAMhB,EAAKgE,MAAMsO,cAActS,GANT,YAAAqD,EAAA,MAOSgE,GAASkB,iBAPlB,eAOVvH,EAPU,OAQhB,EAAKgD,MAAMkO,iBAAiBlR,GARZ,YAAAqC,EAAA,MASQgE,GAASmB,gBATjB,eASVvI,EATU,OAUhB,EAAK+D,MAAMuO,gBAAgBtS,GAVX,YAAAoD,EAAA,MAWOgE,GAAS8B,uBAXhB,eAWVlI,EAXU,OAYhB,EAAK+C,MAAMmO,uBAAuBlR,GAZlB,YAAAoC,EAAA,MAaYgE,GAASoB,iBAAiBjB,EAAMhH,MAb5C,eAaVJ,EAbU,OAchB,EAAK4D,MAAMoO,oBAAoBhS,GAdf,YAAAiD,EAAA,MAeWgE,GAASI,mBAfpB,eAeV1H,EAfU,OAgBhB,EAAKiE,MAAMqO,mBAAmBtS,GAhBd,YAAAsD,EAAA,MAiBSgE,GAASyD,iBAjBlB,QAiBV5J,EAjBU,OAkBhB,EAAK8C,MAAMyO,iBAAiBvR,GAC5BmG,GAASmC,iBAAgB,SAAAwb,GACvB,IAAMC,EAAeD,EAASne,MAC1Bgf,EAAU,YAAO,EAAK7hB,MAAMjD,SAC1BokB,EAAaU,EAAWT,WAAU,SAAA/gB,GAAC,OAAIA,EAAE7D,KAAOykB,EAAazkB,OAC/D2kB,GAAc,EAChBU,EAAWV,GAAcF,EAEzBY,EAAW3hB,KAAK+gB,GAElB,EAAKjhB,MAAMwO,cAAcqT,MAE3Bxe,GAASqC,oBAAmB,SAAAsb,GAC1B,IAAMC,EAAeD,EAASne,MAC1Bif,EAAa,YAAO,EAAK9hB,MAAMhD,YAC7BmkB,EAAaW,EAAcV,WAC/B,SAAA/gB,GAAC,OAAIA,EAAE0hB,eAAiBd,EAAac,iBAEnCZ,GAAc,EAChBW,EAAcX,GAAcF,EAE5Ba,EAAc5hB,KAAK+gB,GAErB,EAAKjhB,MAAMkO,iBAAiB4T,MAE9Bze,GAASyC,mBAAkB,SAAAkb,GACzB,IAAMC,EAAeD,EAASne,MAC1Bmf,EAAY,YAAO,EAAKhiB,MAAM/D,WAC5BklB,EAAaa,EAAaZ,WAC9B,SAAA/gB,GAAC,OAAIA,EAAE7D,KAAOykB,EAAazkB,OAEzB2kB,GAAc,EAChBa,EAAab,GAAcF,EAE3Be,EAAa9hB,KAAK+gB,GAEpB,EAAKjhB,MAAMuO,gBAAgByT,MAE7B3e,GAASsC,0BAAyB,SAAAqb,GAChC,IAAMC,EAAeD,EAASne,MAC1Bof,EAAW,YAAO,EAAKjiB,MAAM/C,UAC3BkkB,EAAac,EAAYb,WAC7B,SAAA/gB,GAAC,OAAIA,EAAE7D,KAAOykB,EAAazkB,OAEzB2kB,GAAc,EAChBc,EAAYd,GAAcF,EAE1BgB,EAAY/hB,KAAK+gB,GAEnB,EAAKjhB,MAAMmO,uBAAuB8T,MAEpC5e,GAASgC,uBAAsB,SAAA2b,GAC7B,IAAMC,EAAeD,EAASne,MAC1Bye,EAAgB,YAAO,EAAKthB,MAAM5D,eAChC+kB,EAAaG,EAAiBF,WAClC,SAAA/gB,GAAC,OAAIA,EAAE7D,KAAOykB,EAAazkB,OAEzB2kB,GAAc,EAChBG,EAAiBH,GAAcF,EAE/BK,EAAiBphB,KAAK+gB,GAExB,EAAKjhB,MAAMoO,oBAAoBkT,MAEjCje,GAASuC,sBAAqB,SAAAob,GAC5B,IAAMC,EAAeD,EAASne,MAC1B0e,EAAe,YAAO,EAAKvhB,MAAMjE,cAC/BolB,EAAaI,EAAgBH,WACjC,SAAA/gB,GAAC,OAAIA,EAAEmhB,iBAAmBP,EAAaO,mBAErCL,GAAc,EAChBI,EAAgBJ,GAAcF,EAE9BM,EAAgBrhB,KAAK+gB,GAEvB,EAAKjhB,MAAMqO,mBAAmBkT,MAEhCle,GAASoC,iBAAgB,SAAAub,GACvB,IAAMC,EAAeD,EAASne,MAC1Bqf,EAAU,YAAO,EAAKliB,MAAMhE,SAC1BmlB,EAAae,EAAWd,WAAU,SAAA/gB,GAAC,OAAIA,EAAE7D,KAAOykB,EAAazkB,OAC/D2kB,GAAc,EAChBe,EAAWf,GAAcF,EAEzBiB,EAAWhiB,KAAK+gB,GAElB,EAAKjhB,MAAMsO,cAAc4T,MAG3B7e,GAASwD,oBAAmB,SAAAma,GAC1B,IAAMC,EAAeD,EAASne,MAC1Bsf,EAAa,YAAO,EAAKniB,MAAM9C,YAC7BikB,EAAagB,EAAcf,WAC/B,SAAA/gB,GAAC,OAAIA,EAAE7D,KAAOykB,EAAazkB,OAEzB2kB,GAAc,EAChBgB,EAAchB,GAAcF,EAE5BkB,EAAcjiB,KAAK+gB,GAErB,EAAKjhB,MAAMyO,iBAAiB0T,MAE9B,EAAKniB,MAAMiO,YAAYzK,GAxHP,QA0HlB,EAAKrE,SAAS,CAAE2hB,SAAS,IA1HP,uC,wEA6HlB,OAAOngB,KAAKhE,MAAMmkB,QAChB,yBACEpjB,MAAO,CACLuR,OAAQ,QACRtR,MAAO,OACP6b,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,kBAACvK,GAAA,EAAD,CACEzR,MAAO,CAAEC,MAAO,GAAIsR,OAAQ,IAC5BG,UAAU,SACVC,QAAQ,aAIZ,kBAAC,IAAD,CAAY+S,SAAS,KACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOV,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAChB,kBAAC,EAAD,OAE4B,OAA7BhhB,KAAKX,MAAMlD,cACV,oCACE,kBAAC,IAAD,CAAO4kB,OAAK,EAACC,KAAK,WAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,sBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,qBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,wBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,mBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,uBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,oBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,uBAChB,kBAAC,GAAD,QAIJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAChB,kBAAC,GAAD,OAGJ,kBAAC,GAAD,Y,GAhMWvjB,aAsMNkR,eAAQxB,GAAiBC,GAAzBuB,CAA6CsS,IC9NvCS,G,2MACnB/O,kBAAoB,oBAAAjU,EAAAC,OAAA,+E,wEAoBlB,OACE,kBAAC,IAAD,CAAUlC,MAAOklB,GACf,kBAAC,GAAD,W,GAvByBlkB,aCKbmkB,QACW,cAA7B1T,OAAOC,SAAS0T,UAEe,UAA7B3T,OAAOC,SAAS0T,UAEhB3T,OAAOC,SAAS0T,SAASjP,MACvB,2DCZNkP,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxW,MAAK,SAAAyW,GACjCA,EAAaC,iB,mBErInBxnB,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.e93ed625.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4361f2b5.png\";","const AdminActionTypes = {\r\n  ADMIN_UPDATE_LOGIN_STATUS: \"ADMIN_UPDATE_LOGIN_STATUS\",\r\n  UPDATE_NOTIFICATIONS: \"UPDATE_NOTIFICATIONS\",\r\n  UPDATE_VENDORS: \"UPDATE_VENDORS\",\r\n  UPDATE_RESERVATIONS: \"UPDATE_RESERVATIONS\",\r\n  UPDATE_COMPLAINTS: \"UPDATE_COMPLAINTS\",\r\n  UPDATE_DISCOUNT_VOUCHERS: \"UPDATE_DISCOUNT_VOUCHERS\",\r\n  UPDATE_REVIEWS: \"UPDATE_REVIEWS\",\r\n  UPDATE_CUSTOMERS: \"UPDATE_CUSTOMERS\",\r\n  UPDATE_SLIDESHOW: \"UPDATE_SLIDESHOW\"\r\n};\r\nconst VendorActionTypes = {\r\n  VENDOR_UPDATE_LOGIN_STATUS: \"VENDOR_UPDATE_LOGIN_STATUS\",\r\n  UPDATE_NOTIFICATIONS: \"UPDATE_NOTIFICATIONS\",\r\n  UPDATE_CUSTOMERS: \"UPDATE_CUSTOMERS\",\r\n  UPDATE_RESERVATIONS: \"UPDATE_RESERVATIONS\",\r\n  UPDATE_REVIEWS: \"UPDATE_REVIEWS\",\r\n  UPDATE_DISHES: \"UPDATE_DISHES\",\r\n  UPDATE_CATEGORIES: \"UPDATE_CATEGORIES\",\r\n  UPDATE_REGISTRATION_SOCIAL: \"UPDATE_REGISTRATION_SOCIAL\"\r\n};\r\nexport { AdminActionTypes, VendorActionTypes };\r\n","import { VendorActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  vendor: null,\r\n  reservations: [],\r\n  reviews: [],\r\n  customers: [],\r\n  categories: [],\r\n  dishes: [],\r\n  notifications: [],\r\n  registrationInfo: {\r\n    name: \"\",\r\n    email: \"\",\r\n    uid: \"\",\r\n    photoUrl: \"\"\r\n  }\r\n};\r\n\r\nconst VendorReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case VendorActionTypes.UPDATE_CATEGORIES: {\r\n      return { ...state, categories: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_CUSTOMERS: {\r\n      return { ...state, customers: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_DISHES: {\r\n      return { ...state, dishes: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_NOTIFICATIONS: {\r\n      return { ...state, notifications: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_RESERVATIONS: {\r\n      return { ...state, reservations: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_REVIEWS: {\r\n      return { ...state, reviews: payload };\r\n    }\r\n    case VendorActionTypes.VENDOR_UPDATE_LOGIN_STATUS: {\r\n      return { ...state, vendor: payload };\r\n    }\r\n    case VendorActionTypes.UPDATE_REGISTRATION_SOCIAL: {\r\n      return { ...state, registrationInfo: payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default VendorReducer;\r\n","import { AdminActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  loggedInAdmin: null,\r\n  reservations: [],\r\n  vendors: [],\r\n  notifications: [],\r\n  complaints: [],\r\n  vouchers: [],\r\n  reviews: [],\r\n  customers: [],\r\n  slideshows: []\r\n};\r\nconst AdminReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case AdminActionTypes.ADMIN_UPDATE_LOGIN_STATUS:\r\n      return { ...state, loggedInAdmin: payload };\r\n\r\n    case AdminActionTypes.UPDATE_COMPLAINTS:\r\n      return { ...state, complaints: payload };\r\n\r\n    case AdminActionTypes.UPDATE_DISCOUNT_VOUCHERS:\r\n      return { ...state, vouchers: payload };\r\n\r\n    case AdminActionTypes.UPDATE_NOTIFICATIONS:\r\n      return { ...state, notifications: payload };\r\n\r\n    case AdminActionTypes.UPDATE_RESERVATIONS:\r\n      return { ...state, reservations: payload };\r\n\r\n    case AdminActionTypes.UPDATE_REVIEWS:\r\n      return { ...state, reviews: payload };\r\n\r\n    case AdminActionTypes.UPDATE_VENDORS:\r\n      return { ...state, vendors: payload };\r\n\r\n    case AdminActionTypes.UPDATE_CUSTOMERS:\r\n      return { ...state, customers: payload };\r\n    case AdminActionTypes.UPDATE_SLIDESHOW:\r\n      return { ...state, slideshows: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AdminReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport VendorReducer from \"../Reducers/VendorReducer\";\r\nimport AdminReducer from \"../Reducers/AdminReducer\";\r\n\r\nconst store = createStore(combineReducers({ VendorReducer, AdminReducer }));\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport \"./HomeNavbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class HomeNavbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"home-navbar navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img\r\n            style={{\r\n              width: \"100px\"\r\n            }}\r\n            src={Logo}\r\n          ></img>\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\"></ul>\r\n          <div className=\"login-buttons my-2 my-lg-0\">\r\n            <Link\r\n              to=\"/vendor/\"\r\n              className=\"btn text-light btn-primary my-2 my-sm-0\"\r\n            >\r\n              Vendor Login\r\n            </Link>\r\n            <Link\r\n              to=\"/admin/\"\r\n              className=\"btn text-light btn-primary mx-2 my-2 my-sm-0\"\r\n            >\r\n              Admin Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"row footer\">\r\n        <p className=\"col-12 col-md-2 order-md-first order-last\">\r\n          &copy;Reserve 2020\r\n        </p>\r\n        <div className=\"offset-md-4 col-12 col-md-6 offet-4 row\">\r\n          <Link className=\" col-12 col-md-4 text-md-right\" to=\"/contact\">\r\n            Contact\r\n          </Link>\r\n          <Link className=\" col-12 col-md-4\" to=\"/terms\">\r\n            Terms & Conditions\r\n          </Link>\r\n          <Link className=\" col-12 col-md-4\" to=\"/privacy\">\r\n            Privacy Policy\r\n          </Link>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Footer from \"../Footer/Footer\";\r\n\r\nexport default class FooterAndButtons extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className=\"flex social-btns\">\r\n            <a className=\"app-btn blu flex vert\" href=\"https://www.apple.com\">\r\n              <i className=\"fab fa-apple\"></i>\r\n              <p className=\"text\">\r\n                Available on the <br />{\" \"}\r\n                <span className=\"big-txt\">App Store</span>\r\n              </p>\r\n            </a>\r\n\r\n            <a className=\"app-btn blu flex vert\" href=\"https://www.google.com\">\r\n              <i className=\"fab fa-google-play\"></i>\r\n              <p className=\"text\">\r\n                Get it on <br /> <span className=\"big-txt\">Google Play</span>\r\n              </p>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"container-fluid\">\r\n          <Footer></Footer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Logo from \"../../Images/logo.mp4\";\r\nimport \"./Home.css\";\r\nimport FooterAndButtons from \"../../Components/FooterAndButtons/FooterAndButtons\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <video\r\n              autoPlay={true}\r\n              controls={false}\r\n              muted\r\n              className=\"logo\"\r\n              src={Logo}\r\n            ></video>\r\n          </div>\r\n        </div>\r\n        <FooterAndButtons></FooterAndButtons>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./TermsAndConditions.css\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nexport default class TermsAndConditions extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./PrivacyPolicy.css\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nexport default class PrivacyPolicy extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport \"./Contact.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nclass Contact extends Component {\r\n  state = {\r\n    email: \"\",\r\n    subject: \"Complaint\",\r\n    message: \"\"\r\n  };\r\n  changeState = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  sendMail = async () => {\r\n    if (\r\n      this.state.email.trim() !== \"\" &&\r\n      this.state.subject.trim() !== \"\" &&\r\n      this.state.message.trim() !== \"\"\r\n    ) {\r\n      let templateParams = {\r\n        from_name: this.state.email.trim(),\r\n        to_name: \"ibrahimnabi80@gmail.com\",\r\n        reply_to: this.state.email.trim(),\r\n        subject: this.state.subject,\r\n        message_html: this.state.message\r\n      };\r\n      emailjs.send(\r\n        \"reserve_contact\",\r\n        \"template_KiH1F4zS\",\r\n        templateParams,\r\n        \"user_aVbbjsfKbS0Qub1NMA29M\"\r\n      );\r\n      let templateParams2 = {\r\n        from_name: \"ibrahimnabi80@gmail.com\",\r\n        to_name: this.state.email.trim(),\r\n        subject: \"Response\",\r\n        message_html:\r\n          \"We received your message and we will reply soon. Your inquiry id is 001\"\r\n      };\r\n      emailjs.send(\r\n        \"reserve_contact\",\r\n        \"template_KiH1F4zS\",\r\n        templateParams2,\r\n        \"user_aVbbjsfKbS0Qub1NMA29M\"\r\n      );\r\n      alert(\"We received your message and we will reply soon\");\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      alert(\"Please fill all field before submitting.\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <div className=\"container\">\r\n          <form className=\" contact-form\">\r\n            <legend>Contact Form</legend>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleFormControlSelect1\">Select Subject</label>\r\n              <select\r\n                onChange={e => this.changeState(\"subject\", e.target.value)}\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlSelect1\"\r\n              >\r\n                <option value=\"Complaint\">Complaint</option>\r\n                <option value=\"Inquiry\">Inquiry</option>\r\n                <option value=\"Feedback\">Feedback</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Enter Your Email Address</label>\r\n              <input\r\n                onChange={e => this.changeState(\"email\", e.target.value)}\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                placeholder=\"Email Address\"\r\n                aria-describedby=\"emailHelp\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleFormControlTextarea1\">\r\n                Enter Your Message\r\n              </label>\r\n              <textarea\r\n                onChange={e => this.changeState(\"message\", e.target.value)}\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlTextarea1\"\r\n                rows=\"3\"\r\n                placeholder=\"Message\"\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              onClick={this.sendMail}\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Contact);\r\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyB7qtP77Rx3HmirB5lyWJ90RYeMu4TVnyc\",\r\n  authDomain: \"reserve-restaurant-80ec7.firebaseapp.com\",\r\n  databaseURL: \"https://reserve-restaurant-80ec7.firebaseio.com\",\r\n  projectId: \"reserve-restaurant-80ec7\",\r\n  storageBucket: \"reserve-restaurant-80ec7.appspot.com\",\r\n  messagingSenderId: \"1022182989367\",\r\n  appId: \"1:1022182989367:web:12692d873c484a842be9b2\",\r\n  measurementId: \"G-CSDM8VMGL4\"\r\n};\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyDpsl140hY7lCFfPw_CV9fxbDsbbU2YN6U\",\r\n//   authDomain: \"reserve-1d4e1.firebaseapp.com\",\r\n//   databaseURL: \"https://reserve-1d4e1.firebaseio.com\",\r\n//   projectId: \"reserve-1d4e1\",\r\n//   storageBucket: \"reserve-1d4e1.appspot.com\",\r\n//   messagingSenderId: \"1028452700122\",\r\n//   appId: \"1:1028452700122:web:852c13d9b3cd2045227ae3\",\r\n//   measurementId: \"G-T7D59TGW8L\"\r\n// };\r\nexport default firebaseConfig;\r\n","import * as firebase from \"firebase\";\r\nimport firebaseConfig from \"../Config\";\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst registerVendorEmail = async (email, password) => {\r\n  const user = await app.auth().createUserWithEmailAndPassword(email, password);\r\n  return user;\r\n};\r\nconst createVendor = async (\r\n  email,\r\n  password,\r\n  address,\r\n  accountNumber,\r\n  account_name,\r\n  bank_name,\r\n  branch,\r\n  category,\r\n  lat,\r\n  llong,\r\n  name,\r\n  number,\r\n  photo,\r\n  photo_extension,\r\n  reservation_fee\r\n) => {\r\n  const user = await registerVendorEmail(email, password);\r\n  const uid = user.user.uid;\r\n  const photo_url = await uploadVendorImage(photo, photo_extension, uid);\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .set({\r\n      email,\r\n      address,\r\n      bank_details: { account_name, accountNumber, bank_name },\r\n      branch,\r\n      category,\r\n      reservation_fee,\r\n      photo_url,\r\n      number,\r\n      llocation: {\r\n        lat,\r\n        llong\r\n      },\r\n      name,\r\n      uid,\r\n      is_verified: false,\r\n      is_restrict_order: false,\r\n      is_number_verified: false,\r\n      is_email_verified: false,\r\n      close: false\r\n    });\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .once(\"value\");\r\n  return response.val();\r\n};\r\nconst createVendorSocial = async (\r\n  email,\r\n  address,\r\n  accountNumber,\r\n  account_name,\r\n  bank_name,\r\n  branch,\r\n  category,\r\n  lat,\r\n  llong,\r\n  name,\r\n  number,\r\n  photo_url,\r\n  reservation_fee,\r\n  uid\r\n) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .set({\r\n      email,\r\n      address,\r\n      bank_details: { account_name, accountNumber, bank_name },\r\n      branch,\r\n      category,\r\n      reservation_fee,\r\n      photo_url,\r\n      number,\r\n      llocation: {\r\n        lat,\r\n        llong\r\n      },\r\n      name,\r\n      uid,\r\n      is_verified: false,\r\n      is_restrict_order: false,\r\n      is_number_verified: false,\r\n      is_email_verified: false,\r\n      close: false\r\n    });\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .once(\"value\");\r\n  return response.val();\r\n};\r\nconst uploadVendorImage = async (image, extension, uid) => {\r\n  const storageRef = app\r\n    .storage()\r\n    .ref(\"/restaurant_images\")\r\n    .child(\"/\" + uid + \".\" + extension);\r\n  const uploadedFile = await storageRef.put(image);\r\n\r\n  return uploadedFile.ref.getDownloadURL();\r\n};\r\nconst uploadDishImage = async (image, extension, uid) => {\r\n  const storageRef = app\r\n    .storage()\r\n    .ref(\"/dish_images\")\r\n    .child(\"/\" + uid + \".\" + extension);\r\n  const uploadedFile = await storageRef.put(image);\r\n  return uploadedFile.ref.getDownloadURL();\r\n};\r\nconst addCategory = async (category, uid) => {\r\n  const category_key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/categories/\" + uid)\r\n      .push()\r\n  ).key;\r\n  await app\r\n    .database()\r\n    .ref(\"/categories/\" + uid + \"/\" + category_key)\r\n    .set({\r\n      category,\r\n      category_key\r\n    });\r\n};\r\nconst addDish = async (name, category, ingredients, image, price, uid) => {\r\n  const dish_key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/dishes/\")\r\n      .push()\r\n  ).key;\r\n  const imageSplit = image.name.split(\".\");\r\n  const photo_url = await uploadDishImage(\r\n    image,\r\n    imageSplit[imageSplit.length - 1],\r\n    dish_key\r\n  );\r\n  await app\r\n    .database()\r\n    .ref(\"/dishes/\" + dish_key)\r\n    .set({\r\n      category,\r\n      dish_key,\r\n      uid,\r\n      ingredients,\r\n      name,\r\n      price,\r\n      photo_url\r\n    });\r\n};\r\nconst updateDish = async (name, category, ingredients, price, dish_key) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/dishes/\" + dish_key)\r\n    .update({\r\n      category,\r\n      ingredients,\r\n      name,\r\n      price\r\n    });\r\n};\r\nconst deleteDish = async dish_key => {\r\n  await app\r\n    .database()\r\n    .ref(\"/dishes/\" + dish_key)\r\n    .remove();\r\n};\r\nconst updateCategory = async (category_key, category, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/categories/\" + uid + \"/\" + category_key)\r\n    .update({\r\n      category\r\n    });\r\n};\r\nconst deleteCategory = async (category_key, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/categories/\" + uid + \"/\" + category_key)\r\n    .remove();\r\n};\r\nconst getCategories = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/categories/\" + uid)\r\n    .once(\"value\");\r\n  const responseValue = response.val();\r\n  const categories = responseValue\r\n    ? Object.keys(responseValue).map(key => {\r\n        return responseValue[key];\r\n      })\r\n    : [];\r\n  return categories;\r\n};\r\nconst loginVendorFacebook = async () => {\r\n  await logout();\r\n  const provider = new firebase.auth.FacebookAuthProvider();\r\n  const response = await app.auth().signInWithPopup(provider);\r\n  const vendor = await getVendor(response.user.uid);\r\n  const result = vendor ? vendor : response.user;\r\n  return { result, message: vendor ? \"User Found\" : \"User Not Found\" };\r\n};\r\nconst loginVendorGoogle = async () => {\r\n  await logout();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  const response = await app.auth().signInWithPopup(provider);\r\n  const vendor = await getVendor(response.user.uid);\r\n  const result = vendor ? vendor : response.user;\r\n  return { result, message: vendor ? \"User Found\" : \"User Not Found\" };\r\n};\r\nconst vendorListenToCategories = async (cb, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/categories/\" + uid)\r\n    .on(\"child_changed\", cb);\r\n};\r\nconst updateNotificationSeen = async (uid, notification_key) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid + \"/\" + notification_key)\r\n    .update({ isSeen: true });\r\n};\r\nconst updateReservationClose = async (uid, value) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({ close: value });\r\n};\r\nconst updateVendor = async (\r\n  name,\r\n  number,\r\n  reservation_fee,\r\n  lat,\r\n  llong,\r\n  accountNumber,\r\n  account_name,\r\n  bank_name,\r\n  uid\r\n) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      name,\r\n      number,\r\n      reservation_fee,\r\n      llocation: {\r\n        lat,\r\n        llong\r\n      },\r\n      bank_details: {\r\n        accountNumber,\r\n        account_name,\r\n        bank_name\r\n      }\r\n    });\r\n};\r\nconst updateVendorImage = async (image, uid) => {\r\n  const imageNameSplit = image.name.split(\".\");\r\n  const extension = imageNameSplit[imageNameSplit.length - 1];\r\n  const photo_url = await uploadVendorImage(image, extension, uid);\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      photo_url\r\n    });\r\n};\r\nconst updateDishImage = async (image, uid) => {\r\n  const imageNameSplit = image.name.split(\".\");\r\n  const extension = imageNameSplit[imageNameSplit.length - 1];\r\n  const photo_url = await uploadDishImage(image, extension, uid);\r\n  await app\r\n    .database()\r\n    .ref(\"/dishes/\" + uid)\r\n    .update({\r\n      photo_url\r\n    });\r\n};\r\nconst updateAvailable = async (uid, value) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({ instant_data: { available: Number(value) } });\r\n};\r\nconst updateEventsInstant = async (\r\n  uid,\r\n  available,\r\n  number_of_tables,\r\n  table_fee\r\n) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      instant_data: {\r\n        available: Number(available),\r\n        number_of_tables: Number(number_of_tables),\r\n        table_fee: Number(table_fee)\r\n      }\r\n    });\r\n};\r\nconst updateEventsReservationFee = async (uid, value) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({ reservation_fee: \"\" + value });\r\n};\r\nconst addRoom = async (\r\n  uid,\r\n  name,\r\n  room_description,\r\n  image,\r\n  total_participants\r\n) => {\r\n  const room_key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/restaurants/\" + uid + \"/instant_data/\")\r\n      .push()\r\n  ).key;\r\n  const extension = image.name.split(\".\")[image.name.split(\".\").length - 1];\r\n  const room_image_url = await uploadRoomImage(image, extension, room_key);\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid + \"/instant_data/\" + room_key)\r\n    .set({\r\n      name,\r\n      room_description,\r\n      room_image_url,\r\n      room_key,\r\n      total_participants,\r\n      time_slots: {}\r\n    });\r\n};\r\n\r\nconst editRoomDescription = async (uid, room_key, room_description) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid + \"/instant_data/\" + room_key)\r\n    .update({\r\n      room_description\r\n    });\r\n};\r\nconst addRoomTimeSlot = async (uid, room_key, time_slot) => {\r\n  const time_slot_key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/restaurants/\" + uid + \"/instant_data/\" + room_key + \"/time_slots/\")\r\n      .push()\r\n  ).key;\r\n  await app\r\n    .database()\r\n    .ref(\r\n      \"/restaurants/\" +\r\n        uid +\r\n        \"/instant_data/\" +\r\n        room_key +\r\n        \"/time_slots/\" +\r\n        time_slot_key\r\n    )\r\n    .set({\r\n      time_slot,\r\n      time_slot_key,\r\n      hide: false\r\n    });\r\n};\r\nconst hideUnhideRoomTimeSlot = async (uid, room_key, time_slot_key, value) => {\r\n  await app\r\n    .database()\r\n    .ref(\r\n      \"/restaurants/\" +\r\n        uid +\r\n        \"/instant_data/\" +\r\n        room_key +\r\n        \"/time_slots/\" +\r\n        time_slot_key\r\n    )\r\n    .update({\r\n      hide: value\r\n    });\r\n};\r\nconst deleteRoomTimeSlot = async (uid, room_key, time_slot_key) => {\r\n  await app\r\n    .database()\r\n    .ref(\r\n      \"/restaurants/\" +\r\n        uid +\r\n        \"/instant_data/\" +\r\n        room_key +\r\n        \"/time_slots/\" +\r\n        time_slot_key\r\n    )\r\n    .remove();\r\n};\r\nconst deleteRoom = async (uid, room_key) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid + \"/instant_data/\" + room_key)\r\n    .remove();\r\n};\r\nconst uploadRoomImage = async (image, extension, uid) => {\r\n  const storageRef = app\r\n    .storage()\r\n    .ref(\"/escape_room_images\")\r\n    .child(\"/\" + uid + \".\" + extension);\r\n  const uploadedFile = await storageRef.put(image);\r\n  return uploadedFile.ref.getDownloadURL();\r\n};\r\nconst getReservationsVendor = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .once(\"value\");\r\n  const responseValue = response.val();\r\n  const reservations = responseValue\r\n    ? Object.keys(responseValue).map(key => {\r\n        return responseValue[key];\r\n      })\r\n    : [];\r\n\r\n  const filteredReservations = reservations.filter(\r\n    e => e.restaurant_uid === uid\r\n  );\r\n  return filteredReservations;\r\n};\r\nconst vendorListenToReservations = async cb => {\r\n  app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .on(\"child_changed\", cb);\r\n};\r\nconst getNotificationsVendor = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .once(\"value\");\r\n  const responseValue = response.val();\r\n\r\n  const notifications = responseValue\r\n    ? Object.keys(responseValue).map(key => {\r\n        return responseValue[key];\r\n      })\r\n    : [];\r\n  return notifications;\r\n};\r\nconst vendorListenToNotifications = async (cb, uid) => {\r\n  app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .on(\"child_changed\", cb);\r\n};\r\nconst getDishesVendor = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .once(\"value\");\r\n  const responseValue = response.val();\r\n  const dishes = responseValue\r\n    ? Object.keys(responseValue).map(key => {\r\n        return responseValue[key];\r\n      })\r\n    : [];\r\n  const filteredDishes = dishes.filter(e => e.uid === uid);\r\n  return filteredDishes;\r\n};\r\nconst vendorListenToDishes = async cb => {\r\n  app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .on(\"child_changed\", cb);\r\n};\r\nconst getAdmin = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/admin/\" + uid)\r\n    .once(\"value\");\r\n  return response.val();\r\n};\r\nconst login = async (email, password) => {\r\n  await logout();\r\n  const response = await app.auth().signInWithEmailAndPassword(email, password);\r\n  if (response.user) {\r\n    const admin = await getAdmin(response.user.uid);\r\n    return admin;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nconst getVendor = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .once(\"value\");\r\n  return response.val();\r\n};\r\nconst loginVendor = async (email, password) => {\r\n  await logout();\r\n  const response = await app.auth().signInWithEmailAndPassword(email, password);\r\n  if (response.user) {\r\n    const vendor = await getVendor(response.user.uid);\r\n    return vendor;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\nconst forgotPassword = async email => {\r\n  await app\r\n    .auth()\r\n    .sendPasswordResetEmail(email)\r\n    .then(() => {\r\n      console.log(\r\n        \"An email with the reset password link has been sent to your account\"\r\n      );\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst sendEmailVerficationLink = async () => {\r\n  const user = app.auth().currentUser;\r\n  await user.sendEmailVerification();\r\n};\r\nconst updateEmailVerification = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      is_email_verified: true\r\n    });\r\n};\r\nconst emailVerified = () => {\r\n  return app.auth().currentUser.emailVerified;\r\n};\r\nconst checkIfVendorExists = async email => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const vendors = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  const vendorFound = vendors.find(e => e.email === email);\r\n  return vendorFound;\r\n};\r\nconst getReservations = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const reservations = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return reservations;\r\n};\r\nconst getRestaurants = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const restaurants = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return restaurants;\r\n};\r\nconst getDishes = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const dishes = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return dishes;\r\n};\r\nconst getReviews = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/ratings/\" + uid)\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const ratings = value\r\n    ? Object.keys(value).map(key => {\r\n        return value[key];\r\n      })\r\n    : [];\r\n  return ratings;\r\n};\r\nconst getNotifications = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  if (value) {\r\n    const notifications = Object.keys(value).map(key => {\r\n      return value[key];\r\n    });\r\n    return notifications;\r\n  }\r\n  return [];\r\n};\r\nconst getAllReviews = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/ratings/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const ratings = [];\r\n  Object.keys(value).forEach(key => {\r\n    const data = Object.keys(value[key]).map(k => value[key][k]);\r\n    ratings.push(...data);\r\n  });\r\n  return ratings;\r\n};\r\nconst getComplaints = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/complaints/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const complaints = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return complaints;\r\n};\r\nconst getSlideShows = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/slideshows/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  if (value) {\r\n    const slideshows = Object.keys(value).map(key => {\r\n      return value[key];\r\n    });\r\n    return slideshows;\r\n  }\r\n  return [];\r\n};\r\nconst getCustomers = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/customers/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const customers = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return customers;\r\n};\r\nconst addDiscountVoucher = async (\r\n  code,\r\n  expDate,\r\n  maxUses,\r\n  vendor_type,\r\n  percentage\r\n) => {\r\n  const key = await app\r\n    .database()\r\n    .ref(\"/discounts\")\r\n    .push();\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + key.key)\r\n    .set({\r\n      code,\r\n      expDate,\r\n      maxUses,\r\n      numberOfUses: 0,\r\n      isBlocked: false,\r\n      uid: key.key,\r\n      vendor_type,\r\n      percentage\r\n    });\r\n};\r\nconst updateDiscountVoucher = async (uid, isBlocked) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + uid)\r\n    .update({\r\n      isBlocked\r\n    });\r\n};\r\nconst getDiscountVouchers = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/discounts/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const discounts = value\r\n    ? Object.keys(value).map(key => {\r\n        return value[key];\r\n      })\r\n    : [];\r\n  return discounts;\r\n};\r\nconst listenToNotifications = async (callBack, uid) => {\r\n  app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToVendors = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToReviews = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/reviews/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToSlideShows = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/slideshows/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst deleteVendor = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .remove();\r\n};\r\nconst deleteDiscount = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + uid)\r\n    .remove();\r\n};\r\nconst deleteSlideshow = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/slideshows/\" + uid)\r\n    .remove();\r\n};\r\nconst listenToComplaints = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/complaints/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToDiscountVouchers = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/discounts/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToReservations = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToDishes = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToCustomers = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/customers/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst restrictOrder = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      is_restrict_order: value\r\n    });\r\n};\r\nconst updateProcessingFee = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      processing_fee: value + \"\"\r\n    });\r\n};\r\nconst updateProcessingFeeAndVerify = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      processing_fee: value + \"\",\r\n      is_number_verified: true,\r\n      is_verified: true\r\n    });\r\n};\r\nconst addSlideShow = async (file, extension, vendor_uid) => {\r\n  const key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/slideshows/\")\r\n      .push()\r\n  ).key;\r\n  const image_url = await uploadSlideShowImage(file, key, extension);\r\n  await app\r\n    .database()\r\n    .ref(\"/slideshows/\" + key)\r\n    .set({\r\n      uid: key,\r\n      vendor_uid,\r\n      image_url\r\n    });\r\n};\r\nconst uploadSlideShowImage = async (file, uid, extension) => {\r\n  const ref = app.storage().ref(\"/slideshows/\");\r\n  var imageRef = ref.child(uid + \".\" + extension);\r\n  const response = await imageRef.put(file);\r\n  return response.ref.getDownloadURL();\r\n};\r\nconst logout = async () => {\r\n  if (app.auth().currentUser) {\r\n    await app.auth().signOut();\r\n  }\r\n};\r\nconst Firebase = {\r\n  login,\r\n  getAdmin,\r\n  getReservations,\r\n  getRestaurants,\r\n  getDishes,\r\n  getReviews,\r\n  getAllReviews,\r\n  getComplaints,\r\n  getCustomers,\r\n  getNotifications,\r\n  addDiscountVoucher,\r\n  getDiscountVouchers,\r\n  listenToNotifications,\r\n  listenToVendors,\r\n  listenToReviews,\r\n  listenToComplaints,\r\n  listenToDiscountVouchers,\r\n  listenToReservations,\r\n  listenToDishes,\r\n  listenToCustomers,\r\n  deleteVendor,\r\n  restrictOrder,\r\n  updateProcessingFee,\r\n  updateProcessingFeeAndVerify,\r\n  updateDiscountVoucher,\r\n  addSlideShow,\r\n  listenToSlideShows,\r\n  getSlideShows,\r\n  deleteSlideshow,\r\n  deleteDiscount,\r\n  getVendor,\r\n  loginVendor,\r\n  createVendor,\r\n  getCategories,\r\n  getReservationsVendor,\r\n  getNotificationsVendor,\r\n  getDishesVendor,\r\n  vendorListenToCategories,\r\n  vendorListenToDishes,\r\n  vendorListenToNotifications,\r\n  vendorListenToReservations,\r\n  updateNotificationSeen,\r\n  updateReservationClose,\r\n  updateAvailable,\r\n  updateVendor,\r\n  updateVendorImage,\r\n  loginVendorFacebook,\r\n  loginVendorGoogle,\r\n  createVendorSocial,\r\n  addCategory,\r\n  deleteCategory,\r\n  updateCategory,\r\n  addDish,\r\n  deleteDish,\r\n  updateDishImage,\r\n  updateDish,\r\n  updateEventsInstant,\r\n  addRoom,\r\n  addRoomTimeSlot,\r\n  updateEventsReservationFee,\r\n  hideUnhideRoomTimeSlot,\r\n  deleteRoomTimeSlot,\r\n  deleteRoom,\r\n  editRoomDescription,\r\n  forgotPassword,\r\n  checkIfVendorExists,\r\n  logout,\r\n  sendEmailVerficationLink,\r\n  emailVerified,\r\n  updateEmailVerification\r\n};\r\nexport default Firebase;\r\n","const setAdmin = user => {\r\n  localStorage.setItem(\"admin\", JSON.stringify(user));\r\n};\r\nconst getAdmin = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"admin\"));\r\n  return user;\r\n};\r\nconst removeAdmin = () => {\r\n  localStorage.removeItem(\"admin\");\r\n};\r\nconst setVendor = user => {\r\n  localStorage.setItem(\"Vendor\", JSON.stringify(user));\r\n};\r\nconst getVendor = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"Vendor\"));\r\n  return user;\r\n};\r\nconst removeVendor = () => {\r\n  localStorage.removeItem(\"Vendor\");\r\n};\r\nexport { setAdmin, getAdmin, removeAdmin, setVendor, getVendor, removeVendor };\r\n","import { AdminActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst mapStateToProps = state => {\r\n  return state.AdminReducer;\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateLogin: user =>\r\n      dispatch({\r\n        type: AdminActionTypes.ADMIN_UPDATE_LOGIN_STATUS,\r\n        payload: user\r\n      }),\r\n    updateComplaints: complaints =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_COMPLAINTS,\r\n        payload: complaints\r\n      }),\r\n    updateDiscountVouchers: vouchers =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_DISCOUNT_VOUCHERS,\r\n        payload: vouchers\r\n      }),\r\n    updateNotifications: notifications =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_NOTIFICATIONS,\r\n        payload: notifications\r\n      }),\r\n    updateReservations: reservations =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_RESERVATIONS,\r\n        payload: reservations\r\n      }),\r\n    updateReviews: reviews =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_REVIEWS, payload: reviews }),\r\n    updateCustomers: customers =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_CUSTOMERS, payload: customers }),\r\n    updateVendors: vendors =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_VENDORS, payload: vendors }),\r\n    updateSlideshows: slideshows =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_SLIDESHOW, payload: slideshows })\r\n  };\r\n};\r\nexport { mapDispatchToProps, mapStateToProps };\r\n","import React, { Component } from \"react\";\r\nimport \"./Login.css\";\r\nimport Logo from \"../../../Images/logo.png\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setAdmin } from \"../../../Config/localStorage\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    isLoggingIn: false,\r\n    inValidLogin: false\r\n  };\r\n  changeState = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  login = async () => {\r\n    this.setState({ isLoggingIn: true });\r\n    try {\r\n      if (this.state.email.trim() !== \"\" && this.state.password.trim() !== \"\") {\r\n        const user = await Firebase.login(\r\n          this.state.email,\r\n          this.state.password\r\n        );\r\n        setAdmin(user);\r\n        this.props.updateLogin(user);\r\n        window.location.reload();\r\n      } else {\r\n        alert(\"Your have to fill all fields in order to login\");\r\n      }\r\n    } catch (error) {\r\n      this.setState({ isLoggingIn: false, inValidLogin: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <HomeNavbar></HomeNavbar> */}\r\n        <div className=\"container \">\r\n          <div className=\"row justify-content-center\">\r\n            <img\r\n              style={{\r\n                width: \"20%\",\r\n                objectFit: \"contain\",\r\n                height: \"20vh\"\r\n              }}\r\n              src={Logo}\r\n            ></img>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <form className=\"loginAdmin col-10 col-md-6\">\r\n              <legend>Admin Login</legend>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">\r\n                  Enter Your Email Address\r\n                </label>\r\n                <input\r\n                  onChange={e => this.changeState(\"email\", e.target.value)}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  placeholder=\"Email Address\"\r\n                  aria-describedby=\"emailHelp\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Enter Your Password</label>\r\n                <input\r\n                  onChange={e => this.changeState(\"password\", e.target.value)}\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n              {this.state.inValidLogin ? (\r\n                <p className=\"text-danger\">Invalid email or password!</p>\r\n              ) : null}\r\n              <button\r\n                onClick={this.login}\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.state.isLoggingIn ? (\r\n                  <Spinner animation=\"border\" variant=\"primary\" />\r\n                ) : (\r\n                  \"Login\"\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\r\n","import React, { Component } from \"react\";\r\nimport \"./Header.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../../Config/AdminMapping\";\r\nimport { removeAdmin } from \"../../Config/localStorage\";\r\nimport { Dropdown, Badge } from \"react-bootstrap\";\r\nclass Header extends Component {\r\n  logout = async () => {\r\n    removeAdmin();\r\n    this.props.updateLogin(null);\r\n    this.props.history.push(\"/admin/\");\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(e => !e.is_verified);\r\n    const notifications = vendors.map(e => {\r\n      return (\r\n        <Dropdown.Item>\r\n          <Link to={\"/admin/vendor/\" + e.uid}>Verify New Vendor {e.name}</Link>\r\n        </Dropdown.Item>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <nav class=\"navbar navbar-custom navbar-expand-lg navbar-light bg-white \">\r\n          <Link class=\"navbar-brand\" to=\"/admin/\">\r\n            <img style={{ width: 80 }} src={Logo}></img>\r\n          </Link>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarCollapse\"\r\n            aria-controls=\"navbarCollapse\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon \"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n            <ul\r\n              class=\"navbar-nav mr-auto sidenav h-100 bg-white \"\r\n              id=\"navAccordion\"\r\n            >\r\n              <li class=\"nav-item active\">\r\n                <Link to=\"/admin/\">\r\n                  <img\r\n                    className=\"nav-logo\"\r\n                    style={{ width: 200, margin: \"70px 40px \" }}\r\n                    src={Logo}\r\n                  ></img>\r\n                </Link>\r\n                <div class=\"mx-3\">\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Vendors</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/reservations\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Reservations</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/verification\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Vendors Verification</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/complaints\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Complaints</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/discount\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Discount Coupons</span>\r\n                    </Link>\r\n                  </li>\r\n                  <li class=\"nav-item\">\r\n                    <Link to=\"/admin/slideshow\" class=\"nav-link h5\">\r\n                      <span className=\"ml-2\">Slideshow Banners</span>\r\n                    </Link>\r\n                  </li>\r\n\r\n                  <li class=\"nav-item\">\r\n                    <Link onClick={this.logout} class=\"nav-link h5 \">\r\n                      <span className=\"ml-2\">Logout</span>\r\n                    </Link>\r\n                  </li>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <form class=\"form-inline ml-auto mt-2 mt-md-0\"></form>\r\n            <div class=\"d-flex align-items-center mx-3\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">\r\n                  <ion-icon name=\"notifications-outline\"></ion-icon>\r\n                  <Badge pill className=\"notifications\" variant=\"primary\">\r\n                    {vendors.length}\r\n                  </Badge>\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  {notifications.length ? (\r\n                    notifications\r\n                  ) : (\r\n                    <Dropdown.Item>No notifications</Dropdown.Item>\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <main class=\"content-wrapper\">{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Tabs,\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"./Dashboard.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    modalShow: false,\r\n    selectedVendor: \"\",\r\n    procFee: 0,\r\n    date: new Date(),\r\n    name: \"\"\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(element => {\r\n      const condition = element.name\r\n        .toLowerCase()\r\n        .includes(this.state.name.toLowerCase(), 0);\r\n      return condition;\r\n    });\r\n    const restaurants = vendors.filter(\r\n      element => element.category === \"Restaurants\" && element.is_verified\r\n    );\r\n    const escapeRooms = vendors.filter(\r\n      element => element.category === \"Escape Rooms\" && element.is_verified\r\n    );\r\n    const cafes = vendors.filter(\r\n      element => element.category === \"Cafes\" && element.is_verified\r\n    );\r\n    const events = vendors.filter(\r\n      element => element.category === \"Events\" && element.is_verified\r\n    );\r\n    const unverified = vendors.filter(element => !element.is_verified);\r\n\r\n    return (\r\n      <div>\r\n        {/* <AdminNavbar></AdminNavbar> */}\r\n        <Header>\r\n          <Container>\r\n            <Row className=\"justify-content-center\">\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Vendors</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Form.Row style={{ paddingTop: 10, paddingBottom: 10 }}>\r\n                      <Form.Group as={Col} controlId=\"formGridCity\">\r\n                        <Form.Control\r\n                          onChange={e =>\r\n                            this.setState({ name: e.target.value })\r\n                          }\r\n                          placeholder=\"Search\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Tabs\r\n                      variant=\"pills\"\r\n                      defaultActiveKey=\"Restaurants\"\r\n                      id=\"noanim-tab-example\"\r\n                    >\r\n                      <Tab eventKey=\"Restaurants\" title=\"Restaurants\">\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {restaurants.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <tr\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <td>\r\n                                      <img\r\n                                        style={{\r\n                                          width: 40,\r\n                                          height: 40,\r\n                                          borderRadius: 50,\r\n                                          objectFit: \"cover\"\r\n                                        }}\r\n                                        src={element.photo_url}\r\n                                      ></img>\r\n                                    </td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.email}</td>\r\n                                    <td>\r\n                                      {element.is_verified ? (\r\n                                        <Badge variant=\"success\">\r\n                                          Verified\r\n                                        </Badge>\r\n                                      ) : (\r\n                                        <Badge variant=\"danger\">\r\n                                          Unverified\r\n                                        </Badge>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab>\r\n                      <Tab eventKey=\"Cafe\" title=\"Cafe\">\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {cafes.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <tr\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <td>\r\n                                      <img\r\n                                        style={{\r\n                                          width: 40,\r\n                                          height: 40,\r\n                                          borderRadius: 50,\r\n                                          objectFit: \"cover\"\r\n                                        }}\r\n                                        src={element.photo_url}\r\n                                      ></img>\r\n                                    </td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.email}</td>\r\n                                    <td>\r\n                                      {element.is_verified ? (\r\n                                        <Badge variant=\"success\">\r\n                                          Verified\r\n                                        </Badge>\r\n                                      ) : (\r\n                                        <Badge variant=\"danger\">\r\n                                          Unerified\r\n                                        </Badge>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab>\r\n                      <Tab eventKey=\"Escape Rooms\" title=\"Escape Rooms\">\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {escapeRooms.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <tr\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <td>\r\n                                      <img\r\n                                        style={{\r\n                                          width: 40,\r\n                                          height: 40,\r\n                                          borderRadius: 50,\r\n                                          objectFit: \"cover\"\r\n                                        }}\r\n                                        src={element.photo_url}\r\n                                      ></img>\r\n                                    </td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.email}</td>\r\n                                    <td>\r\n                                      {element.is_verified ? (\r\n                                        <Badge variant=\"success\">\r\n                                          Verified\r\n                                        </Badge>\r\n                                      ) : (\r\n                                        <Badge variant=\"danger\">\r\n                                          Unerified\r\n                                        </Badge>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab>\r\n                      <Tab eventKey=\"Event Organizers\" title=\"Event Organizers\">\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {events.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <tr\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <td>\r\n                                      <img\r\n                                        style={{\r\n                                          width: 40,\r\n                                          height: 40,\r\n                                          borderRadius: 50,\r\n                                          objectFit: \"cover\"\r\n                                        }}\r\n                                        src={element.photo_url}\r\n                                      ></img>\r\n                                    </td>\r\n                                    <td>{element.name}</td>\r\n                                    <td>{element.email}</td>\r\n                                    <td>\r\n                                      {element.is_verified ? (\r\n                                        <Badge variant=\"success\">\r\n                                          Verified\r\n                                        </Badge>\r\n                                      ) : (\r\n                                        <Badge variant=\"danger\">\r\n                                          Unerified\r\n                                        </Badge>\r\n                                      )}\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Tab>\r\n                    </Tabs>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>{\" \"}\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Dashboard));\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport \"./AdminNavbar.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeAdmin } from \"../../Config/localStorage\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../../Config/AdminMapping\";\r\nclass AdminNavbar extends Component {\r\n  logout = async () => {\r\n    removeAdmin();\r\n    this.props.updateLogin(null);\r\n    this.props.history.push(\"/admin/\");\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(e => !e.is_verified);\r\n    const notifications = vendors.map(e => {\r\n      return (\r\n        <Dropdown.Item>\r\n          <Link to={\"/admin/vendor/\" + e.uid}>Verify New Vendor {e.name}</Link>\r\n        </Dropdown.Item>\r\n      );\r\n    });\r\n    return (\r\n      <Navbar className=\"admin-nav\" bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand>\r\n          <Link to=\"/admin/\">\r\n            <img style={{ width: 100 }} src={Logo}></img>\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto admin-nav-links\">\r\n            <Nav.Link>\r\n              <Link to=\"/admin\">Vendors</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/reservations\">Reservations</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/discount\">Discount Vouchers</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/complaints\">Complaints</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/slideshow\">Slideshow</Link>\r\n            </Nav.Link>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">\r\n                <ion-icon name=\"notifications-outline\"></ion-icon>\r\n                <Badge pill className=\"notifications\" variant=\"primary\">\r\n                  {vendors.length}\r\n                </Badge>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                {notifications.length ? (\r\n                  notifications\r\n                ) : (\r\n                  <Dropdown.Item>No notifications</Dropdown.Item>\r\n                )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Nav>\r\n          <Link>\r\n            <Button\r\n              onClick={this.logout}\r\n              type=\"button\"\r\n              variant=\"outline-primary\"\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(AdminNavbar)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  Pagination,\r\n  Table,\r\n  Badge,\r\n  Media,\r\n  Form,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport \"./Vendor.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass Vendor extends Component {\r\n  state = {\r\n    address: \"\",\r\n    branch: \"\",\r\n    category: \"\",\r\n    close: false,\r\n    email: \"\",\r\n    instant_data: {\r\n      available: 0\r\n    },\r\n    modalShow: false,\r\n    is_email_verfied: false,\r\n    is_number_verified: false,\r\n    is_restrict_order: false,\r\n    is_verified: false,\r\n    llocation: {\r\n      lat: 0,\r\n      llong: 0\r\n    },\r\n    name: \"\",\r\n    number: \"\",\r\n    photo_url: \"\",\r\n    reservation_fee: \"0\",\r\n    processing_fee: \"0\",\r\n    uid: \"LEa50vSb5KTbwvz3FgToiDwvzKm1\",\r\n    bank_details: {\r\n      accountNumber: \"\",\r\n      account_name: \"\",\r\n      bank_name: \"\"\r\n    },\r\n    reviews: [],\r\n    newProFee: 0\r\n  };\r\n  restrictOrder = async uid => {\r\n    await Firebase.restrictOrder(!this.state.is_restrict_order, uid);\r\n    this.setState({\r\n      is_restrict_order: !this.state.is_restrict_order\r\n    });\r\n  };\r\n  checkDate = date => {\r\n    var weekStart = new Date();\r\n    // weekStart.setDate(weekStart.getDate() - weekStart.getDay());\r\n    weekStart.setDate(weekStart.getDate() - 30);\r\n    var weekEnd = new Date(+weekStart);\r\n    weekEnd.setDate(weekEnd.getDate() + 30);\r\n    return date >= weekStart && date <= weekEnd;\r\n  };\r\n  componentDidMount = async () => {\r\n    const vendor = this.props.vendors.find(\r\n      element => element.uid === this.props.match.params.uid\r\n    );\r\n    this.setState({\r\n      ...vendor\r\n    });\r\n    const reviews = this.props.reviews.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    let reviewsCustomerAndVendorJoin = reviews.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const restaurant = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, element.rating);\r\n      return {\r\n        ...element,\r\n        customer,\r\n        restaurant,\r\n        array\r\n      };\r\n    });\r\n    this.setState({\r\n      reviews: reviewsCustomerAndVendorJoin\r\n    });\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/customer/\" + uid);\r\n  };\r\n  deleteHandler = async () => {\r\n    await Firebase.deleteVendor(this.state.uid);\r\n    this.props.history.push(\"/admin/\");\r\n  };\r\n  render() {\r\n    const reservations = this.props.reservations.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    const reservationsToRender = reservations.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        element.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : element.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.clickHandler(customer.uid)}>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={customer.photo}\r\n            ></img>\r\n          </td>\r\n          <td>{customer.name}</td>\r\n          <td>{element.time}</td>\r\n          <td>{element.date}</td>\r\n          <td>{element.attandee}</td>\r\n          <td>{Math.floor(Number(element.attandee / 5)) + 1}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{element.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    const complaints = this.props.complaints.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    const complaintsToRender = complaints.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      return customer ? (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              customer.photo\r\n                ? customer.photo\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{customer.name}</h5>\r\n            <Row className=\"ml-1\">\r\n              <h6 onClick={this.redirectToVendor}>{vendor.name}</h6>\r\n            </Row>\r\n            <Row className=\"ml-1\">\r\n              <h6 className=\"text-muted\">{element.title}</h6>\r\n            </Row>\r\n            <p>{element.description}</p>\r\n            <p>\r\n              Date of Complaint:{\" \"}\r\n              <small className=\"text-muted\">{element.date}</small>\r\n            </p>\r\n          </Media.Body>\r\n        </Media>\r\n      ) : null;\r\n    });\r\n    const currentReservations = reservations.filter(e => {\r\n      const date = new Date(e.date);\r\n      console.log(date);\r\n      return this.checkDate(date);\r\n    });\r\n    console.log(currentReservations);\r\n    console.log(reservations);\r\n    let totalTables = 0;\r\n    currentReservations.forEach(r => {\r\n      totalTables += Math.floor(Number(Number(r.attandee) / 5)) + 1;\r\n    });\r\n    console.log(totalTables);\r\n\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Row>\r\n              <Col xs=\"12\" md=\"3\">\r\n                <Card>\r\n                  <Card.Body>\r\n                    <img\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: 200,\r\n                        objectFit: \"cover\"\r\n                      }}\r\n                      src={this.state.photo_url}\r\n                    ></img>\r\n                    <hr></hr>\r\n                    <p className=\"h5\">\r\n                      {this.state.name}\r\n                      {this.state.is_verified ? null : (\r\n                        <small className=\"text-muted text-danger\">\r\n                          {\" \"}\r\n                          (Verification Pending)\r\n                        </small>\r\n                      )}\r\n                    </p>\r\n                    <p className=\"text-muted\">{this.state.category}</p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Branch:{\" \"}\r\n                      <span className=\"text-muted\">{this.state.branch}</span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Phone:{\" \"}\r\n                      <span className=\"text-muted\">{this.state.number}</span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Email:{\" \"}\r\n                      <span className=\"text-muted\">{this.state.email}</span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Bank Name:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        {this.state.bank_details.bank_name}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Account Name:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        {this.state.bank_details.account_name}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Account Number:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        {this.state.bank_details.accountNumber}\r\n                      </span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Reservation Fee:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        EGP {this.state.reservation_fee}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Processing Fee:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        EGP {this.state.processing_fee}\r\n                      </span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Last Months Reservation Revenue:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        EGP {this.state.reservation_fee * totalTables}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Last Months Processing Revenue:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        EGP {this.state.processing_fee * totalTables}\r\n                      </span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Available Reservations:{\" \"}\r\n                      <span className=\"text-muted\">\r\n                        {this.state.instant_data.available}\r\n                      </span>\r\n                    </p>\r\n                    <hr></hr>\r\n                    <Form.Check\r\n                      checked={this.state.is_restrict_order}\r\n                      type=\"switch\"\r\n                      id=\"custom-switch\"\r\n                      label=\"Stop Reservations\"\r\n                      onChange={() => this.restrictOrder(this.state.uid)}\r\n                    />\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mt-3 mt-md-0 mb-5\" xs=\"12\" md=\"9\">\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Vendor Details</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Row className=\" p-4\">\r\n                      <Button\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            modalShow: true\r\n                          });\r\n                        }}\r\n                        variant=\"primary\"\r\n                        className=\"mx-2\"\r\n                      >\r\n                        {this.state.is_verified\r\n                          ? \"Edit Processing Fee\"\r\n                          : \"Approve Verification\"}\r\n                      </Button>\r\n                      <Button\r\n                        onClick={this.deleteHandler}\r\n                        variant=\"danger\"\r\n                        className=\"mx-2\"\r\n                      >\r\n                        {this.state.is_verified\r\n                          ? \"Remove Vendor\"\r\n                          : \"Reject Verification\"}\r\n                      </Button>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <h3>Location</h3>\r\n                    <div className=\"map\">\r\n                      <h1>Map will be displayed here</h1>\r\n                    </div>\r\n                    <hr></hr>\r\n                    {reservationsToRender.length > 0 ? (\r\n                      <>\r\n                        <h3>Reservations</h3>\r\n                        <Table responsive striped hover>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Customer Name</th>\r\n                              <th>Reservation Time</th>\r\n                              <th>Date of Reservation</th>\r\n                              <th>Number of Attendees</th>\r\n                              <th>Number of Tables</th>\r\n                              <th>Status</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>{reservationsToRender}</tbody>\r\n                        </Table>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Reservations Found</p>\r\n                    )}\r\n                    <hr></hr>\r\n                    {this.state.reviews.length > 0 ? (\r\n                      <>\r\n                        <h3>Reviews</h3>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                          {this.state.reviews.map(element => {\r\n                            return (\r\n                              <Media as=\"li\">\r\n                                <img\r\n                                  width={64}\r\n                                  height={64}\r\n                                  className=\"mr-3\"\r\n                                  style={{ objectFit: \"cover\" }}\r\n                                  src={\r\n                                    element.customer.photo\r\n                                      ? element.customer.photo\r\n                                      : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                                  }\r\n                                  alt=\"Generic placeholder\"\r\n                                />\r\n                                <Media.Body>\r\n                                  <h5>{element.customer.name}</h5>\r\n                                  <Row className=\"media-stars \">\r\n                                    {element.array.map(star => {\r\n                                      return <ion-icon name={star}></ion-icon>;\r\n                                    })}\r\n                                  </Row>\r\n                                  <p>{element.comment}</p>\r\n                                </Media.Body>\r\n                              </Media>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Reviews for this Vendor</p>\r\n                    )}\r\n                    <hr></hr>\r\n                    {complaintsToRender.length > 0 ? (\r\n                      <>\r\n                        <h3>Complaints</h3>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                          {complaintsToRender}\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Complaints for this Vendor</p>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Processing Fee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  Processing Fee\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                type=\"number\"\r\n                onChange={e => {\r\n                  this.setState({\r\n                    newProFee: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={async () => {\r\n                if (this.state.is_verified) {\r\n                  await Firebase.updateProcessingFee(\r\n                    this.state.newProFee,\r\n                    this.state.uid\r\n                  );\r\n                } else {\r\n                  await Firebase.updateProcessingFeeAndVerify(\r\n                    this.state.newProFee,\r\n                    this.state.uid\r\n                  );\r\n                }\r\n                this.setState({ modalShow: false });\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              {this.state.is_verified ? \"Update\" : \"Verify\"}\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.setState({ modalShow: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Vendor));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport { Card, Pagination, Row, Media, Container } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\n\r\nclass Complaints extends Component {\r\n  redirectToVendor = async () => {\r\n    this.props.history.push(\"/admin/vendor\");\r\n  };\r\n  render() {\r\n    const complaintsToRender = this.props.complaints.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const condition = customer && vendor;\r\n      return condition ? (\r\n        <>\r\n          <Media as=\"li\">\r\n            <img\r\n              width={64}\r\n              height={64}\r\n              className=\"mr-3\"\r\n              style={{ objectFit: \"cover\" }}\r\n              src={\r\n                customer.photo\r\n                  ? customer.photo\r\n                  : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n              }\r\n              alt=\"Generic placeholder\"\r\n            />\r\n            <Media.Body>\r\n              <h5>{customer.name}</h5>\r\n              <Row className=\"ml-1\">\r\n                <h6 onClick={this.redirectToVendor}>{vendor.name}</h6>\r\n              </Row>\r\n              <Row className=\"ml-1\">\r\n                <h6 className=\"text-muted\">{element.title}</h6>\r\n              </Row>\r\n              <p>{element.description}</p>\r\n              <p>\r\n                Date of Complaint:{\" \"}\r\n                <small className=\"text-muted\">{element.date}</small>\r\n              </p>\r\n            </Media.Body>\r\n          </Media>\r\n          <hr></hr>\r\n        </>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Card className=\"my-3\">\r\n              <Card.Header>\r\n                <h1>Complaints</h1>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <ul className=\"list-unstyled mt-5\">{complaintsToRender}</ul>\r\n              </Card.Body>\r\n            </Card>\r\n          </Container>\r\n\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Complaints));\r\n","import React, { Component } from \"react\";\r\nimport { Container, Card, Table, Badge, Form, Col } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass Reservations extends Component {\r\n  state = {\r\n    vendor: \"\",\r\n    customer: \"\",\r\n    minDate: null,\r\n    maxDate: null,\r\n    vendorType: \"All\"\r\n  };\r\n  redirectToCustomer = async uid => {\r\n    this.props.history.push(\"/admin/customer/\" + uid);\r\n  };\r\n  render() {\r\n    const reservationsToRender = this.props.reservations.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n\r\n      const date = new Date(element.date);\r\n      const minDate = new Date(this.state.minDate);\r\n      const maxDate = new Date(this.state.maxDate);\r\n      const condition =\r\n        vendor.name\r\n          .toLowerCase()\r\n          .includes(this.state.vendor.toLowerCase(), 0) &&\r\n        (this.state.vendorType === \"All\" ||\r\n          this.state.vendorType === vendor.category) &&\r\n        customer.name\r\n          .toLowerCase()\r\n          .includes(this.state.customer.toLowerCase(), 0) &&\r\n        (!this.state.minDate ||\r\n          !this.state.maxDate ||\r\n          (date >= minDate && date <= maxDate));\r\n      const badgeVariant =\r\n        element.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : element.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return condition ? (\r\n        <tr onClick={() => this.redirectToCustomer(customer.uid)}>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={customer.photo}\r\n            ></img>\r\n          </td>\r\n          <td>{customer.name}</td>\r\n          <td>{vendor ? vendor.name : \"Vendor Deleted\"}</td>\r\n          <td>{element.time}</td>\r\n          <td>{element.date}</td>\r\n          <td>{element.attandee}</td>\r\n          <td>{Math.floor(Number(element.attandee / 5)) + 1}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{element.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Card className=\"my-3\">\r\n              <Card.Header>\r\n                <h1>Reservations</h1>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form.Row style={{ paddingTop: 10 }}>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Vendor Type</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={e =>\r\n                        this.setState({ vendorType: e.target.value })\r\n                      }\r\n                    >\r\n                      <option value=\"All\">All</option>\r\n                      <option value=\"Restaurants\">Restaurants</option>\r\n                      <option value=\"Cafes\">Cafes</option>\r\n                      <option value=\"Escape Rooms\">Escape Rooms</option>\r\n                      <option value=\"Events\">Events</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row style={{ paddingTop: 10 }}>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Vendor Name</Form.Label>\r\n                    <Form.Control\r\n                      onChange={e => this.setState({ vendor: e.target.value })}\r\n                      placeholder=\"Search By Vendor\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Customer Name</Form.Label>\r\n                    <Form.Control\r\n                      onChange={e =>\r\n                        this.setState({ customer: e.target.value })\r\n                      }\r\n                      placeholder=\"Search By Customer\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row style={{ paddingTop: 10 }}>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Min Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      onChange={e => this.setState({ minDate: e.target.value })}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} controlId=\"formGridCity\">\r\n                    <Form.Label>Max Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      onChange={e => this.setState({ maxDate: e.target.value })}\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Table responsive striped hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Customer Image</th>\r\n                      <th>Customer Name</th>\r\n                      <th>Vendor Name</th>\r\n                      <th>Reservation Time</th>\r\n                      <th>Date of Reservation</th>\r\n                      <th>Number of Attendees</th>\r\n                      <th>Number of Tables</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{reservationsToRender}</tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Reservations));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Media,\r\n  Badge\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass Customer extends Component {\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const customer = this.props.customers.find(\r\n      e => e.uid === this.props.match.params.uid\r\n    );\r\n    const reservations = this.props.reservations.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const complaints = this.props.complaints.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const reviews = this.props.reviews.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const reservationsToRender = reservations.map(reservation => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === reservation.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        reservation.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : reservation.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.clickHandler(vendor.uid)}>\r\n          <td>\r\n            <img\r\n              src={vendor ? vendor.photo_url : \"\"}\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                objectFit: \"cover\",\r\n                borderRadius: 40\r\n              }}\r\n            ></img>\r\n          </td>\r\n          <td>{vendor ? vendor.name : \"Vendor Deleted\"}</td>\r\n          <td>{reservation.time}</td>\r\n          <td>{reservation.date}</td>\r\n          <td>{reservation.attandee}</td>\r\n          <td>{Math.floor(Number(reservation.attandee / 5)) + 1}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{reservation.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    const reviewsToRender = reviews.map(review => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === review.restaurant_uid\r\n      );\r\n\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, review.rating);\r\n      return (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              vendor.photo_url\r\n                ? vendor.photo_url\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{vendor.name}</h5>\r\n            <Row className=\"media-stars \">\r\n              {array.map(e => (\r\n                <ion-icon name={e}></ion-icon>\r\n              ))}\r\n            </Row>\r\n            <p>{review.comment}</p>\r\n          </Media.Body>\r\n        </Media>\r\n      );\r\n    });\r\n    const complaintsToRender = complaints.map(complaint => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === complaint.restaurant_uid\r\n      );\r\n\r\n      return (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              vendor.photo_url\r\n                ? vendor.photo_url\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{vendor.name}</h5>\r\n            <Row className=\"ml-1\">\r\n              <h6 className=\"text-muted\">{vendor.title}</h6>\r\n            </Row>\r\n            <p>{complaint.description}</p>\r\n            <p>\r\n              Date of Complaint:{\" \"}\r\n              <small className=\"text-muted\">{complaint.date}</small>\r\n            </p>\r\n          </Media.Body>\r\n        </Media>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Row>\r\n              <Col xs=\"12\" md=\"3\">\r\n                <Card>\r\n                  <Card.Body>\r\n                    <img\r\n                      style={{ width: \"100%\", height: 200, objectFit: \"cover\" }}\r\n                      src={customer.photo}\r\n                    ></img>\r\n                    <hr></hr>\r\n                    <p className=\"h5\">{customer.name}</p>\r\n                    <hr></hr>\r\n                    <p className=\"h6\">\r\n                      Phone:{\" \"}\r\n                      <span className=\"text-muted\">{customer.number}</span>\r\n                    </p>\r\n                    <p className=\"h6\">\r\n                      Email:{\" \"}\r\n                      <span className=\"text-muted\">{customer.email}</span>\r\n                    </p>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"mt-3 mt-md-0 mb-5\" xs=\"12\" md=\"9\">\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Customer History</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <h3>Reservations</h3>\r\n                    <Table responsive striped hover>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Image</th>\r\n                          <th>Vendor Name</th>\r\n                          <th>Reservation Time</th>\r\n                          <th>Date of Registration</th>\r\n                          <th>Number of Attendees</th>\r\n                          <th>Number of Tables</th>\r\n                          <th>Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>{reservationsToRender}</tbody>\r\n                    </Table>\r\n\r\n                    <hr></hr>\r\n                    {reviewsToRender.length > 0 ? (\r\n                      <>\r\n                        <h3>Reviews</h3>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                          {reviewsToRender}\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Reviews by this customer</p>\r\n                    )}\r\n                    <hr></hr>\r\n\r\n                    {complaintsToRender.length > 0 ? (\r\n                      <>\r\n                        <h3>Complaints</h3>\r\n                        <ul className=\"list-unstyled mt-5\">\r\n                          {complaintsToRender}\r\n                        </ul>\r\n                      </>\r\n                    ) : (\r\n                      <p>No Complaints by this customer</p>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Customer));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Table,\r\n  Badge,\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Modal,\r\n  Spinner\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport \"./DiscountVouchers.css\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass DiscountVouchers extends Component {\r\n  state = {\r\n    code: \"\",\r\n    expDate: \"\",\r\n    maxUses: 0,\r\n    vendor_type: \"Restaurants\",\r\n    show: false,\r\n    selected_uid: \"\",\r\n    isAdding: false,\r\n    percentage: 0\r\n  };\r\n  showModal = () => {\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n  add = async () => {\r\n    this.setState({\r\n      isAdding: true\r\n    });\r\n    await Firebase.addDiscountVoucher(\r\n      this.state.code,\r\n      this.state.expDate,\r\n      this.state.maxUses,\r\n      this.state.vendor_type,\r\n      this.state.percentage\r\n    );\r\n    window.location.reload();\r\n  };\r\n  handler = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  dateHandler = e => {\r\n    const splitDate = e.target.value.split(\"-\");\r\n\r\n    this.setState({\r\n      expDate: splitDate[2] + \"/\" + splitDate[1] + \"/\" + splitDate[0]\r\n    });\r\n  };\r\n  block = async (uid, value) => {\r\n    await Firebase.updateDiscountVoucher(uid, !value);\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.map(e => {\r\n      return <option value={e.uid}>{e.name}</option>;\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Card className=\"my-3\">\r\n              <Card.Header>\r\n                <h1>Discount Vouchers</h1>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <Form>\r\n                  <legend className=\"h4\">Add Discount Voucher</legend>\r\n                  <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                      <Form.Label>Code</Form.Label>\r\n                      <Form.Control\r\n                        onChange={e => this.handler(\"code\", e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Code\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} controlId=\"expiryDate\">\r\n                      <Form.Label>Expiry Date</Form.Label>\r\n                      <Form.Control\r\n                        onChange={this.dateHandler}\r\n                        type=\"date\"\r\n                        placeholder=\"Expiry Date\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label>Vendor Type</Form.Label>\r\n                    <Form.Control\r\n                      onChange={e =>\r\n                        this.handler(\"vendor_type\", e.target.value)\r\n                      }\r\n                      as=\"select\"\r\n                    >\r\n                      <option value={\"Restaurants\"}>{\"Restaurants\"}</option>\r\n                      <option value={\"Cafes\"}>{\"Cafes\"}</option>\r\n                      <option value={\"Escape Rooms\"}>{\"Escape Rooms\"}</option>\r\n                      <option value={\"Events\"}>{\"Events\"}</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formGridPassword\">\r\n                    <Form.Label>Max Number of Uses</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"Max Uses\"\r\n                      value={this.state.maxUses}\r\n                      onChange={e => {\r\n                        if (e.target.value >= 0) {\r\n                          this.handler(\"maxUses\", e.target.value);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formGridPassword\">\r\n                    <Form.Label>Discount Percentage</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"Discount Percentage\"\r\n                      value={this.state.percentage}\r\n                      onChange={e => {\r\n                        if (e.target.value >= 0 && e.target.value <= 100) {\r\n                          this.handler(\"percentage\", e.target.value);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button\r\n                    onClick={this.add}\r\n                    block\r\n                    variant=\"primary\"\r\n                    type=\"button\"\r\n                  >\r\n                    {this.state.isAdding ? (\r\n                      <Spinner animation=\"border\" variant=\"primary\" />\r\n                    ) : (\r\n                      \"Add New Voucher\"\r\n                    )}\r\n                  </Button>\r\n                </Form>\r\n                <hr></hr>\r\n                <Table striped hover responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Code</th>\r\n                      <th>Times Used</th>\r\n                      <th>Max Uses</th>\r\n                      <th>Expiry Date</th>\r\n                      <th>Vendor Type</th>\r\n                      <th>Discount Percentage</th>\r\n                      <th>Status</th>\r\n                      <th>Change Status</th>\r\n                      <th>Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.props.vouchers.map(element => {\r\n                      const date = new Date();\r\n                      const splitExpDate = element.expDate.split(\"/\");\r\n                      const expDate = new Date(\r\n                        Number(splitExpDate[2]),\r\n                        Number(splitExpDate[1]) - 1,\r\n                        Number(splitExpDate[0])\r\n                      );\r\n                      const condition =\r\n                        element.isBlocked ||\r\n                        Number(element.maxUses) <=\r\n                          Number(element.numberOfUses) ||\r\n                        date > expDate;\r\n                      return (\r\n                        <tr>\r\n                          <td>{element.code}</td>\r\n                          <td>{element.numberOfUses}</td>\r\n\r\n                          <td>{element.maxUses}</td>\r\n                          <td>{element.expDate}</td>\r\n                          <td>{element.vendor_type}</td>\r\n                          <td>{element.percentage}%</td>\r\n                          <td>\r\n                            <Badge variant={condition ? \"danger\" : \"success\"}>\r\n                              {condition ? \"Unavailable\" : \"Available\"}\r\n                            </Badge>\r\n                          </td>\r\n                          <td\r\n                            onClick={() => {\r\n                              this.block(element.uid, element.isBlocked);\r\n                            }}\r\n                          >\r\n                            <ion-icon\r\n                              class={\r\n                                condition\r\n                                  ? \"blockButton text-success\"\r\n                                  : \"blockButton text-danger\"\r\n                              }\r\n                              name={\r\n                                condition\r\n                                  ? \"checkmark-circle-outline\"\r\n                                  : \"close-circle-outline\"\r\n                              }\r\n                            ></ion-icon>\r\n                          </td>\r\n                          <td\r\n                            onClick={async () => {\r\n                              this.setState({\r\n                                selected_uid: element.uid\r\n                              });\r\n                              this.showModal();\r\n                            }}\r\n                          >\r\n                            <ion-icon\r\n                              class=\"blockButton text-danger\"\r\n                              name=\"trash-outline\"\r\n                            ></ion-icon>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n        <Modal\r\n          centered\r\n          show={this.state.show}\r\n          onHide={this.showModal}\r\n          animation={true}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Are you sure you want to delete this voucher?\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={async () => {\r\n                await Firebase.deleteDiscount(this.state.selected_uid);\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              Yes\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={this.showModal}>\r\n              No\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DiscountVouchers);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Carousel,\r\n  Spinner\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\n\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nclass Slideshow extends Component {\r\n  state = {\r\n    file: null,\r\n    vendor_uid: \"\",\r\n    isAdding: false\r\n  };\r\n  handler = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  add = async () => {\r\n    this.setState({\r\n      isAdding: true\r\n    });\r\n    const fileNameSplit = this.state.file.name.split(\".\");\r\n    const extension = fileNameSplit[fileNameSplit.length - 1];\r\n    await Firebase.addSlideShow(\r\n      this.state.file,\r\n      extension,\r\n      this.state.vendor_uid\r\n    );\r\n    window.location.reload();\r\n  };\r\n  fileHandler = e => {\r\n    this.setState({\r\n      file: e.target.files[0]\r\n    });\r\n  };\r\n  delete = async uid => {\r\n    await Firebase.deleteSlideshow(uid);\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.map(e => {\r\n      return <option value={e.uid}>{e.name}</option>;\r\n    });\r\n    const slideshows = this.props.slideshows.map(e => {\r\n      const vendor = this.props.vendors.find(v => v.uid === e.vendor_uid);\r\n      return (\r\n        <Carousel.Item>\r\n          <img\r\n            style={{\r\n              height: 500,\r\n              objectFit: \"cover\"\r\n            }}\r\n            className=\"d-block w-100\"\r\n            src={e.image_url}\r\n          />\r\n          <Carousel.Caption\r\n            style={{\r\n              background: \"rgba(0,0,0,0.5)\",\r\n              padding: 10,\r\n              borderRadius: 10\r\n            }}\r\n          >\r\n            <h3>{vendor.name}</h3>\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"button\"\r\n              style={{\r\n                margin: 15\r\n              }}\r\n              onClick={() => this.delete(e.uid)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Row className=\"justify-content-center\">\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Slideshow</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    {slideshows.length > 0 ? (\r\n                      <Carousel>{slideshows}</Carousel>\r\n                    ) : (\r\n                      <p>No Slideshows have been added yet</p>\r\n                    )}\r\n                    <hr></hr>\r\n                    <Form>\r\n                      <legend className=\"h4\">Add New Banner</legend>\r\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Vendor</Form.Label>\r\n                        <Form.Control\r\n                          onChange={e =>\r\n                            this.handler(\"vendor_uid\", e.target.value)\r\n                          }\r\n                          as=\"select\"\r\n                        >\r\n                          {vendors}\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId=\"formGridPassword\">\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control\r\n                          onChange={this.fileHandler}\r\n                          type=\"file\"\r\n                          placeholder=\"Image\"\r\n                          accept=\"image/*\"\r\n                        />\r\n                      </Form.Group>\r\n                      <Button\r\n                        onClick={this.add}\r\n                        block\r\n                        variant=\"primary\"\r\n                        type=\"button\"\r\n                      >\r\n                        {this.state.isAdding ? (\r\n                          <Spinner animation=\"border\" variant=\"primary\" />\r\n                        ) : (\r\n                          \"Add Banner\"\r\n                        )}\r\n                      </Button>\r\n                    </Form>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Footer></Footer>\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Slideshow));\r\n","import { VendorActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst vendorMapStateToProps = state => {\r\n  return state.VendorReducer;\r\n};\r\nconst vendorMapDispatchToProps = dispatch => {\r\n  return {\r\n    updateLogin: user =>\r\n      dispatch({\r\n        type: VendorActionTypes.VENDOR_UPDATE_LOGIN_STATUS,\r\n        payload: user\r\n      }),\r\n    updateNotifications: notifications =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_NOTIFICATIONS,\r\n        payload: notifications\r\n      }),\r\n    updateReservations: reservations =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_RESERVATIONS,\r\n        payload: reservations\r\n      }),\r\n    updateReviews: reviews =>\r\n      dispatch({ type: VendorActionTypes.UPDATE_REVIEWS, payload: reviews }),\r\n    updateCustomers: customers =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_CUSTOMERS,\r\n        payload: customers\r\n      }),\r\n    updateCategories: categories =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_CATEGORIES,\r\n        payload: categories\r\n      }),\r\n    updateDishes: dishes =>\r\n      dispatch({ type: VendorActionTypes.UPDATE_DISHES, payload: dishes }),\r\n    updateRegistrationSocial: socialInfo =>\r\n      dispatch({\r\n        type: VendorActionTypes.UPDATE_REGISTRATION_SOCIAL,\r\n        payload: socialInfo\r\n      })\r\n  };\r\n};\r\nexport { vendorMapDispatchToProps, vendorMapStateToProps };\r\n","import React, { Component } from \"react\";\r\nimport { Container, Form, Button, Modal } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport Logo from \"../../../Images/logo.png\";\r\nimport \"./Login.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    forgotMail: \"\",\r\n    forgotModal: false,\r\n    phoneModal: false,\r\n    phone: \"\"\r\n  };\r\n  setForgotModal = () => {\r\n    this.setState({\r\n      forgotModal: !this.state.forgotModal\r\n    });\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  sendResetPasswordLink = async () => {\r\n    const vendorFound = await Firebase.checkIfVendorExists(this.state.email);\r\n    if (vendorFound) {\r\n      await Firebase.forgotPassword(this.state.forgotMail);\r\n      alert(\r\n        \"An email with the reset password link has been sent to your account\"\r\n      );\r\n    } else {\r\n      alert(\"No account with this email has been registered!\");\r\n    }\r\n  };\r\n  facebookLogin = async () => {\r\n    const response = await Firebase.loginVendorFacebook();\r\n    if (response.message === \"User Found\") {\r\n      this.props.updateLogin(response.result);\r\n      setVendor(response.result);\r\n      window.location.reload();\r\n    } else {\r\n      this.props.updateRegistrationSocial({\r\n        name: response.result.displayName,\r\n        email: response.result.email,\r\n        uid: response.result.uid,\r\n        photoUrl: response.result.photoURL\r\n      });\r\n      this.props.history.push(\"/vendor/registersocial\");\r\n    }\r\n  };\r\n  googleLogin = async () => {\r\n    const response = await Firebase.loginVendorGoogle();\r\n    if (response.message === \"User Found\") {\r\n      this.props.updateLogin(response.result);\r\n      setVendor(response.result);\r\n      window.location.reload();\r\n    } else {\r\n      this.props.updateRegistrationSocial({\r\n        name: response.result.displayName,\r\n        email: response.result.email,\r\n        uid: response.result.uid,\r\n        photoUrl: response.result.photoURL\r\n      });\r\n      this.props.history.push(\"/vendor/registersocial\");\r\n    }\r\n  };\r\n  login = async () => {\r\n    const user = await Firebase.loginVendor(\r\n      this.state.email,\r\n      this.state.password\r\n    );\r\n    if (user) {\r\n      this.props.updateLogin(user);\r\n      setVendor(user);\r\n      // this.props.history.push(\"/vendor/home\");\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Login Unsuccessful\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row style={{ minHeight: \"100vh\" }}>\r\n          <Col\r\n            xs=\"12\"\r\n            md=\"6\"\r\n            className=\"d-none d-md-flex\"\r\n            style={{\r\n              background: \"white\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\"\r\n            }}\r\n          >\r\n            <img\r\n              style={{ width: \"50%\", objectFit: \"contain\" }}\r\n              src={Logo}\r\n            ></img>\r\n          </Col>\r\n          <Col\r\n            xs=\"12\"\r\n            md=\"6\"\r\n            style={{\r\n              background: \"#ba0fb4\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\"\r\n            }}\r\n          >\r\n            <Form\r\n              style={{\r\n                background: \"#fff\",\r\n                padding: 20,\r\n                borderRadius: 8,\r\n                width: \"90%\"\r\n              }}\r\n            >\r\n              <legend style={{ marginBottom: 40, textAlign: \"center\" }}>\r\n                Login to your Vendor Account\r\n              </legend>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  name=\"email\"\r\n                  onChange={this.inputHandler}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ marginBottom: 20 }}\r\n                controlId=\"formBasicPassword\"\r\n              >\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  name=\"password\"\r\n                  onChange={this.inputHandler}\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Group>\r\n              <Button\r\n                onClick={this.login}\r\n                block\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n              >\r\n                Login\r\n              </Button>\r\n              {/* <Button\r\n                onClick={this.login}\r\n                block\r\n                variant=\"primary\"\r\n                type=\"button\"\r\n              >\r\n                Login by Phonenumber\r\n              </Button> */}\r\n              <p onClick={this.setForgotModal} className=\"forgot-link\">\r\n                Forgot your password?\r\n              </p>\r\n              <Row className=\"align-middle\" style={{ marginTop: 10 }}>\r\n                <Col xs=\"5\">\r\n                  <hr></hr>\r\n                </Col>\r\n                <Col xs=\"2\" className=\"text-center text-muted\">\r\n                  or\r\n                </Col>\r\n                <Col xs=\"5\">\r\n                  <hr></hr>\r\n                </Col>\r\n              </Row>\r\n              <Row style={{ marginTop: 20 }}>\r\n                <Col>\r\n                  <Button\r\n                    onClick={this.facebookLogin}\r\n                    block\r\n                    className=\"facebook bg-primary \"\r\n                    type=\"button\"\r\n                  >\r\n                    Facebook Login\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    onClick={this.googleLogin}\r\n                    block\r\n                    className=\"google bg-success\"\r\n                    type=\"button\"\r\n                  >\r\n                    Google Login\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <hr style={{ marginTop: 30, marginBottom: 20 }}></hr>\r\n              <p className=\"text-center\">\r\n                Don't have an account?{\" \"}\r\n                <Link to=\"/vendor/register\">Click here to Register</Link>\r\n              </p>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        <Modal\r\n          show={this.state.forgotModal}\r\n          size=\"lg\"\r\n          onHide={this.setForgotModal}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header>\r\n            <h4>Forgot your password</h4>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                name=\"forgotMail\"\r\n                onChange={this.inputHandler}\r\n                type=\"email\"\r\n                value={this.state.forgotMail}\r\n                placeholder=\"Enter email\"\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.sendResetPasswordLink}>\r\n              Send Confirmation Email\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={this.setForgotModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(withRouter(Login));\r\n","import React, { Component } from \"react\";\r\nimport \"./VendorSidebar.css\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Badge, Dropdown } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../Config/VendorMapping\";\r\nimport Firebase from \"../../Firebase/Firebase\";\r\nimport { removeVendor } from \"../../Config/localStorage\";\r\nclass VendorSidebar extends Component {\r\n  updateNotifications = async (notification_key, link) => {\r\n    await Firebase.updateNotificationSeen(\r\n      this.props.vendor.uid,\r\n      notification_key\r\n    );\r\n    this.props.history.push(link);\r\n  };\r\n  logout = async () => {\r\n    await Firebase.logout();\r\n    removeVendor();\r\n    this.props.updateLogin(null);\r\n    this.props.history.push(\"/vendor/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light fixed-top bg-white\">\r\n          <Link className=\"navbar-brand\" to=\"/vendor/\">\r\n            <img style={{ width: \"80px\" }} src={Logo}></img>\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarCollapse\"\r\n            aria-controls=\"navbarCollapse\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon \"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n            <ul\r\n              className=\"navbar-nav mr-auto vendor-sidebar h-100 bg-white\"\r\n              id=\"navAccordion\"\r\n            >\r\n              <li className=\"nav-item active\">\r\n                <div className=\"d-none d-md-flex usaneTitle\">\r\n                  <Link\r\n                    className=\"d-flex justify-content-center align-items-center\"\r\n                    to=\"/vendor/\"\r\n                  >\r\n                    <img style={{ width: \"80%\" }} src={Logo}></img>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"mx-3\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/vendor/\" className=\"nav-link nav-link-custom \">\r\n                      <span className=\"ml-2\">Dashboard</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  {this.props.vendor.category === \"Restaurants\" ||\r\n                  this.props.vendor.category === \"Cafes\" ? (\r\n                    <li className=\"nav-item\">\r\n                      <Link\r\n                        to=\"/vendor/menu\"\r\n                        className=\"nav-link nav-link-custom \"\r\n                      >\r\n                        <span className=\"ml-2\">Menu</span>\r\n                        <div className=\"hr\"></div>\r\n                      </Link>\r\n                    </li>\r\n                  ) : null}\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/upcoming\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Upcoming Reservations</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/past\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Past Reservations</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/reviews\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Reviews & Ratings</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      to=\"/vendor/profile\"\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Profile Setting</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link\r\n                      onClick={this.logout}\r\n                      className=\"nav-link nav-link-custom \"\r\n                    >\r\n                      <span className=\"ml-2\">Logout</span>\r\n                      <div className=\"hr\"></div>\r\n                    </Link>\r\n                  </li>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-inline ml-auto mt-2 mt-md-0\"></form>\r\n            <div className=\"d-flex align-items-center p-2\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle\r\n                  style={{ width: 35 }}\r\n                  variant=\"link\"\r\n                  id=\"dropdown-basic\"\r\n                >\r\n                  <img\r\n                    style={{\r\n                      width: \"35px\",\r\n                      objectFit: \"cover\",\r\n                      height: \"35px\",\r\n                      borderRadius: \"35px\",\r\n                      border: \"solid 1px #ba0fb4\"\r\n                    }}\r\n                    src={\r\n                      this.props.vendor.photo_url\r\n                        ? this.props.vendor.photo_url\r\n                        : \"https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg-1024x683.jpg\"\r\n                    }\r\n                  ></img>\r\n                  <Badge\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 2,\r\n                      left: 28,\r\n                      height: 14,\r\n                      width: 14,\r\n                      borderRadius: 14,\r\n                      background: \"#ba0fb4\",\r\n                      color: \"#fff\",\r\n                      fontWeight: \"bold\"\r\n                    }}\r\n                    pill\r\n                  >\r\n                    {this.props.notifications.length}\r\n                  </Badge>\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  {this.props.notifications.length === 0 ? (\r\n                    <Dropdown.Item>No notifications</Dropdown.Item>\r\n                  ) : (\r\n                    this.props.notifications.map(element => (\r\n                      <Dropdown.Item\r\n                        onClick={async () =>\r\n                          await this.updateNotifications(\r\n                            element.notification_key,\r\n                            \"/vendor/\"\r\n                          )\r\n                        }\r\n                      >\r\n                        {element.message}\r\n                      </Dropdown.Item>\r\n                    ))\r\n                  )}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <main className=\"custom-content-wrapper\">\r\n          <div className=\"container\">{this.props.children}</div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(\r\n  connect(vendorMapStateToProps, vendorMapDispatchToProps)(VendorSidebar)\r\n);\r\n","const getMonth = month => {\r\n  switch (month) {\r\n    case 0:\r\n      return \"Jan\";\r\n    case 1:\r\n      return \"Feb\";\r\n    case 2:\r\n      return \"Mar\";\r\n    case 3:\r\n      return \"Apr\";\r\n    case 4:\r\n      return \"May\";\r\n    case 5:\r\n      return \"Jun\";\r\n    case 6:\r\n      return \"Jul\";\r\n    case 7:\r\n      return \"Aug\";\r\n    case 8:\r\n      return \"Sep\";\r\n    case 9:\r\n      return \"Oct\";\r\n    case 10:\r\n      return \"Nov\";\r\n    case 11:\r\n      return \"Dec\";\r\n  }\r\n};\r\nexport default getMonth;\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport \"rc-time-picker/assets/index.css\";\r\nimport TimePicker from \"rc-time-picker\";\r\n\r\nimport {\r\n  Container,\r\n  Col,\r\n  Row,\r\n  Card,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Form,\r\n  Table,\r\n  Modal\r\n} from \"react-bootstrap\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label\r\n} from \"recharts\";\r\nimport \"./Home.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapDispatchToProps,\r\n  vendorMapStateToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport getMonth from \"../../../Config/Date\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\n\r\nconst format = \"h:mm a\";\r\nclass Home extends Component {\r\n  state = {\r\n    available: 0,\r\n    numberOfTables: 0,\r\n    tableFee: 0,\r\n    reservationFee: 0,\r\n    addRoomModalVisible: false,\r\n    addRoomName: \"\",\r\n    addRoomDescription: \"\",\r\n    addRoomTotalParticipants: 0,\r\n    addRoomImage: null,\r\n    addTimeSlotSlot: \"\",\r\n    addTimeSlotRoom: \"\",\r\n    addTimeSlotModal: false,\r\n    editRoomDescription: \"\",\r\n    editRoomKey: \"\",\r\n    editRoomModal: false\r\n  };\r\n  addRoom = async () => {\r\n    await Firebase.addRoom(\r\n      this.props.vendor.uid,\r\n      this.state.addRoomName,\r\n      this.state.addRoomDescription,\r\n      this.state.addRoomImage,\r\n      this.state.addRoomTotalParticipants\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    window.location.reload();\r\n  };\r\n  addRoomTimeSlot = async () => {\r\n    await Firebase.addRoomTimeSlot(\r\n      this.props.vendor.uid,\r\n      this.state.addTimeSlotRoom,\r\n      this.state.addTimeSlotSlot\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    window.location.reload();\r\n  };\r\n  setAddRoomModelVisible = () => {\r\n    this.setState({\r\n      addRoomModalVisible: !this.state.addRoomModalVisible\r\n    });\r\n  };\r\n  setEditRoomModalVisible = () => {\r\n    this.setState({\r\n      editRoomModal: !this.state.editRoomModal\r\n    });\r\n  };\r\n  hide = async (room_key, time_slot_key, value) => {\r\n    await Firebase.hideUnhideRoomTimeSlot(\r\n      this.props.vendor.uid,\r\n      room_key,\r\n      time_slot_key,\r\n      value\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    setVendor(vendor);\r\n    this.props.updateLogin(vendor);\r\n  };\r\n  delete = async (room_key, time_slot_key) => {\r\n    await Firebase.deleteRoomTimeSlot(\r\n      this.props.vendor.uid,\r\n      room_key,\r\n      time_slot_key\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    setVendor(vendor);\r\n    this.props.updateLogin(vendor);\r\n  };\r\n  deleteRoom = async room_key => {\r\n    await Firebase.deleteRoom(this.props.vendor.uid, room_key);\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    setVendor(vendor);\r\n    this.props.updateLogin(vendor);\r\n  };\r\n  setAddTimeSlotModelVisible = () => {\r\n    this.setState({\r\n      addTimeSlotModal: !this.state.addTimeSlotModal\r\n    });\r\n  };\r\n  editRoomDescription = async () => {\r\n    await Firebase.editRoomDescription(\r\n      this.props.vendor.uid,\r\n      this.state.editRoomKey,\r\n      this.state.editRoomDescription\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    setVendor(vendor);\r\n    this.props.updateLogin(vendor);\r\n    window.location.reload();\r\n  };\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      available: this.props.vendor.instant_data\r\n        ? this.props.vendor.instant_data.available\r\n        : 0,\r\n      numberOfTables: this.props.vendor.instant_data\r\n        ? this.props.vendor.instant_data.number_of_tables\r\n        : 0,\r\n      tableFee: this.props.vendor.instant_data\r\n        ? this.props.vendor.instant_data.table_fee\r\n        : 0\r\n    });\r\n  };\r\n  updateRestrictOrder = async () => {\r\n    await Firebase.restrictOrder(\r\n      !this.props.vendor.is_restrict_order,\r\n      this.props.vendor.uid\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n  };\r\n  updateClose = async () => {\r\n    await Firebase.updateReservationClose(\r\n      this.props.vendor.uid,\r\n      !this.props.vendor.close\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n  };\r\n  availableChangeHandler = e => {\r\n    const date = new Date();\r\n    const reservationsForToday = this.props.reservations.filter(\r\n      e =>\r\n        e.date ===\r\n        getMonth(date.getMonth()) +\r\n          \" \" +\r\n          date.getDate() +\r\n          \", \" +\r\n          date.getFullYear()\r\n    );\r\n    if (e.target.value < reservationsForToday.length) {\r\n      alert(\r\n        \"You can't set available reservations to less than than \" +\r\n          reservationsForToday.length\r\n      );\r\n      this.setState({\r\n        available: this.props.vendor.instant_data\r\n          ? this.props.vendor.instant_data.available\r\n          : 0\r\n      });\r\n    } else {\r\n      this.setState({\r\n        available: e.target.value\r\n      });\r\n    }\r\n  };\r\n  submitAvailableChanges = async () => {\r\n    await Firebase.updateAvailable(this.props.vendor.uid, this.state.available);\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n  };\r\n  updateEvents = async () => {\r\n    await Firebase.updateEventsInstant(\r\n      this.props.vendor.uid,\r\n      this.state.available,\r\n      this.state.numberOfTables,\r\n      this.state.tableFee\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    window.location.reload();\r\n  };\r\n  updateEventsReservationFee = async () => {\r\n    await Firebase.updateEventsReservationFee(\r\n      this.props.vendor.uid,\r\n      this.state.reservationFee\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    window.location.reload();\r\n  };\r\n  inputHandler = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  handler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  filehandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0]\r\n    });\r\n  };\r\n  render() {\r\n    const date = new Date();\r\n\r\n    const todayReservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrowReservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow2Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow3Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow4Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow5Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    date.setDate(date.getDate() + 1);\r\n    const tommorrow6Reservations = {\r\n      name:\r\n        getMonth(date.getMonth()) +\r\n        \" \" +\r\n        date.getDate() +\r\n        \", \" +\r\n        date.getFullYear(),\r\n      reservations: this.props.reservations.filter(\r\n        e =>\r\n          e.date ===\r\n          getMonth(date.getMonth()) +\r\n            \" \" +\r\n            date.getDate() +\r\n            \", \" +\r\n            date.getFullYear()\r\n      ).length\r\n    };\r\n    const data = [\r\n      todayReservations,\r\n      tommorrowReservations,\r\n      tommorrow2Reservations,\r\n      tommorrow3Reservations,\r\n      tommorrow4Reservations,\r\n      tommorrow5Reservations,\r\n      tommorrow6Reservations\r\n    ];\r\n    const ajKiDate = new Date();\r\n    const ajKiReservations = this.props.reservations.filter(e => {\r\n      console.log(e);\r\n      return (\r\n        e.date ===\r\n        getMonth(ajKiDate.getMonth()) +\r\n          \" \" +\r\n          ajKiDate.getDate() +\r\n          \", \" +\r\n          ajKiDate.getFullYear()\r\n      );\r\n    });\r\n    let rooms = [];\r\n    if (\r\n      this.props.vendor.category === \"Escape Rooms\" &&\r\n      this.props.vendor.instant_data\r\n    ) {\r\n      rooms = Object.keys(this.props.vendor.instant_data).map(element => {\r\n        let time_slots = [];\r\n        if (this.props.vendor.instant_data[element].time_slots) {\r\n          time_slots = Object.keys(\r\n            this.props.vendor.instant_data[element].time_slots\r\n          ).map(t => {\r\n            const reservedBy = ajKiReservations.find(reserves => {\r\n              return (\r\n                reserves.reservation_for ===\r\n                  this.props.vendor.instant_data[element].name &&\r\n                reserves.time ===\r\n                  this.props.vendor.instant_data[element][t].time_slot\r\n              );\r\n            });\r\n            return {\r\n              ...this.props.vendor.instant_data[element].time_slots[t],\r\n              reservedBy\r\n            };\r\n          });\r\n        }\r\n        return {\r\n          ...this.props.vendor.instant_data[element],\r\n          time_slots\r\n        };\r\n      });\r\n    }\r\n    const reservationsToRender = ajKiReservations.map(e => {\r\n      const customer = this.props.customers.find(c => c.uid === e.customer_uid);\r\n      return (\r\n        <tr>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 50,\r\n                height: 50,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={\r\n                customer && customer.photo_url\r\n                  ? customer.photo_url\r\n                  : \"https://img.pngio.com/profile-icon-png-image-free-download-searchpngcom-profile-icon-png-673_673.png\"\r\n              }\r\n            ></img>\r\n          </td>\r\n          <td colSpan=\"4\">\r\n            <strong>Customer Name: </strong>{\" \"}\r\n            {customer.name ? customer.name : \"Customer has been deleted\"}\r\n            <br></br>\r\n            <strong>Reservation Time: </strong> {e.time}\r\n            <br></br>\r\n            <strong>Number of Attendees: </strong> {e.attandee}\r\n            <br></br>\r\n            <strong>Number of Tables: </strong>{\" \"}\r\n            {Math.floor(Number(e.attandee / 5)) + 1}\r\n            <br></br>\r\n            <strong>Status of Reservation: </strong> {e.status}\r\n            <br></br>\r\n            <strong>Customer Phone number: </strong> {customer.number}\r\n            <br></br>\r\n            <strong>Customer Email: </strong> {customer.email}\r\n            <br></br>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Dashboard</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <h3 className=\"mt-2\">Edit Reservations</h3>\r\n                    {this.props.vendor.category === \"Restaurants\" ||\r\n                    this.props.vendor.category === \"Cafes\" ? (\r\n                      <>\r\n                        <p>Number of available Reservations</p>\r\n                        <InputGroup className=\"mt-3\">\r\n                          <FormControl\r\n                            placeholder=\"Number available reservations for today\"\r\n                            type=\"number\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            value={this.state.available}\r\n                            onChange={this.availableChangeHandler}\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              onClick={this.submitAvailableChanges}\r\n                              variant=\"primary\"\r\n                            >\r\n                              Confirm Change\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <Form.Check\r\n                          type=\"switch\"\r\n                          checked={this.props.vendor.is_restrict_order}\r\n                          onClick={this.updateRestrictOrder}\r\n                          className=\"mt-2 ml-1\"\r\n                          id=\"custom-switch\"\r\n                          label=\"Stop Orders\"\r\n                        />\r\n                      </>\r\n                    ) : null}\r\n\r\n                    <Form.Check\r\n                      type=\"switch\"\r\n                      checked={this.props.vendor.close}\r\n                      onClick={this.updateClose}\r\n                      className=\"mt-2 mb-4 ml-1\"\r\n                      id=\"another-switch\"\r\n                      label=\"Stop Reservations\"\r\n                    />\r\n                    {this.props.vendor.category === \"Events\" ? (\r\n                      <>\r\n                        <p className=\"my-3\">Total Tickets Available</p>\r\n                        <InputGroup className=\"mt-3\">\r\n                          <FormControl\r\n                            placeholder=\"Total Tickets Available\"\r\n                            type=\"number\"\r\n                            value={this.state.available}\r\n                            onChange={e =>\r\n                              this.inputHandler(\"available\", e.target.value)\r\n                            }\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              onClick={this.updateEvents}\r\n                              variant=\"primary\"\r\n                            >\r\n                              Confirm Change\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <p className=\"my-3\">Total Tables Available</p>\r\n                        <InputGroup className=\"mt-3\">\r\n                          <FormControl\r\n                            placeholder=\"Total Tables Available\"\r\n                            type=\"number\"\r\n                            value={this.state.numberOfTables}\r\n                            onChange={e =>\r\n                              this.inputHandler(\r\n                                \"numberOfTables\",\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              onClick={this.updateEvents}\r\n                              variant=\"primary\"\r\n                            >\r\n                              Confirm Change\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <p className=\"my-3\">Table Reservation Fee</p>\r\n                        <InputGroup className=\"mt-3\">\r\n                          <FormControl\r\n                            placeholder=\"Table Reservation Fee\"\r\n                            type=\"number\"\r\n                            value={this.state.tableFee}\r\n                            onChange={e =>\r\n                              this.inputHandler(\"tableFee\", e.target.value)\r\n                            }\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              onClick={this.updateEvents}\r\n                              variant=\"primary\"\r\n                            >\r\n                              Confirm Change\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                      </>\r\n                    ) : null}\r\n                    <hr></hr>\r\n                    {this.props.vendor.category === \"Escape Rooms\" ? (\r\n                      <>\r\n                        <h3 className=\"mt-2\">Upcoming Reservations</h3>\r\n                        <Card className=\"mt-5\">\r\n                          <Card.Body>\r\n                            {rooms.map(room => {\r\n                              return (\r\n                                <>\r\n                                  <Row>\r\n                                    <Col xs=\"8\">\r\n                                      <h4>{room.name}</h4>\r\n                                    </Col>\r\n                                    <Col\r\n                                      xs=\"4\"\r\n                                      className=\"d-flex flex-row-reverse\"\r\n                                    >\r\n                                      <Button\r\n                                        onClick={async () => {\r\n                                          this.setState({\r\n                                            editRoomDescription:\r\n                                              room.room_description,\r\n                                            editRoomKey: room.room_key\r\n                                          });\r\n                                          this.setEditRoomModalVisible();\r\n                                        }}\r\n                                        variant=\"primary\"\r\n                                      >\r\n                                        Edit\r\n                                      </Button>\r\n                                      <Button\r\n                                        className=\"mr-2\"\r\n                                        onClick={async () => {\r\n                                          await this.deleteRoom(room.room_key);\r\n                                        }}\r\n                                        variant=\"danger\"\r\n                                      >\r\n                                        Delete\r\n                                      </Button>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <Card className=\"mt-3\">\r\n                                    <Card.Body>\r\n                                      {room.time_slots.map(time_slot => {\r\n                                        console.log(time_slot);\r\n                                        return (\r\n                                          <>\r\n                                            <Row>\r\n                                              <Col xs=\"12\">\r\n                                                <Row>\r\n                                                  <Col\r\n                                                    xs=\"8\"\r\n                                                    className={\r\n                                                      time_slot.reservedBy\r\n                                                        ? \"text-danger h5\"\r\n                                                        : \"text-success h5\"\r\n                                                    }\r\n                                                  >\r\n                                                    {time_slot.time_slot}\r\n                                                  </Col>\r\n                                                  <Col xs=\"4\">\r\n                                                    <Row className=\"d-flex flex-row-reverse\">\r\n                                                      <Button\r\n                                                        onClick={async () => {\r\n                                                          await this.hide(\r\n                                                            room.room_key,\r\n                                                            time_slot.time_slot_key,\r\n                                                            !time_slot.hide\r\n                                                          );\r\n                                                        }}\r\n                                                        className=\"mx-4\"\r\n                                                        variant={\r\n                                                          time_slot.hide\r\n                                                            ? \"success\"\r\n                                                            : \"danger\"\r\n                                                        }\r\n                                                      >\r\n                                                        {time_slot.hide\r\n                                                          ? \"Unhide\"\r\n                                                          : \"Hide\"}\r\n                                                      </Button>\r\n                                                      <Button\r\n                                                        onClick={async () => {\r\n                                                          await this.delete(\r\n                                                            room.room_key,\r\n                                                            time_slot.time_slot_key\r\n                                                          );\r\n                                                        }}\r\n                                                        variant=\"danger\"\r\n                                                      >\r\n                                                        Delete\r\n                                                      </Button>\r\n                                                    </Row>\r\n                                                  </Col>\r\n                                                </Row>\r\n                                              </Col>\r\n                                            </Row>\r\n                                            <hr></hr>\r\n                                          </>\r\n                                        );\r\n                                      })}\r\n                                      <Row className=\"d-flex flex-row-reverse\">\r\n                                        <Button\r\n                                          onClick={() => {\r\n                                            this.setAddTimeSlotModelVisible();\r\n                                            this.setState({\r\n                                              addTimeSlotRoom: room.room_key\r\n                                            });\r\n                                          }}\r\n                                          className=\"mx-4\"\r\n                                          variant=\"dark\"\r\n                                        >\r\n                                          Add Time Slot\r\n                                        </Button>\r\n                                      </Row>\r\n                                    </Card.Body>\r\n                                  </Card>\r\n                                  <hr></hr>\r\n                                </>\r\n                              );\r\n                            })}\r\n\r\n                            <Row className=\"d-flex flex-row-reverse\">\r\n                              <Button\r\n                                onClick={this.setAddRoomModelVisible}\r\n                                className=\"mx-4\"\r\n                                variant=\"dark\"\r\n                              >\r\n                                Add Room\r\n                              </Button>\r\n                            </Row>\r\n                          </Card.Body>\r\n                        </Card>\r\n                        <Modal\r\n                          show={this.state.addRoomModalVisible}\r\n                          size=\"lg\"\r\n                          onHide={this.setAddRoomModelVisible}\r\n                          aria-labelledby=\"contained-modal-title-vcenter\"\r\n                          centered\r\n                        >\r\n                          <Modal.Header closeButton>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                              Add Room\r\n                            </Modal.Title>\r\n                          </Modal.Header>\r\n                          <Modal.Body>\r\n                            <div className=\"d-flex w-100 flex-column align-items-center justify-content-center\">\r\n                              <img\r\n                                style={{\r\n                                  width: 200,\r\n                                  objectFit: \"cover\",\r\n                                  height: 200,\r\n                                  borderRadius: \"50%\"\r\n                                }}\r\n                                src={\r\n                                  this.state.addRoomImage\r\n                                    ? URL.createObjectURL(\r\n                                        this.state.addRoomImage\r\n                                      )\r\n                                    : \"https://img.pngio.com/profile-icon-png-image-free-download-searchpngcom-profile-icon-png-673_673.png\"\r\n                                }\r\n                              ></img>\r\n                              <Form.Group\r\n                                className=\"mt-5\"\r\n                                controlId=\"formGridAddress1\"\r\n                              >\r\n                                <Form.Control\r\n                                  className=\"btn btn-primary\"\r\n                                  name=\"addRoomImage\"\r\n                                  accept=\"image/*\"\r\n                                  onChange={this.filehandler}\r\n                                  type=\"file\"\r\n                                />\r\n                              </Form.Group>\r\n                            </div>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                              <Form.Label>Room Name</Form.Label>\r\n                              <Form.Control\r\n                                onChange={this.handler}\r\n                                name=\"addRoomName\"\r\n                                value={this.state.addRoomName}\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Room Name\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                              <Form.Label>Room Description</Form.Label>\r\n                              <Form.Control\r\n                                onChange={this.handler}\r\n                                name=\"addRoomDescription\"\r\n                                value={this.state.addRoomDescription}\r\n                                as=\"textarea\"\r\n                                placeholder=\"Enter Room Description\"\r\n                              />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                              <Form.Label>Room Total Participants</Form.Label>\r\n                              <Form.Control\r\n                                onChange={this.handler}\r\n                                name=\"addRoomTotalParticipants\"\r\n                                value={this.state.addRoomTotalParticipants}\r\n                                type=\"number\"\r\n                                placeholder=\"Enter Room Participants\"\r\n                              />\r\n                            </Form.Group>\r\n                          </Modal.Body>\r\n                          <Modal.Footer>\r\n                            <Button onClick={this.addRoom}>Add Room</Button>\r\n                            <Button\r\n                              variant=\"danger\"\r\n                              onClick={this.setAddRoomModelVisible}\r\n                            >\r\n                              Close\r\n                            </Button>\r\n                          </Modal.Footer>\r\n                        </Modal>\r\n\r\n                        <Modal\r\n                          show={this.state.editRoomModal}\r\n                          size=\"lg\"\r\n                          onHide={this.setEditRoomModalVisible}\r\n                          aria-labelledby=\"contained-modal-title-vcenter\"\r\n                          centered\r\n                        >\r\n                          <Modal.Header closeButton>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                              Edit Room\r\n                            </Modal.Title>\r\n                          </Modal.Header>\r\n                          <Modal.Body>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                              <Form.Label>Room Description</Form.Label>\r\n                              <Form.Control\r\n                                onChange={this.handler}\r\n                                name=\"editRoomDescription\"\r\n                                value={this.state.editRoomDescription}\r\n                                as=\"textarea\"\r\n                                placeholder=\"Enter Room Description\"\r\n                              />\r\n                            </Form.Group>\r\n                          </Modal.Body>\r\n                          <Modal.Footer>\r\n                            <Button onClick={this.editRoomDescription}>\r\n                              Edit Room\r\n                            </Button>\r\n                            <Button\r\n                              variant=\"danger\"\r\n                              onClick={this.setEditRoomModalVisible}\r\n                            >\r\n                              Close\r\n                            </Button>\r\n                          </Modal.Footer>\r\n                        </Modal>\r\n                        <Modal\r\n                          show={this.state.addTimeSlotModal}\r\n                          size=\"lg\"\r\n                          onHide={this.setAddTimeSlotModelVisible}\r\n                          aria-labelledby=\"contained-modal-title-vcenter\"\r\n                          centered\r\n                        >\r\n                          <Modal.Header closeButton>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                              Add Room Time Slot\r\n                            </Modal.Title>\r\n                          </Modal.Header>\r\n                          <Modal.Body>\r\n                            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                              <TimePicker\r\n                                showSecond={false}\r\n                                onChange={value =>\r\n                                  this.setState({\r\n                                    addTimeSlotSlot:\r\n                                      value && value.format(format)\r\n                                  })\r\n                                }\r\n                                placeholder=\"Select Time Slot\"\r\n                                className=\"w-50\"\r\n                                format={format}\r\n                                use12Hours\r\n                                inputReadOnly\r\n                              />\r\n                            </Form.Group>\r\n                          </Modal.Body>\r\n                          <Modal.Footer>\r\n                            <Button onClick={this.addRoomTimeSlot}>\r\n                              Add Room\r\n                            </Button>\r\n                            <Button\r\n                              variant=\"danger\"\r\n                              onClick={this.setAddTimeSlotModelVisible}\r\n                            >\r\n                              Close\r\n                            </Button>\r\n                          </Modal.Footer>\r\n                        </Modal>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <h3 className=\"mt-2\">Upcoming Reservations</h3>\r\n                        <div className=\"d-flex justify-content-center align-items-center p-5\">\r\n                          <BarChart width={992} height={300} data={data}>\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\"></XAxis>\r\n                            <YAxis></YAxis>\r\n                            <Tooltip />\r\n                            <Bar dataKey=\"reservations\" fill=\"#82034d\" />\r\n                          </BarChart>\r\n                        </div>\r\n                        <hr></hr>\r\n                        <h3 className=\"mt-2\">Today's Reservations</h3>\r\n\r\n                        <Table striped hover responsive>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Customer Image</th>\r\n                              <th colSpan=\"4\">Description</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {reservationsToRender.length > 0 ? (\r\n                              reservationsToRender\r\n                            ) : (\r\n                              <strong>No Reservations For Today</strong>\r\n                            )}\r\n                          </tbody>\r\n                        </Table>\r\n                      </>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(vendorMapStateToProps, vendorMapDispatchToProps)(Home);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Accordion,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\n\r\nclass UpcomingReservations extends Component {\r\n  render() {\r\n    const date = new Date();\r\n    const yesterday = new Date().setDate(date.getDate() - 1);\r\n    const reservations = this.props.reservations.filter(element => {\r\n      const elementDate = new Date(element.date);\r\n      return elementDate > yesterday;\r\n    });\r\n\r\n    const reservationsToRender = {};\r\n    reservations.forEach(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      if (reservationsToRender[element.date]) {\r\n        reservationsToRender[element.date].arr.push({ ...element, customer });\r\n      } else {\r\n        const arr = [{ customer, ...element }];\r\n        reservationsToRender[element.date] = { arr };\r\n      }\r\n    });\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Upcoming Reservations</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Accordion>\r\n                      {Object.keys(reservationsToRender).map((key, index) => {\r\n                        const reserve = reservationsToRender[key];\r\n                        return (\r\n                          <Card>\r\n                            <Card.Header>\r\n                              <Accordion.Toggle\r\n                                as={Button}\r\n                                eventKey={\"\" + index}\r\n                              >\r\n                                {key} Upcoming Reservations\r\n                              </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey={\"\" + index}>\r\n                              <Card.Body>\r\n                                <Table striped hover responsive>\r\n                                  <thead>\r\n                                    <tr>\r\n                                      <th>Customer Image</th>\r\n                                      <th colSpan=\"4\">Description</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {reserve.arr.map(element => {\r\n                                      return (\r\n                                        <tr>\r\n                                          <td>\r\n                                            <img\r\n                                              style={{\r\n                                                width: 50,\r\n                                                height: 50,\r\n                                                borderRadius: 50,\r\n                                                objectFit: \"cover\"\r\n                                              }}\r\n                                              src={\r\n                                                element.customer.photo_url\r\n                                                  ? element.customer.photo_url\r\n                                                  : \"https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg-1024x683.jpg\"\r\n                                              }\r\n                                            ></img>\r\n                                          </td>\r\n                                          <td colSpan=\"4\">\r\n                                            <strong>Customer Name: </strong>{\" \"}\r\n                                            {element.customer.name}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Reservation Time:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.time}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Number of Attendees:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.attandee}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Number of Tables:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {Math.floor(\r\n                                              Number(element.attandee / 5)\r\n                                            ) + 1}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Status of Reservation:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.status}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Customer Phone number:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.customer.number}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Customer Email:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.customer.email}\r\n                                            <br></br>\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })}\r\n                                  </tbody>\r\n                                </Table>\r\n                              </Card.Body>\r\n                            </Accordion.Collapse>\r\n                          </Card>\r\n                        );\r\n                      })}\r\n                    </Accordion>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(UpcomingReservations);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Table,\r\n  Accordion,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\nclass PreviousReservations extends Component {\r\n  render() {\r\n    const date = new Date();\r\n    const reservations = this.props.reservations.filter(element => {\r\n      const elementDate = new Date(element.date);\r\n      return elementDate < date;\r\n    });\r\n\r\n    const reservationsToRender = {};\r\n    reservations.forEach(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      if (reservationsToRender[element.date]) {\r\n        reservationsToRender[element.date].arr.push({ ...element, customer });\r\n      } else {\r\n        const arr = [{ customer, ...element }];\r\n        reservationsToRender[element.date] = { arr };\r\n      }\r\n    });\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Previous Reservations</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Accordion>\r\n                      {Object.keys(reservationsToRender).map((key, index) => {\r\n                        const reserve = reservationsToRender[key];\r\n                        return (\r\n                          <Card>\r\n                            <Card.Header>\r\n                              <Accordion.Toggle\r\n                                as={Button}\r\n                                eventKey={\"\" + index}\r\n                              >\r\n                                {key} Upcoming Reservations\r\n                              </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey={\"\" + index}>\r\n                              <Card.Body>\r\n                                <Table striped hover responsive>\r\n                                  <thead>\r\n                                    <tr>\r\n                                      <th>Customer Image</th>\r\n                                      <th colSpan=\"4\">Description</th>\r\n                                    </tr>\r\n                                  </thead>\r\n                                  <tbody>\r\n                                    {reserve.arr.map(element => {\r\n                                      return (\r\n                                        <tr>\r\n                                          <td>\r\n                                            <img\r\n                                              style={{\r\n                                                width: 50,\r\n                                                height: 50,\r\n                                                borderRadius: 50,\r\n                                                objectFit: \"cover\"\r\n                                              }}\r\n                                              src={\r\n                                                element.customer.photo_url\r\n                                                  ? element.customer.photo_url\r\n                                                  : \"https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg-1024x683.jpg\"\r\n                                              }\r\n                                            ></img>\r\n                                          </td>\r\n                                          <td colSpan=\"4\">\r\n                                            <strong>Customer Name: </strong>{\" \"}\r\n                                            {element.customer.name}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Reservation Time:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.time}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Number of Attendees:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.attandee}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Number of Tables:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {Math.floor(\r\n                                              Number(element.attandee / 5)\r\n                                            ) + 1}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Status of Reservation:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.status}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Customer Phone number:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.customer.number}\r\n                                            <br></br>\r\n                                            <strong>\r\n                                              Customer Email:{\" \"}\r\n                                            </strong>{\" \"}\r\n                                            {element.customer.email}\r\n                                            <br></br>\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })}\r\n                                  </tbody>\r\n                                </Table>\r\n                              </Card.Body>\r\n                            </Accordion.Collapse>\r\n                          </Card>\r\n                        );\r\n                      })}\r\n                    </Accordion>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(PreviousReservations);\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../../../Components/Sidebar/Header\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Badge,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Form,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport Footer from \"../../../Components/Footer/Footer\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\n\r\nclass VendorVerifications extends Component {\r\n  state = {\r\n    modalShow: false,\r\n    selectedVendor: \"\",\r\n    procFee: 0,\r\n    date: new Date(),\r\n    name: \"\"\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(element => {\r\n      const condition = element.name\r\n        .toLowerCase()\r\n        .includes(this.state.name.toLowerCase(), 0);\r\n      return condition;\r\n    });\r\n    const unverified = vendors.filter(element => !element.is_verified);\r\n    return (\r\n      <div>\r\n        <Header>\r\n          <Container>\r\n            <Row className=\"justify-content-center\">\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Vendors Verification</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Form.Row style={{ paddingTop: 10 }}>\r\n                      <Form.Group as={Col} controlId=\"formGridCity\">\r\n                        <Form.Control\r\n                          onChange={e =>\r\n                            this.setState({ name: e.target.value })\r\n                          }\r\n                          placeholder=\"Search\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Table striped hover responsive>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Image</th>\r\n                          <th>Name</th>\r\n                          <th>Email</th>\r\n                          <th>Reservation Price</th>\r\n                          <th>Status</th>\r\n                          <th></th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {unverified.map(element => {\r\n                          return (\r\n                            <>\r\n                              <tr>\r\n                                <td\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <img\r\n                                    style={{\r\n                                      width: 40,\r\n                                      height: 40,\r\n                                      borderRadius: 50,\r\n                                      objectFit: \"cover\"\r\n                                    }}\r\n                                    src={\r\n                                      element.photo_url\r\n                                        ? element.photo_url\r\n                                        : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                                    }\r\n                                  ></img>\r\n                                </td>\r\n                                <td>{element.name}</td>\r\n                                <td>{element.email}</td>\r\n                                <td>{element.reservation_fee}</td>\r\n                                <td>\r\n                                  {element.is_verified ? (\r\n                                    <Badge variant=\"success\">Verified</Badge>\r\n                                  ) : (\r\n                                    <Badge variant=\"danger\">Unerified</Badge>\r\n                                  )}\r\n                                </td>\r\n                                <td>\r\n                                  <Button\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        modalShow: true,\r\n                                        selectedVendor: element.uid\r\n                                      });\r\n                                    }}\r\n                                    variant=\"success\"\r\n                                    size=\"sm\"\r\n                                  >\r\n                                    Verify\r\n                                  </Button>\r\n                                </td>\r\n                              </tr>\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </Table>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>{\" \"}\r\n          <Footer></Footer>\r\n        </Header>\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Processing Fee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  Processing Fee\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                type=\"number\"\r\n                onChange={e => {\r\n                  this.setState({\r\n                    newProFee: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={async () => {\r\n                await Firebase.updateProcessingFeeAndVerify(\r\n                  this.state.newProFee,\r\n                  this.state.selectedVendor\r\n                );\r\n                this.setState({ modalShow: false });\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.setState({ modalShow: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(VendorVerifications)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport { Container, Row, Col, Card, Media } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\n\r\nclass Reviews extends Component {\r\n  render() {\r\n    const reviewsToRender = this.props.reviews.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, element.rating);\r\n      return (\r\n        <>\r\n          <Media as=\"li\">\r\n            <img\r\n              width={64}\r\n              height={64}\r\n              className=\"mr-5\"\r\n              style={{ objectFit: \"cover\", borderRadius: \"50%\" }}\r\n              src={\r\n                customer.photo_url\r\n                  ? customer.photo_url\r\n                  : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n              }\r\n              alt=\"Generic placeholder\"\r\n            />\r\n            <Media.Body>\r\n              <h5 style={{ fontWeight: \"bold\" }}>{customer.name}</h5>\r\n              <Row className=\"media-stars mb-3\">\r\n                {array.map(star => {\r\n                  return <ion-icon name={star}></ion-icon>;\r\n                })}\r\n              </Row>\r\n              <p>{element.comment}</p>\r\n            </Media.Body>\r\n          </Media>\r\n          <hr></hr>\r\n        </>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Reviews & Ratings</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <ul className=\"list-unstyled mt-5\">\r\n                      {reviewsToRender.length > 0 ? (\r\n                        reviewsToRender\r\n                      ) : (\r\n                        <h3>No reviews for you so far</h3>\r\n                      )}\r\n                    </ul>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(Reviews);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Modal,\r\n  Button,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport \"./Menu.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nclass Menu extends Component {\r\n  state = {\r\n    addCategoryModalVisible: false,\r\n    addDishesModalVisible: false,\r\n    editCategoryModalVisible: false,\r\n    editDishesModalVisible: false,\r\n    addCategoryName: \"\",\r\n    updateCategoryName: \"\",\r\n    categoryToUpdate: \"\",\r\n    addDishImage: null,\r\n    addDishName: \"\",\r\n    addDishCategory: \"\",\r\n    addDishPrice: 0,\r\n    addDishIngredients: \"\",\r\n    updateDishImage: null,\r\n    updateDishImageUrl: \"\",\r\n    updateDishName: \"\",\r\n    updateDishCategory: \"\",\r\n    updateDishPrice: 0,\r\n    updateDishIngredients: \"\",\r\n    updateDishKey: \"\"\r\n  };\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      addDishCategory: this.props.categories[0]\r\n        ? this.props.categories[0].category\r\n        : \"\"\r\n    });\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  setAddCategoryVisible = () => {\r\n    this.setState({\r\n      addCategoryModalVisible: !this.state.addCategoryModalVisible\r\n    });\r\n  };\r\n  setAddDishesVisible = () => {\r\n    this.setState({\r\n      addDishesModalVisible: !this.state.addDishesModalVisible\r\n    });\r\n  };\r\n  setEditCategoryVisible = () => {\r\n    this.setState({\r\n      editCategoryModalVisible: !this.state.editCategoryModalVisible\r\n    });\r\n  };\r\n  setEditDishesVisible = () => {\r\n    this.setState({\r\n      editDishesModalVisible: !this.state.editDishesModalVisible\r\n    });\r\n  };\r\n  addCategory = async () => {\r\n    await Firebase.addCategory(\r\n      this.state.addCategoryName,\r\n      this.props.vendor.uid\r\n    );\r\n    this.setAddCategoryVisible();\r\n    window.location.reload();\r\n  };\r\n  updateCategory = async () => {\r\n    await Firebase.updateCategory(\r\n      this.state.categoryToUpdate,\r\n      this.state.updateCategoryName,\r\n      this.props.vendor.uid\r\n    );\r\n    this.setEditCategoryVisible();\r\n    window.location.reload();\r\n  };\r\n  deleteCategory = async category_key => {\r\n    await Firebase.deleteCategory(category_key, this.props.vendor.uid);\r\n    window.location.reload();\r\n  };\r\n  deleteDish = async dish_key => {\r\n    await Firebase.deleteDish(dish_key);\r\n    window.location.reload();\r\n  };\r\n  fileInputHandler = e => {\r\n    console.log(e.target.files[0]);\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0]\r\n    });\r\n  };\r\n  dishFileInputHandler = e => {\r\n    this.setState(\r\n      {\r\n        updateDishImage: e.target.files[0]\r\n      },\r\n      async () => {\r\n        await Firebase.updateDishImage(\r\n          this.state.updateDishImage,\r\n          this.state.updateDishKey\r\n        );\r\n      }\r\n    );\r\n  };\r\n  addDish = async () => {\r\n    await Firebase.addDish(\r\n      this.state.addDishName,\r\n      this.state.addDishCategory,\r\n      this.state.addDishIngredients,\r\n      this.state.addDishImage,\r\n      this.state.addDishPrice,\r\n      this.props.vendor.uid\r\n    );\r\n    window.location.reload();\r\n  };\r\n  updateDish = async () => {\r\n    await Firebase.updateDish(\r\n      this.state.updateDishName,\r\n      this.state.updateDishCategory,\r\n      this.state.updateDishIngredients,\r\n      this.state.updateDishPrice,\r\n      this.state.updateDishKey\r\n    );\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Menu</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Row>\r\n                      <Col xs=\"12\" md=\"6\">\r\n                        <Card>\r\n                          <Card.Header draggable>\r\n                            <h4>Menu Categories</h4>\r\n                          </Card.Header>\r\n                          <Card.Body>\r\n                            {this.props.categories.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                                    <Col xs=\"8\">{element.category}</Col>\r\n                                    <Col\r\n                                      xs=\"2\"\r\n                                      onClick={() => {\r\n                                        this.setState({\r\n                                          updateCategoryName: element.category,\r\n                                          categoryToUpdate: element.category_key\r\n                                        });\r\n                                        this.setEditCategoryVisible();\r\n                                      }}\r\n                                    >\r\n                                      <ion-icon\r\n                                        className=\"menu-icon\"\r\n                                        name=\"create-outline\"\r\n                                      ></ion-icon>\r\n                                    </Col>\r\n                                    <Col\r\n                                      xs=\"2\"\r\n                                      onClick={() =>\r\n                                        this.deleteCategory(\r\n                                          element.category_key\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <ion-icon\r\n                                        className=\"menu-icon\"\r\n                                        name=\"close-circle-outline\"\r\n                                      ></ion-icon>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <hr className=\"mb-4\"></hr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                            <div\r\n                              onClick={this.setAddCategoryVisible}\r\n                              className=\"menu d-flex justify-content-center align-items-center\"\r\n                            >\r\n                              <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n                            </div>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </Col>\r\n                      <Col xs=\"12\" md=\"6\">\r\n                        <Card>\r\n                          <Card.Header draggable>\r\n                            <h4>Menu Dishes</h4>\r\n                          </Card.Header>\r\n                          <Card.Body>\r\n                            {this.props.dishes.map(element => {\r\n                              return (\r\n                                <>\r\n                                  <Row className=\"menu-icons d-flex justify-content-center align-items-center\">\r\n                                    <Col xs=\"8\">\r\n                                      <div className=\"d-flex align-items-center w-100\">\r\n                                        <img\r\n                                          style={{\r\n                                            width: 25,\r\n                                            height: 25,\r\n                                            borderRadius: 25,\r\n                                            objectFit: \"cover\"\r\n                                          }}\r\n                                          src={element.photo_url}\r\n                                        ></img>\r\n                                        <p className=\"ml-3 mt-3\">\r\n                                          {element.name}\r\n                                        </p>\r\n                                      </div>\r\n                                    </Col>\r\n                                    <Col\r\n                                      xs=\"2\"\r\n                                      onClick={() => {\r\n                                        this.setState({\r\n                                          updateDishCategory: element.category,\r\n                                          updateDishPrice: element.price,\r\n                                          updateDishImageUrl: element.photo_url,\r\n                                          updateDishIngredients:\r\n                                            element.ingredients,\r\n                                          updateDishKey: element.dish_key,\r\n                                          updateDishName: element.name\r\n                                        });\r\n                                        this.setEditDishesVisible();\r\n                                      }}\r\n                                    >\r\n                                      <ion-icon\r\n                                        className=\"menu-icon\"\r\n                                        name=\"create-outline\"\r\n                                      ></ion-icon>\r\n                                    </Col>\r\n                                    <Col\r\n                                      xs=\"2\"\r\n                                      onClick={() =>\r\n                                        this.deleteDish(element.dish_key)\r\n                                      }\r\n                                    >\r\n                                      <ion-icon\r\n                                        className=\"menu-icon\"\r\n                                        name=\"close-circle-outline\"\r\n                                      ></ion-icon>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <hr className=\"mb-4\"></hr>\r\n                                </>\r\n                              );\r\n                            })}\r\n                            <div\r\n                              onClick={this.setAddDishesVisible}\r\n                              className=\"menu d-flex justify-content-center align-items-center\"\r\n                            >\r\n                              <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n                            </div>\r\n                          </Card.Body>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n        <Modal\r\n          show={this.state.addCategoryModalVisible}\r\n          size=\"lg\"\r\n          onHide={this.setAddCategoryVisible}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Add Category\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Category Name</Form.Label>\r\n              <Form.Control\r\n                onChange={this.inputHandler}\r\n                name=\"addCategoryName\"\r\n                value={this.state.addCategoryName}\r\n                type=\"text\"\r\n                placeholder=\"Enter Category Name\"\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.addCategory}>Add Category</Button>\r\n            <Button variant=\"danger\" onClick={this.setAddCategoryVisible}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          show={this.state.editCategoryModalVisible}\r\n          size=\"lg\"\r\n          onHide={this.setEditCategoryVisible}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Update Category\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Category Name</Form.Label>\r\n              <Form.Control\r\n                onChange={this.inputHandler}\r\n                name=\"updateCategoryName\"\r\n                value={this.state.updateCategoryName}\r\n                type=\"text\"\r\n                placeholder=\"Enter Category Name\"\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.updateCategory}>Update Category</Button>\r\n            <Button variant=\"danger\" onClick={this.setEditCategoryVisible}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          show={this.state.addDishesModalVisible}\r\n          size=\"lg\"\r\n          onHide={this.setAddDishesVisible}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Add Dish\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex w-100 flex-column align-items-center justify-content-center\">\r\n              <img\r\n                style={{\r\n                  width: 200,\r\n                  objectFit: \"cover\",\r\n                  height: 200,\r\n                  borderRadius: \"50%\"\r\n                }}\r\n                src={\r\n                  this.state.addDishImage\r\n                    ? URL.createObjectURL(this.state.addDishImage)\r\n                    : \"https://img.pngio.com/profile-icon-png-image-free-download-searchpngcom-profile-icon-png-673_673.png\"\r\n                }\r\n              ></img>\r\n              <Form.Group className=\"mt-5\" controlId=\"formGridAddress1\">\r\n                <Form.Control\r\n                  className=\"btn btn-primary\"\r\n                  name=\"addDishImage\"\r\n                  accept=\"image/*\"\r\n                  onChange={this.fileInputHandler}\r\n                  type=\"file\"\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Dish Name</Form.Label>\r\n              <Form.Control\r\n                value={this.state.addDishName}\r\n                name=\"addDishName\"\r\n                onChange={this.inputHandler}\r\n                type=\"text\"\r\n                placeholder=\"Enter Dish Name\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                value={this.state.addDishCategory}\r\n                name=\"addDishCategory\"\r\n                onChange={this.inputHandler}\r\n                as=\"select\"\r\n              >\r\n                {this.props.categories.map((cat, index) => (\r\n                  <option selected={index === 0} value={cat.category}>\r\n                    {cat.category}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Dish Price</Form.Label>\r\n              <Form.Control\r\n                value={this.state.addDishPrice}\r\n                name=\"addDishPrice\"\r\n                onChange={this.inputHandler}\r\n                type=\"number\"\r\n                placeholder=\"Enter Dish Price\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Ingredients</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Enter Ingredients\"\r\n                as=\"textarea\"\r\n                value={this.state.addDishIngredients}\r\n                name=\"addDishIngredients\"\r\n                onChange={this.inputHandler}\r\n                rows=\"3\"\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.addDish}>Add Dishes</Button>\r\n            <Button variant=\"danger\" onClick={this.setAddDishesVisible}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Modal\r\n          show={this.state.editDishesModalVisible}\r\n          size=\"lg\"\r\n          onHide={this.setEditDishesVisible}\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Dish\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex w-100 flex-column align-items-center justify-content-center\">\r\n              <img\r\n                style={{\r\n                  width: 200,\r\n                  objectFit: \"cover\",\r\n                  height: 200,\r\n                  borderRadius: \"50%\"\r\n                }}\r\n                src={\r\n                  this.state.updateDishImage\r\n                    ? URL.createObjectURL(this.state.updateDishImage)\r\n                    : this.state.updateDishImageUrl\r\n                }\r\n              ></img>\r\n              <Form.Group className=\"mt-5\" controlId=\"formGridAddress1\">\r\n                <Form.Control\r\n                  className=\"btn btn-primary\"\r\n                  name=\"updateDishImage\"\r\n                  accept=\"image/*\"\r\n                  onChange={this.dishFileInputHandler}\r\n                  type=\"file\"\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Dish Name</Form.Label>\r\n              <Form.Control\r\n                value={this.state.updateDishName}\r\n                name=\"updateDishName\"\r\n                onChange={this.inputHandler}\r\n                type=\"text\"\r\n                placeholder=\"Enter Dish Name\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                value={this.state.updateDishCategory}\r\n                name=\"updateDishCategory\"\r\n                onChange={this.inputHandler}\r\n                as=\"select\"\r\n              >\r\n                {this.props.categories.map((cat, index) => (\r\n                  <option\r\n                    selected={this.state.updateDishCategory === cat.category}\r\n                    value={cat.category}\r\n                  >\r\n                    {cat.category}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Dish Price</Form.Label>\r\n              <Form.Control\r\n                value={this.state.updateDishPrice}\r\n                name=\"updateDishPrice\"\r\n                onChange={this.inputHandler}\r\n                type=\"number\"\r\n                placeholder=\"Enter Dish Price\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Ingredients</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Enter Ingredients\"\r\n                as=\"textarea\"\r\n                value={this.state.updateDishIngredients}\r\n                name=\"updateDishIngredients\"\r\n                onChange={this.inputHandler}\r\n                rows=\"3\"\r\n              />\r\n            </Form.Group>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.updateDish}>Edit Dishes</Button>\r\n            <Button variant=\"danger\" onClick={this.setEditDishesVisible}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(vendorMapStateToProps, vendorMapDispatchToProps)(Menu);\r\n","import React, { Component } from \"react\";\r\nimport VendorSidebar from \"../../../Components/VendorSidebar/VendorSidebar\";\r\nimport {\r\n  Card,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  InputGroup,\r\n  FormControl,\r\n  Button,\r\n  Spinner\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass EditProfile extends Component {\r\n  state = {\r\n    phone: \"\",\r\n    reservationFee: 0,\r\n    location: {\r\n      lat: 0,\r\n      long: 0\r\n    },\r\n    bankName: \"\",\r\n    accountName: \"\",\r\n    accountNumber: \"\",\r\n    address: \"\",\r\n    imageUploading: false,\r\n    vendorUpdating: false,\r\n    name: \"\"\r\n  };\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      phone: this.props.vendor.number,\r\n      reservationFee: this.props.vendor.reservation_fee,\r\n      location: {\r\n        lat: this.props.vendor.llocation.lat,\r\n        long: this.props.vendor.llocation.llong\r\n      },\r\n      bankName: this.props.vendor.bank_details.bank_name,\r\n      accountName: this.props.vendor.bank_details.account_name,\r\n      accountNumber: this.props.vendor.bank_details.accountNumber,\r\n      address: this.props.vendor.address,\r\n      name: this.props.vendor.name\r\n    });\r\n  };\r\n  updateImage = async e => {\r\n    this.setState({\r\n      imageUploading: true\r\n    });\r\n    await Firebase.updateVendorImage(e.target.files[0], this.props.vendor.uid);\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    this.setState({\r\n      imageUploading: false\r\n    });\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  submit = async () => {\r\n    this.setState({\r\n      imageUploading: true\r\n    });\r\n    await Firebase.updateVendor(\r\n      this.state.name,\r\n      this.state.phone,\r\n      this.state.reservationFee,\r\n      this.state.location.lat,\r\n      this.state.location.long,\r\n      this.state.accountNumber,\r\n      this.state.accountName,\r\n      this.state.bankName,\r\n      this.props.vendor.uid\r\n    );\r\n    const vendor = await Firebase.getVendor(this.props.vendor.uid);\r\n    this.props.updateLogin(vendor);\r\n    setVendor(vendor);\r\n    this.setState({\r\n      imageUploading: false\r\n    });\r\n    this.props.history.push(\"/vendor/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <VendorSidebar>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs=\"12\" style={{ padding: 10 }}>\r\n                <Card>\r\n                  <Card.Header>\r\n                    <h1>Profile Setting</h1>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                      <img\r\n                        style={{\r\n                          width: \"200px\",\r\n                          height: \"200px\",\r\n                          objectFit: \"cover\",\r\n                          borderRadius: \"50%\"\r\n                        }}\r\n                        src={\r\n                          this.props.vendor.photo_url\r\n                            ? this.props.vendor.photo_url\r\n                            : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                        }\r\n                      ></img>\r\n                      {this.state.imageUploading ? (\r\n                        <Spinner\r\n                          style={{ width: 30, height: 30 }}\r\n                          animation=\"border\"\r\n                          variant=\"dark\"\r\n                          className=\"mt-5\"\r\n                        />\r\n                      ) : (\r\n                        <Form.Group\r\n                          className=\"mt-5\"\r\n                          controlId=\"formGridAddress1\"\r\n                        >\r\n                          <Form.Control\r\n                            className=\"btn btn-primary\"\r\n                            accept=\"image/*\"\r\n                            onChange={this.updateImage}\r\n                            type=\"file\"\r\n                          />\r\n                        </Form.Group>\r\n                      )}\r\n                    </div>\r\n                    <hr className=\"my-5\"></hr>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                      <Form.Label>Vendor Name</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Vendor Name\"\r\n                        value={this.state.name}\r\n                        name=\"name\"\r\n                        onChange={this.inputHandler}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>Vendor Type</Form.Label>\r\n                      <Form.Control disabled as=\"select\">\r\n                        <option\r\n                          selected={\r\n                            this.props.vendor.category === \"Restaurants\"\r\n                          }\r\n                          value=\"Restaurant\"\r\n                        >\r\n                          Restaurant\r\n                        </option>\r\n                        <option\r\n                          selected={this.props.vendor.category === \"Cafes\"}\r\n                          value=\"Cafe\"\r\n                        >\r\n                          Cafe\r\n                        </option>\r\n                        <option\r\n                          selected={\r\n                            this.props.vendor.category === \"Escape Rooms\"\r\n                          }\r\n                          value=\"Escape Room\"\r\n                        >\r\n                          Escape Room\r\n                        </option>\r\n                        <option\r\n                          selected={this.props.vendor.category === \"Events\"}\r\n                          value=\"Event\"\r\n                        >\r\n                          Event\r\n                        </option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                      <Form.Label>Branch</Form.Label>\r\n                      <Form.Control disabled as=\"select\">\r\n                        <option\r\n                          selected={this.props.vendor.branch === \"Main\"}\r\n                          value=\"Main\"\r\n                        >\r\n                          Main\r\n                        </option>\r\n                        <option\r\n                          selected={this.props.vendor.branch === \"Sub\"}\r\n                          value=\"Sub\"\r\n                        >\r\n                          Sub\r\n                        </option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <hr className=\"my-5\"></hr>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                      <Form.Label>Email address</Form.Label>\r\n                      <Form.Control\r\n                        value={this.props.vendor.email}\r\n                        disabled\r\n                        type=\"email\"\r\n                        placeholder=\"Enter your Email Address\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                      <Form.Label>Phone Number</Form.Label>\r\n                      <Form.Control\r\n                        value={this.state.phone}\r\n                        name=\"phone\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your Phone\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                      <Form.Label>Reservation Fee</Form.Label>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>EGP</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                          value={this.state.reservationFee}\r\n                          name=\"reservationFee\"\r\n                          onChange={this.inputHandler}\r\n                          type=\"number\"\r\n                          aria-label=\"Amount (to the nearest dollar)\"\r\n                        />\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n                    <hr className=\"my-5\"></hr>\r\n                    <h3>Location</h3>\r\n                    <hr className=\"my-5\"></hr>\r\n                    <h3 className=\"mb-5\">Bank Details</h3>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                      <Form.Label>Bank Name</Form.Label>\r\n                      <Form.Control\r\n                        value={this.state.bankName}\r\n                        name=\"bankName\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your Bank Name\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                      <Form.Label>Account Name</Form.Label>\r\n                      <Form.Control\r\n                        value={this.state.accountName}\r\n                        name=\"accountName\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your Account Name\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                      <Form.Label>Account Number</Form.Label>\r\n                      <Form.Control\r\n                        value={this.state.accountNumber}\r\n                        name=\"phone\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"number\"\r\n                        placeholder=\"Enter your Account Number\"\r\n                      />\r\n                    </Form.Group>\r\n                    <hr className=\"my-5\"></hr>\r\n                    {this.state.vendorUpdating ? (\r\n                      <Spinner\r\n                        style={{ width: 30, height: 30 }}\r\n                        animation=\"border\"\r\n                        variant=\"dark\"\r\n                        className=\"mt-5\"\r\n                      />\r\n                    ) : (\r\n                      <Button\r\n                        onClick={this.submit}\r\n                        variant=\"primary\"\r\n                        size=\"lg\"\r\n                        block\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    )}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </VendorSidebar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(withRouter(EditProfile));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapDispatchToProps,\r\n  vendorMapStateToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\nclass Registration extends Component {\r\n  state = {\r\n    image: null,\r\n    name: \"\",\r\n    vendorType: \"Restaurants\",\r\n    branch: \"Main\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    reservationFee: 0,\r\n    location: {\r\n      lat: 0,\r\n      long: 0\r\n    },\r\n    bankName: \"\",\r\n    accountName: \"\",\r\n    accountNumber: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    address: \"\"\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  fileInputHandler = e => {\r\n    console.log(e.target.files[0]);\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0]\r\n    });\r\n  };\r\n  register = async () => {\r\n    const user = await Firebase.createVendor(\r\n      this.state.email,\r\n      this.state.password,\r\n      this.state.address,\r\n      this.state.accountNumber,\r\n      this.state.accountName,\r\n      this.state.bankName,\r\n      this.state.branch,\r\n      this.state.vendorType,\r\n      this.state.location.lat,\r\n      this.state.location.long,\r\n      this.state.name,\r\n      this.state.phone,\r\n      this.state.image,\r\n      this.state.image.name.split(\".\")[\r\n        this.state.image.name.split(\".\").length - 1\r\n      ],\r\n      this.state.reservationFee\r\n    );\r\n    if (user) {\r\n      alert(\"Account has been registered\");\r\n      const vendor = await Firebase.loginVendor(\r\n        this.state.email,\r\n        this.state.password\r\n      );\r\n      this.props.updateLogin(vendor);\r\n      setVendor(vendor);\r\n      this.props.history.push(\"/vendor/\");\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Account could not be registered\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col\r\n              xs=\"12\"\r\n              style={{\r\n                padding: 50,\r\n                paddingTop: \"10vh\",\r\n                paddingBottom: \"10vh\",\r\n                backgroundColor: \"#ba0fb4\"\r\n              }}\r\n            >\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Vendor Registration</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <img\r\n                      style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        objectFit: \"cover\",\r\n                        borderRadius: \"50%\"\r\n                      }}\r\n                      src={\r\n                        this.state.image\r\n                          ? URL.createObjectURL(this.state.image)\r\n                          : \"https://img.pngio.com/profile-icon-png-image-free-download-searchpngcom-profile-icon-png-673_673.png\"\r\n                      }\r\n                    ></img>\r\n                    <Form.Group className=\"mt-5\" controlId=\"formGridAddress1\">\r\n                      <Form.Control\r\n                        className=\"btn btn-primary\"\r\n                        name=\"image\"\r\n                        accept=\"image/*\"\r\n                        onChange={this.fileInputHandler}\r\n                        type=\"file\"\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Form.Group controlId=\"formGroupEmail\">\r\n                    <Form.Label>Vendor Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"name\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Vendor Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label>Vendor Type</Form.Label>\r\n                    <Form.Control\r\n                      name=\"vendorType\"\r\n                      onChange={this.inputHandler}\r\n                      as=\"select\"\r\n                    >\r\n                      <option value=\"Restaurants\">Restaurant</option>\r\n                      <option value=\"Cafes\">Cafe</option>\r\n                      <option value=\"Escape Rooms\">Escape Room</option>\r\n                      <option value=\"Events\">Event</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                    <Form.Label>Branch</Form.Label>\r\n                    <Form.Control\r\n                      name=\"branch\"\r\n                      onChange={this.inputHandler}\r\n                      as=\"select\"\r\n                    >\r\n                      <option value=\"Main\">Main</option>\r\n                      <option value=\"Sub\">Sub</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      name=\"email\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"email\"\r\n                      placeholder=\"Enter your Email Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                      name=\"address\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                    <Form.Control\r\n                      name=\"phone\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Phone\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Reservation Fee</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>EGP</InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl\r\n                        name=\"reservationFee\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"number\"\r\n                        aria-label=\"Amount (to the nearest dollar)\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <p>Location</p>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <h3 className=\"mb-5\">Bank Details</h3>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Bank Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"bankName\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Bank Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput7\">\r\n                    <Form.Label>Account Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"accountName\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Account Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput6\">\r\n                    <Form.Label>Account Number</Form.Label>\r\n                    <Form.Control\r\n                      name=\"accountNumber\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"number\"\r\n                      placeholder=\"Enter your Account Number\"\r\n                    />\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n\r\n                  <h3 className=\"mb-5\">Change Password</h3>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput4\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      name=\"password\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"password\"\r\n                      placeholder=\"Enter your Password\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput5\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                      name=\"confirmPassword\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"password\"\r\n                      placeholder=\"Renter your Password\"\r\n                    />\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Button\r\n                    onClick={this.register}\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    block\r\n                  >\r\n                    Submit Registration\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(withRouter(Registration));\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../../Images/logo.mp4\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../../../Config/VendorMapping\";\r\nclass AccountUnverified extends Component {\r\n  sendVerificationLink = async () => {\r\n    await Firebase.sendEmailVerficationLink();\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ height: \"100vh\", background: \"white\" }}\r\n        className=\"flex-column d-flex align-items-center justify-content-center w-100\"\r\n      >\r\n        <video src={Logo} style={{ width: \"50%\" }} muted autoPlay></video>\r\n        {this.props.vendor ? (\r\n          !this.props.vendor.is_verified ? (\r\n            <p className=\"text-muted\">\r\n              Please wait while your account is being verified by our\r\n              administrators.\r\n            </p>\r\n          ) : null\r\n        ) : null}\r\n\r\n        {this.props.vendor ? (\r\n          !this.props.vendor.is_email_verified ? (\r\n            <Button onClick={this.sendVerificationLink} variant=\"link\">\r\n              Your email is not verified. Click here to verify your email.\r\n            </Button>\r\n          ) : null\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(AccountUnverified);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  InputGroup,\r\n  Button,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  vendorMapDispatchToProps,\r\n  vendorMapStateToProps\r\n} from \"../../../Config/VendorMapping\";\r\nimport { setVendor } from \"../../../Config/localStorage\";\r\nclass RegistrationSocial extends Component {\r\n  state = {\r\n    image: null,\r\n    name: \"\",\r\n    vendorType: \"Restaurants\",\r\n    branch: \"Main\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    reservationFee: 0,\r\n    location: {\r\n      lat: 0,\r\n      long: 0\r\n    },\r\n    bankName: \"\",\r\n    accountName: \"\",\r\n    accountNumber: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    address: \"\",\r\n    uid: \"\"\r\n  };\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      image: this.props.registrationInfo.photoUrl,\r\n      name: this.props.registrationInfo.name,\r\n      email: this.props.registrationInfo.email,\r\n      uid: this.props.registrationInfo.uid\r\n    });\r\n  };\r\n  inputHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  fileInputHandler = e => {\r\n    console.log(e.target.files[0]);\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0]\r\n    });\r\n  };\r\n  register = async () => {\r\n    const user = await Firebase.createVendorSocial(\r\n      this.state.email,\r\n      this.state.address,\r\n      this.state.accountNumber,\r\n      this.state.accountName,\r\n      this.state.bankName,\r\n      this.state.branch,\r\n      this.state.vendorType,\r\n      this.state.location.lat,\r\n      this.state.location.long,\r\n      this.state.name,\r\n      this.state.phone,\r\n      this.state.image,\r\n      this.state.reservationFee,\r\n      this.state.uid\r\n    );\r\n    if (user) {\r\n      alert(\"Account has been registered\");\r\n      const vendor = await Firebase.getVendor(this.state.uid);\r\n      this.props.updateLogin(vendor);\r\n      setVendor(vendor);\r\n      this.props.history.push(\"/vendor/\");\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Account could not be registered\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col\r\n              xs=\"12\"\r\n              style={{\r\n                padding: 50,\r\n                paddingTop: \"10vh\",\r\n                paddingBottom: \"10vh\",\r\n                backgroundColor: \"#ba0fb4\"\r\n              }}\r\n            >\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Vendor Registration</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <img\r\n                      style={{\r\n                        width: \"200px\",\r\n                        height: \"200px\",\r\n                        objectFit: \"cover\",\r\n                        borderRadius: \"50%\"\r\n                      }}\r\n                      src={\r\n                        this.state.image\r\n                          ? this.state.image\r\n                          : \"https://img.pngio.com/profile-icon-png-image-free-download-searchpngcom-profile-icon-png-673_673.png\"\r\n                      }\r\n                    ></img>\r\n                  </div>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Form.Group controlId=\"formGroupEmail\">\r\n                    <Form.Label>Vendor Name</Form.Label>\r\n                    <Form.Control\r\n                      disabled\r\n                      value={this.state.name}\r\n                      name=\"name\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Vendor Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                    <Form.Label>Vendor Type</Form.Label>\r\n                    <Form.Control\r\n                      name=\"vendorType\"\r\n                      onChange={this.inputHandler}\r\n                      as=\"select\"\r\n                    >\r\n                      <option value=\"Restaurants\">Restaurant</option>\r\n                      <option value=\"Cafes\">Cafe</option>\r\n                      <option value=\"Escape Rooms\">Escape Room</option>\r\n                      <option value=\"Events\">Event</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                    <Form.Label>Branch</Form.Label>\r\n                    <Form.Control\r\n                      name=\"branch\"\r\n                      onChange={this.inputHandler}\r\n                      as=\"select\"\r\n                    >\r\n                      <option value=\"Main\">Main</option>\r\n                      <option value=\"Sub\">Sub</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                      disabled\r\n                      value={this.state.email}\r\n                      name=\"email\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"email\"\r\n                      placeholder=\"Enter your Email Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                      name=\"address\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                    <Form.Control\r\n                      name=\"phone\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Phone\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Reservation Fee</Form.Label>\r\n                    <InputGroup className=\"mb-3\">\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>EGP</InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <FormControl\r\n                        name=\"reservationFee\"\r\n                        onChange={this.inputHandler}\r\n                        type=\"number\"\r\n                        aria-label=\"Amount (to the nearest dollar)\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <p>Location</p>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <h3 className=\"mb-5\">Bank Details</h3>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                    <Form.Label>Bank Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"bankName\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Bank Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput7\">\r\n                    <Form.Label>Account Name</Form.Label>\r\n                    <Form.Control\r\n                      name=\"accountName\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your Account Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"exampleForm.ControlInput6\">\r\n                    <Form.Label>Account Number</Form.Label>\r\n                    <Form.Control\r\n                      name=\"accountNumber\"\r\n                      onChange={this.inputHandler}\r\n                      type=\"number\"\r\n                      placeholder=\"Enter your Account Number\"\r\n                    />\r\n                  </Form.Group>\r\n                  <hr className=\"my-5\"></hr>\r\n                  <Button\r\n                    onClick={this.register}\r\n                    variant=\"primary\"\r\n                    size=\"lg\"\r\n                    block\r\n                  >\r\n                    Submit Registration\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(withRouter(RegistrationSocial));\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport VendorLogin from \"../Pages/Vendor/Login/Login\";\r\nimport VendorHome from \"../Pages/Vendor/Home/Home\";\r\nimport UpcomingReservations from \"../Pages/Vendor/UpcomingReservations/UpcomingReservations\";\r\nimport PreviousReservations from \"../Pages/Vendor/PreviousReservations/PreviousReservations\";\r\nimport Reviews from \"../Pages/Vendor/Reviews/Reviews\";\r\nimport Menu from \"../Pages/Vendor/Menu/Menu\";\r\nimport EditProfile from \"../Pages/Vendor/EditProfile/EditProfile\";\r\nimport Registration from \"../Pages/Vendor/Registration/Registration\";\r\nimport { connect } from \"react-redux\";\r\nimport Logo from \"../Images/logo.mp4\";\r\nimport {\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n} from \"../Config/VendorMapping\";\r\nimport Firebase from \"../Firebase/Firebase\";\r\nimport { getVendor, setVendor } from \"../Config/localStorage\";\r\nimport { Spinner, Button } from \"react-bootstrap\";\r\nimport AccountUnverified from \"../Pages/Vendor/AccountUnverified/AccountUnverified\";\r\nimport RegistrationSocial from \"../Pages/Vendor/RegistrationSocial/RegistrationSocial\";\r\nclass VendorRouter extends Component {\r\n  state = { loading: true };\r\n\r\n  componentDidMount = async () => {\r\n    const vendorInitial = getVendor();\r\n    console.log(vendorInitial);\r\n    if (vendorInitial) {\r\n      let vendor = await Firebase.getVendor(vendorInitial.uid);\r\n      if (Firebase.emailVerified() && !vendor.is_email_verified) {\r\n        await Firebase.updateEmailVerification(vendorInitial.uid);\r\n        const v = await Firebase.getVendor(vendorInitial.uid);\r\n        setVendor(v);\r\n        this.props.updateLogin(v);\r\n        window.location.reload();\r\n      } else {\r\n        if (vendor.is_verified !== vendorInitial.is_verified) {\r\n          setVendor(vendor);\r\n          window.location.reload();\r\n        } else {\r\n          if (vendor) {\r\n            const dishes = await Firebase.getDishesVendor(vendor.uid);\r\n            this.props.updateDishes(dishes);\r\n            const reviews = await Firebase.getReviews(vendor.uid);\r\n            this.props.updateReviews(reviews);\r\n            const categories = await Firebase.getCategories(vendor.uid);\r\n            this.props.updateCategories(categories);\r\n\r\n            const customers = await Firebase.getCustomers();\r\n            this.props.updateCustomers(customers);\r\n            const notifications = await Firebase.getNotificationsVendor(\r\n              vendor.uid\r\n            );\r\n            this.props.updateNotifications(notifications);\r\n            const reservations = await Firebase.getReservationsVendor(\r\n              vendor.uid\r\n            );\r\n            this.props.updateReservations(reservations);\r\n\r\n            Firebase.vendorListenToDishes(snapshot => {\r\n              const updatedValue = snapshot.val();\r\n              let newDishes = [...this.props.dishes];\r\n              const foundIndex = newDishes.findIndex(\r\n                e => e.dish_key == updatedValue.dish_key\r\n              );\r\n              if (foundIndex >= 0) {\r\n                newDishes[foundIndex] = updatedValue;\r\n              } else {\r\n                if (updatedValue.uid === vendor.uid) {\r\n                  newDishes.push(updatedValue);\r\n                }\r\n              }\r\n              this.props.updateDishes(newDishes);\r\n            });\r\n            Firebase.vendorListenToCategories(snapshot => {\r\n              const updatedValue = snapshot.val();\r\n              console.log(updatedValue);\r\n              let newCategories = [...this.props.categories];\r\n              const foundIndex = newCategories.findIndex(\r\n                e => e.category_key == updatedValue.category_key\r\n              );\r\n              if (foundIndex >= 0) {\r\n                newCategories[foundIndex] = updatedValue;\r\n              } else {\r\n                newCategories.push(updatedValue);\r\n              }\r\n              this.props.updateCategories(newCategories);\r\n            }, vendor.uid);\r\n            Firebase.vendorListenToNotifications(snapshot => {\r\n              const updatedValue = snapshot.val();\r\n              let newNotifications = [...this.props.notifications];\r\n              const foundIndex = newNotifications.findIndex(\r\n                e => e.notification_key == updatedValue.notification_key\r\n              );\r\n              if (foundIndex >= 0) {\r\n                newNotifications[foundIndex] = updatedValue;\r\n              } else {\r\n                newNotifications.push(updatedValue);\r\n              }\r\n              this.props.updateNotifications(newNotifications);\r\n            }, vendor.uid);\r\n            Firebase.vendorListenToReservations(snapshot => {\r\n              const updatedValue = snapshot.val();\r\n              let newReservations = [...this.props.reservations];\r\n              const foundIndex = newReservations.findIndex(\r\n                e => e.reservation_key == updatedValue.reservation_key\r\n              );\r\n              if (foundIndex >= 0) {\r\n                newReservations[foundIndex] = updatedValue;\r\n              } else {\r\n                if (updatedValue.restaurant_uid === vendor.uid) {\r\n                  newReservations.push(updatedValue);\r\n                }\r\n              }\r\n              this.props.updateReservations(newReservations);\r\n            });\r\n\r\n            this.props.updateLogin(vendor);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({ loading: false });\r\n  };\r\n  render() {\r\n    return !this.state.loading ? (\r\n      <>\r\n        {this.props.vendor ? (\r\n          <>\r\n            {this.props.vendor.is_verified &&\r\n            (this.props.vendor.is_email_verified ||\r\n              this.props.vendor.is_number_verified) ? (\r\n              <>\r\n                <Route exact path=\"/vendor/\">\r\n                  <VendorHome></VendorHome>\r\n                </Route>\r\n                <Route exact path=\"/vendor/upcoming\">\r\n                  <UpcomingReservations></UpcomingReservations>\r\n                </Route>\r\n                <Route exact path=\"/vendor/past\">\r\n                  <PreviousReservations></PreviousReservations>\r\n                </Route>\r\n                <Route exact path=\"/vendor/reviews\">\r\n                  <Reviews></Reviews>\r\n                </Route>\r\n                <Route exact path=\"/vendor/menu\">\r\n                  <Menu></Menu>\r\n                </Route>\r\n                <Route exact path=\"/vendor/profile\">\r\n                  <EditProfile></EditProfile>\r\n                </Route>\r\n              </>\r\n            ) : (\r\n              <Route path=\"/vendor/\">\r\n                <AccountUnverified></AccountUnverified>\r\n              </Route>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/vendor/\">\r\n              <VendorLogin></VendorLogin>\r\n            </Route>\r\n            <Route exact path=\"/vendor/register\">\r\n              <Registration></Registration>\r\n            </Route>\r\n            <Route exact path=\"/vendor/registersocial\">\r\n              <RegistrationSocial></RegistrationSocial>\r\n            </Route>\r\n          </>\r\n        )}\r\n      </>\r\n    ) : (\r\n      <div\r\n        style={{ height: \"100vh\", background: \"white\" }}\r\n        className=\"flex-column d-flex align-items-center justify-content-center w-100\"\r\n      >\r\n        <video src={Logo} style={{ width: \"50%\" }} muted autoPlay loop></video>\r\n        <Spinner\r\n          style={{ width: 30, height: 30 }}\r\n          animation=\"border\"\r\n          variant=\"dark\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  vendorMapStateToProps,\r\n  vendorMapDispatchToProps\r\n)(VendorRouter);\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport Home from \"../Pages/Home/Home\";\r\nimport TermsAndConditions from \"../Pages/TermsAndConditions/TermsAndConditions\";\r\nimport PrivacyPolicy from \"../Pages/PrivacyPolicy/PrivacyPolicy\";\r\nimport Contact from \"../Pages/Contact/Contact\";\r\nimport AdminLogin from \"../Pages/Admin/Login/Login\";\r\nimport Dashboard from \"../Pages/Admin/Dashboard/Dashboard\";\r\nimport Vendor from \"../Pages/Admin/Vendor/Vendor\";\r\nimport Complaints from \"../Pages/Admin/Complaints/Complaints\";\r\nimport Reservations from \"../Pages/Admin/Reservations/Reservations\";\r\nimport Customer from \"../Pages/Admin/Customer/Customer\";\r\nimport DiscountVouchers from \"../Pages/Admin/DiscountVouchers/DiscountVouchers\";\r\nimport Slideshow from \"../Pages/Admin/Slideshow/Slideshow\";\r\nimport { mapDispatchToProps, mapStateToProps } from \"../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAdmin } from \"../Config/localStorage\";\r\nimport Firebase from \"../Firebase/Firebase\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport VendorLogin from \"../Pages/Vendor/Login/Login\";\r\nimport VendorHome from \"../Pages/Vendor/Home/Home\";\r\nimport UpcomingReservations from \"../Pages/Vendor/UpcomingReservations/UpcomingReservations\";\r\nimport PreviousReservations from \"../Pages/Vendor/PreviousReservations/PreviousReservations\";\r\nimport VendorVerifications from \"../Pages/Admin/VendorVerifications/VendorVerifications\";\r\nimport Reviews from \"../Pages/Vendor/Reviews/Reviews\";\r\nimport Menu from \"../Pages/Vendor/Menu/Menu\";\r\nimport EditProfile from \"../Pages/Vendor/EditProfile/EditProfile\";\r\nimport Registration from \"../Pages/Vendor/Registration/Registration\";\r\nimport VendorRouter from \"./VendorRouter\";\r\nclass Router extends Component {\r\n  state = {\r\n    loading: true\r\n  };\r\n  componentDidMount = async () => {\r\n    const admin = getAdmin();\r\n    if (admin) {\r\n      const vendors = await Firebase.getRestaurants();\r\n      this.props.updateVendors(vendors);\r\n      const reviews = await Firebase.getAllReviews();\r\n      this.props.updateReviews(reviews);\r\n      const complaints = await Firebase.getComplaints();\r\n      this.props.updateComplaints(complaints);\r\n      const customers = await Firebase.getCustomers();\r\n      this.props.updateCustomers(customers);\r\n      const vouchers = await Firebase.getDiscountVouchers();\r\n      this.props.updateDiscountVouchers(vouchers);\r\n      const notifications = await Firebase.getNotifications(admin.uid);\r\n      this.props.updateNotifications(notifications);\r\n      const reservations = await Firebase.getReservations();\r\n      this.props.updateReservations(reservations);\r\n      const slideshows = await Firebase.getSlideShows();\r\n      this.props.updateSlideshows(slideshows);\r\n      Firebase.listenToVendors(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newVendors = [...this.props.vendors];\r\n        const foundIndex = newVendors.findIndex(e => e.uid == updatedValue.uid);\r\n        if (foundIndex >= 0) {\r\n          newVendors[foundIndex] = updatedValue;\r\n        } else {\r\n          newVendors.push(updatedValue);\r\n        }\r\n        this.props.updateVendors(newVendors);\r\n      });\r\n      Firebase.listenToComplaints(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newComplaints = [...this.props.complaints];\r\n        const foundIndex = newComplaints.findIndex(\r\n          e => e.complaint_key == updatedValue.complaint_key\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newComplaints[foundIndex] = updatedValue;\r\n        } else {\r\n          newComplaints.push(updatedValue);\r\n        }\r\n        this.props.updateComplaints(newComplaints);\r\n      });\r\n      Firebase.listenToCustomers(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newCustomers = [...this.props.customers];\r\n        const foundIndex = newCustomers.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newCustomers[foundIndex] = updatedValue;\r\n        } else {\r\n          newCustomers.push(updatedValue);\r\n        }\r\n        this.props.updateCustomers(newCustomers);\r\n      });\r\n      Firebase.listenToDiscountVouchers(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newVouchers = [...this.props.vouchers];\r\n        const foundIndex = newVouchers.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newVouchers[foundIndex] = updatedValue;\r\n        } else {\r\n          newVouchers.push(updatedValue);\r\n        }\r\n        this.props.updateDiscountVouchers(newVouchers);\r\n      });\r\n      Firebase.listenToNotifications(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newNotifications = [...this.props.notifications];\r\n        const foundIndex = newNotifications.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newNotifications[foundIndex] = updatedValue;\r\n        } else {\r\n          newNotifications.push(updatedValue);\r\n        }\r\n        this.props.updateNotifications(newNotifications);\r\n      });\r\n      Firebase.listenToReservations(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newReservations = [...this.props.reservations];\r\n        const foundIndex = newReservations.findIndex(\r\n          e => e.reservation_key == updatedValue.reservation_key\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newReservations[foundIndex] = updatedValue;\r\n        } else {\r\n          newReservations.push(updatedValue);\r\n        }\r\n        this.props.updateReservations(newReservations);\r\n      });\r\n      Firebase.listenToReviews(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newReviews = [...this.props.reviews];\r\n        const foundIndex = newReviews.findIndex(e => e.uid == updatedValue.uid);\r\n        if (foundIndex >= 0) {\r\n          newReviews[foundIndex] = updatedValue;\r\n        } else {\r\n          newReviews.push(updatedValue);\r\n        }\r\n        this.props.updateReviews(newReviews);\r\n      });\r\n\r\n      Firebase.listenToSlideShows(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newSlideshows = [...this.props.slideshows];\r\n        const foundIndex = newSlideshows.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newSlideshows[foundIndex] = updatedValue;\r\n        } else {\r\n          newSlideshows.push(updatedValue);\r\n        }\r\n        this.props.updateSlideshows(newSlideshows);\r\n      });\r\n      this.props.updateLogin(admin);\r\n    }\r\n    this.setState({ loading: false });\r\n  };\r\n  render() {\r\n    return this.state.loading ? (\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        <Spinner\r\n          style={{ width: 65, height: 65 }}\r\n          animation=\"border\"\r\n          variant=\"primary\"\r\n        />\r\n      </div>\r\n    ) : (\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home></Home>\r\n          </Route>\r\n          <Route exact path=\"/contact\">\r\n            <Contact></Contact>\r\n          </Route>\r\n          <Route exact path=\"/terms\">\r\n            <TermsAndConditions></TermsAndConditions>\r\n          </Route>\r\n          <Route exact path=\"/privacy\">\r\n            <PrivacyPolicy></PrivacyPolicy>\r\n          </Route>\r\n          {this.props.loggedInAdmin !== null ? (\r\n            <>\r\n              <Route exact path=\"/admin/\">\r\n                <Dashboard></Dashboard>\r\n              </Route>\r\n              <Route exact path=\"/admin/vendor/:uid\">\r\n                <Vendor></Vendor>\r\n              </Route>\r\n              <Route exact path=\"/admin/complaints\">\r\n                <Complaints></Complaints>\r\n              </Route>\r\n              <Route exact path=\"/admin/customer/:uid\">\r\n                <Customer></Customer>\r\n              </Route>\r\n              <Route exact path=\"/admin/discount\">\r\n                <DiscountVouchers></DiscountVouchers>\r\n              </Route>\r\n              <Route exact path=\"/admin/reservations\">\r\n                <Reservations></Reservations>\r\n              </Route>\r\n              <Route exact path=\"/admin/slideshow\">\r\n                <Slideshow></Slideshow>\r\n              </Route>\r\n              <Route exact path=\"/admin/verification\">\r\n                <VendorVerifications></VendorVerifications>\r\n              </Route>\r\n            </>\r\n          ) : (\r\n            <Route exact path=\"/admin/\">\r\n              <AdminLogin></AdminLogin>\r\n            </Route>\r\n          )}\r\n          <VendorRouter></VendorRouter>\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Router);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./Store/Store\";\nimport Router from \"./Navigation/Router\";\nimport Firebase from \"./Firebase/Firebase\";\n\nexport default class App extends Component {\n  componentDidMount = async () => {\n    // const vendor = await Firebase.createVendor(\n    //   \"vendor123123@gmail.com\",\n    //   \"123123\",\n    //   \"123 Street\",\n    //   \"123123123\",\n    //   \"Account Name\",\n    //   \"Habib Bank\",\n    //   \"Main\",\n    //   \"Restaurants\",\n    //   37.78510473148223,\n    //   -122.4023187160492,\n    //   \"Restaurent\",\n    //   \"03330431506\",\n    //   null,\n    //   \"\",\n    //   \"123123\"\n    // );\n  };\n  render() {\n    return (\n      <Provider store={Store}>\n        <Router></Router>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.2d5cad77.mp4\";"],"sourceRoot":""}