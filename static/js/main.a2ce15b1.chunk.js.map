{"version":3,"sources":["Reducers/VendorReducer.js","Actions/ActionTypes.js","Reducers/AdminReducer.js","Store/Store.js","Components/HomeNavbar/HomeNavbar.js","Components/Footer/Footer.js","Pages/Home/Home.js","Pages/TermsAndConditions/TermsAndConditions.js","Pages/PrivacyPolicy/PrivacyPolicy.js","Pages/Contact/Contact.js","Config/index.js","Firebase/Firebase.js","Config/localStorage.js","Config/AdminMapping.js","Pages/Admin/Login/Login.js","Components/AdminNavbar/AdminNavbar.js","Pages/Admin/Dashboard/Dashboard.js","Pages/Admin/Vendor/Vendor.js","Pages/Admin/Complaints/Complaints.js","Pages/Admin/Reservations/Reservations.js","Pages/Admin/Customer/Customer.js","Pages/Admin/DiscountVouchers/DiscountVouchers.js","Pages/Admin/Slideshow/Slideshow.js","Navigation/Router.js","App.js","serviceWorker.js","index.js","Images/logo.png","Images/logo.mp4"],"names":["initialState","VendorReducer","state","type","payload","AdminActionTypes","loggedInAdmin","reservations","vendors","notifications","complaints","vouchers","reviews","customers","slideshows","AdminReducer","store","createStore","combineReducers","HomeNavbar","className","to","style","width","src","Logo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Footer","href","Home","autoPlay","controls","muted","TermsAndConditions","PrivacyPolicy","Contact","email","subject","message","changeState","name","value","setState","sendMail","a","async","trim","templateParams","from_name","to_name","reply_to","message_html","emailjs","templateParams2","alert","props","history","push","for","onChange","e","target","placeholder","aria-describedby","rows","onClick","this","withRouter","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firebase","uploadSlideShowImage","file","uid","extension","console","log","ref","storage","imageRef","child","put","response","getDownloadURL","Firebase","login","password","auth","signInWithEmailAndPassword","user","getAdmin","database","once","getReservations","val","Object","keys","map","key","getRestaurants","restaurants","getDishes","dishes","getReviews","ratings","getAllReviews","forEach","data","k","getComplaints","getCustomers","getNotifications","addDiscountVoucher","code","expDate","maxUses","discount","vendor_uid","set","numberOfUses","isBlocked","getDiscountVouchers","discounts","listenToNotifications","callBack","on","listenToVendors","listenToReviews","listenToComplaints","listenToDiscountVouchers","listenToReservations","listenToDishes","listenToCustomers","deleteVendor","remove","restrictOrder","update","is_restrict_order","updateProcessingFee","processing_fee","updateProcessingFeeAndVerify","is_number_verified","is_verified","updateDiscountVoucher","addSlideShow","image_url","listenToSlideShows","getSlideShows","deleteSlideshow","setAdmin","localStorage","setItem","JSON","stringify","parse","getItem","removeAdmin","removeItem","mapStateToProps","mapDispatchToProps","dispatch","updateLogin","updateComplaints","updateDiscountVouchers","updateNotifications","updateReservations","updateReviews","updateCustomers","updateVendors","updateSlideshows","Login","window","location","reload","marginTop","htmlFor","connect","AdminNavbar","logout","filter","Dropdown","Item","Navbar","bg","expand","Brand","Toggle","Collapse","Nav","Link","variant","Badge","pill","length","Menu","Button","Dashboard","modalShow","selectedVendor","procFee","clickHandler","element","category","escapeRooms","cafes","events","unverified","Container","Row","Col","xs","Card","Header","Body","Tabs","defaultActiveKey","Tab","eventKey","title","Table","striped","hover","responsive","height","borderRadius","objectFit","photo_url","Pagination","First","Prev","Next","Last","reservation_fee","size","Modal","aria-labelledby","centered","show","onHide","closeButton","Title","InputGroup","Prepend","Text","FormControl","newProFee","Vendor","address","branch","close","instant_data","available","is_email_verfied","llocation","lat","llong","number","bank_details","accountNumber","account_name","bank_name","componentDidMount","vendor","find","match","params","restaurant_uid","reviewsCustomerAndVendorJoin","customer","c","customer_uid","restaurant","array","fill","rating","deleteHandler","reservationsToRender","badgeVariant","status","photo","time","date","attandee","complaintsToRender","Media","as","alt","redirectToVendor","description","md","Form","Check","isValid","label","star","comment","Complaints","Reservations","redirectToCustomer","reservation_key","Customer","r","reservation","reviewsToRender","review","complaint","DiscountVouchers","add","handler","dateHandler","splitDate","split","block","Group","controlId","Label","Control","max","maxLength","Date","splitExpDate","Number","condition","class","Slideshow","fileNameSplit","fileHandler","files","delete","v","Carousel","Caption","background","padding","margin","accept","Router","loading","admin","snapshot","updatedValue","newVendors","foundIndex","findIndex","newComplaints","newCustomers","newVouchers","newNotifications","newReservations","newReviews","newSlideshows","display","alignItems","justifyContent","Spinner","animation","basename","exact","path","App","Store","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a2ce15b1.chunk.js","sourcesContent":["const initialState = {};\r\n\r\nconst VendorReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default VendorReducer;\r\n","const AdminActionTypes = {\r\n  ADMIN_UPDATE_LOGIN_STATUS: \"ADMIN_UPDATE_LOGIN_STATUS\",\r\n  UPDATE_NOTIFICATIONS: \"UPDATE_NOTIFICATIONS\",\r\n  UPDATE_VENDORS: \"UPDATE_VENDORS\",\r\n  UPDATE_RESERVATIONS: \"UPDATE_RESERVATIONS\",\r\n  UPDATE_COMPLAINTS: \"UPDATE_COMPLAINTS\",\r\n  UPDATE_DISCOUNT_VOUCHERS: \"UPDATE_DISCOUNT_VOUCHERS\",\r\n  UPDATE_REVIEWS: \"UPDATE_REVIEWS\",\r\n  UPDATE_CUSTOMERS: \"UPDATE_CUSTOMERS\",\r\n  UPDATE_SLIDESHOW: \"UPDATE_SLIDESHOW\"\r\n};\r\nconst VendorActionTypes = {\r\n  ADMIN_UPDATE_LOGIN_STATUS: \"ADMIN_UPDATE_LOGIN_STATUS\",\r\n  UPDATE_NOTIFICATIONS: \"UPDATE_NOTIFICATIONS\",\r\n  UPDATE_VENDORS: \"UPDATE_VENDORS\",\r\n  UPDATE_RESERVATIONS: \"UPDATE_RESERVATIONS\",\r\n  UPDATE_COMPLAINTS: \"UPDATE_COMPLAINTS\",\r\n  UPDATE_DISCOUNT_VOUCHERS: \"UPDATE_DISCOUNT_VOUCHERS\",\r\n  UPDATE_REVIEWS: \"UPDATE_REVIEWS\"\r\n};\r\nexport { AdminActionTypes, VendorActionTypes };\r\n","import { AdminActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  loggedInAdmin: null,\r\n  reservations: [],\r\n  vendors: [],\r\n  notifications: [],\r\n  complaints: [],\r\n  vouchers: [],\r\n  reviews: [],\r\n  customers: [],\r\n  slideshows: []\r\n};\r\nconst AdminReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case AdminActionTypes.ADMIN_UPDATE_LOGIN_STATUS:\r\n      return { ...state, loggedInAdmin: payload };\r\n\r\n    case AdminActionTypes.UPDATE_COMPLAINTS:\r\n      return { ...state, complaints: payload };\r\n\r\n    case AdminActionTypes.UPDATE_DISCOUNT_VOUCHERS:\r\n      return { ...state, vouchers: payload };\r\n\r\n    case AdminActionTypes.UPDATE_NOTIFICATIONS:\r\n      return { ...state, notifications: payload };\r\n\r\n    case AdminActionTypes.UPDATE_RESERVATIONS:\r\n      return { ...state, reservations: payload };\r\n\r\n    case AdminActionTypes.UPDATE_REVIEWS:\r\n      return { ...state, reviews: payload };\r\n\r\n    case AdminActionTypes.UPDATE_VENDORS:\r\n      return { ...state, vendors: payload };\r\n\r\n    case AdminActionTypes.UPDATE_CUSTOMERS:\r\n      return { ...state, customers: payload };\r\n    case AdminActionTypes.UPDATE_SLIDESHOW:\r\n      return { ...state, slideshows: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AdminReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport VendorReducer from \"../Reducers/VendorReducer\";\r\nimport AdminReducer from \"../Reducers/AdminReducer\";\r\n\r\nconst store = createStore(combineReducers({ VendorReducer, AdminReducer }));\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport \"./HomeNavbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class HomeNavbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"home-navbar navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img\r\n            style={{\r\n              width: \"100px\"\r\n            }}\r\n            src={Logo}\r\n          ></img>\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\"></ul>\r\n          <div className=\"login-buttons my-2 my-lg-0\">\r\n            <Link\r\n              to=\"/vendor/login\"\r\n              className=\"btn text-light btn-primary my-2 my-sm-0\"\r\n            >\r\n              Vendor Login\r\n            </Link>\r\n            <Link\r\n              to=\"/admin/\"\r\n              className=\"btn text-light btn-primary mx-2 my-2 my-sm-0\"\r\n            >\r\n              Admin Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Footer.css\";\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"row bg-light\">\r\n        <p className=\"col-12 col-md-3 order-md-first order-last\">\r\n          &copy;Reserve 2020\r\n        </p>\r\n        <div className=\"offset-md-4 col-12 col-md-4 offet-5 row\">\r\n          <a className=\" col-12 col-md-4 text-md-right\" href=\"/contact\">\r\n            Contact\r\n          </a>\r\n          <a className=\" col-12 col-md-4\" href=\"/terms\">\r\n            Terms & Conditions\r\n          </a>\r\n          <a className=\" col-12 col-md-4\" href=\"/privacy\">\r\n            Privacy Policy\r\n          </a>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Logo from \"../../Images/logo.mp4\";\r\nimport \"./Home.css\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <video\r\n              autoPlay={true}\r\n              controls={false}\r\n              muted\r\n              className=\"logo\"\r\n              src={Logo}\r\n            ></video>\r\n          </div>\r\n          <div className=\"flex social-btns\">\r\n            <a className=\"app-btn blu flex vert\" href=\"https://www.apple.com\">\r\n              <i className=\"fab fa-apple\"></i>\r\n              <p className=\"text\">\r\n                Available on the <br />{\" \"}\r\n                <span className=\"big-txt\">App Store</span>\r\n              </p>\r\n            </a>\r\n\r\n            <a className=\"app-btn blu flex vert\" href=\"https://www.google.com\">\r\n              <i className=\"fab fa-google-play\"></i>\r\n              <p className=\"text\">\r\n                Get it on <br /> <span className=\"big-txt\">Google Play</span>\r\n              </p>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"container-fluid\">\r\n          <Footer></Footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./TermsAndConditions.css\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nexport default class TermsAndConditions extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./PrivacyPolicy.css\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nexport default class PrivacyPolicy extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport HomeNavbar from \"../../Components/HomeNavbar/HomeNavbar\";\r\nimport Footer from \"../../Components/Footer/Footer\";\r\nimport \"./Contact.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass Contact extends Component {\r\n  state = {\r\n    email: \"\",\r\n    subject: \"Complaint\",\r\n    message: \"\"\r\n  };\r\n  changeState = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  sendMail = async () => {\r\n    if (\r\n      this.state.email.trim() !== \"\" &&\r\n      this.state.subject.trim() !== \"\" &&\r\n      this.state.message.trim() !== \"\"\r\n    ) {\r\n      let templateParams = {\r\n        from_name: this.state.email.trim(),\r\n        to_name: \"ibrahimnabi80@gmail.com\",\r\n        reply_to: this.state.email.trim(),\r\n        subject: this.state.subject,\r\n        message_html: this.state.message\r\n      };\r\n      emailjs.send(\r\n        \"reserve_contact\",\r\n        \"template_KiH1F4zS\",\r\n        templateParams,\r\n        \"user_aVbbjsfKbS0Qub1NMA29M\"\r\n      );\r\n      let templateParams2 = {\r\n        from_name: \"ibrahimnabi80@gmail.com\",\r\n        to_name: this.state.email.trim(),\r\n        subject: \"Response\",\r\n        message_html:\r\n          \"We received your message and we will reply soon. Your inquiry id is 001\"\r\n      };\r\n      emailjs.send(\r\n        \"reserve_contact\",\r\n        \"template_KiH1F4zS\",\r\n        templateParams2,\r\n        \"user_aVbbjsfKbS0Qub1NMA29M\"\r\n      );\r\n      alert(\"We received your message and we will reply soon\");\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      alert(\"Please fill all field before submitting.\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HomeNavbar></HomeNavbar>\r\n        <div className=\"container\">\r\n          <form className=\" contact-form\">\r\n            <legend>Contact Form</legend>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleFormControlSelect1\">Select Subject</label>\r\n              <select\r\n                onChange={e => this.changeState(\"subject\", e.target.value)}\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlSelect1\"\r\n              >\r\n                <option value=\"Complaint\">Complaint</option>\r\n                <option value=\"Inquiry\">Inquiry</option>\r\n                <option value=\"Feedback\">Feedback</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleInputEmail1\">Enter Your Email Address</label>\r\n              <input\r\n                onChange={e => this.changeState(\"email\", e.target.value)}\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"exampleInputEmail1\"\r\n                placeholder=\"Email Address\"\r\n                aria-describedby=\"emailHelp\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"exampleFormControlTextarea1\">\r\n                Enter Your Message\r\n              </label>\r\n              <textarea\r\n                onChange={e => this.changeState(\"message\", e.target.value)}\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlTextarea1\"\r\n                rows=\"3\"\r\n                placeholder=\"Message\"\r\n              ></textarea>\r\n            </div>\r\n            <button\r\n              onClick={this.sendMail}\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <Footer></Footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Contact);\r\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyB7qtP77Rx3HmirB5lyWJ90RYeMu4TVnyc\",\r\n  authDomain: \"reserve-restaurant-80ec7.firebaseapp.com\",\r\n  databaseURL: \"https://reserve-restaurant-80ec7.firebaseio.com\",\r\n  projectId: \"reserve-restaurant-80ec7\",\r\n  storageBucket: \"reserve-restaurant-80ec7.appspot.com\",\r\n  messagingSenderId: \"1022182989367\",\r\n  appId: \"1:1022182989367:web:12692d873c484a842be9b2\",\r\n  measurementId: \"G-CSDM8VMGL4\"\r\n};\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyDpsl140hY7lCFfPw_CV9fxbDsbbU2YN6U\",\r\n//   authDomain: \"reserve-1d4e1.firebaseapp.com\",\r\n//   databaseURL: \"https://reserve-1d4e1.firebaseio.com\",\r\n//   projectId: \"reserve-1d4e1\",\r\n//   storageBucket: \"reserve-1d4e1.appspot.com\",\r\n//   messagingSenderId: \"1028452700122\",\r\n//   appId: \"1:1028452700122:web:852c13d9b3cd2045227ae3\",\r\n//   measurementId: \"G-T7D59TGW8L\"\r\n// };\r\nexport default firebaseConfig;\r\n","import * as firebase from \"firebase\";\r\nimport firebaseConfig from \"../Config\";\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nconst getAdmin = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/admin/\" + uid)\r\n    .once(\"value\");\r\n};\r\nconst login = async (email, password) => {\r\n  const response = await app.auth().signInWithEmailAndPassword(email, password);\r\n  return response.user;\r\n};\r\nconst getReservations = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const reservations = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return reservations;\r\n};\r\nconst getRestaurants = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const restaurants = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return restaurants;\r\n};\r\nconst getDishes = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const dishes = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return dishes;\r\n};\r\nconst getReviews = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/ratings/\" + uid)\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const ratings = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return ratings;\r\n};\r\nconst getNotifications = async uid => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  if (value) {\r\n    const notifications = Object.keys(value).map(key => {\r\n      return value[key];\r\n    });\r\n    return notifications;\r\n  }\r\n  return [];\r\n};\r\nconst getAllReviews = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/ratings/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const ratings = [];\r\n  Object.keys(value).forEach(key => {\r\n    const data = Object.keys(value[key]).map(k => value[key][k]);\r\n    ratings.push(...data);\r\n  });\r\n  return ratings;\r\n};\r\nconst getComplaints = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/complaints/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const complaints = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return complaints;\r\n};\r\nconst getSlideShows = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/slideshows/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  if (value) {\r\n    const slideshows = Object.keys(value).map(key => {\r\n      return value[key];\r\n    });\r\n    return slideshows;\r\n  }\r\n  return [];\r\n};\r\nconst getCustomers = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/customers/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const customers = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return customers;\r\n};\r\nconst addDiscountVoucher = async (\r\n  code,\r\n  expDate,\r\n  maxUses,\r\n  discount,\r\n  vendor_uid\r\n) => {\r\n  const key = await app\r\n    .database()\r\n    .ref(\"/discounts\")\r\n    .push();\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + key.key)\r\n    .set({\r\n      code,\r\n      expDate,\r\n      maxUses,\r\n      numberOfUses: 0,\r\n      isBlocked: false,\r\n      uid: key.key,\r\n      discount,\r\n      vendor_uid\r\n    });\r\n};\r\nconst updateDiscountVoucher = async (uid, isBlocked) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/discounts/\" + uid)\r\n    .update({\r\n      isBlocked\r\n    });\r\n};\r\nconst getDiscountVouchers = async () => {\r\n  const response = await app\r\n    .database()\r\n    .ref(\"/discounts/\")\r\n    .once(\"value\");\r\n  const value = response.val();\r\n  const discounts = Object.keys(value).map(key => {\r\n    return value[key];\r\n  });\r\n  return discounts;\r\n};\r\nconst listenToNotifications = async (callBack, uid) => {\r\n  app\r\n    .database()\r\n    .ref(\"/notifications/\" + uid)\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToVendors = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/restaurants/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToReviews = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/reviews/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToSlideShows = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/slideshows/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst deleteVendor = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .remove();\r\n};\r\nconst deleteSlideshow = async uid => {\r\n  await app\r\n    .database()\r\n    .ref(\"/slideshows/\" + uid)\r\n    .remove();\r\n};\r\nconst listenToComplaints = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/complaints/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToDiscountVouchers = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/discounts/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToReservations = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/reservations/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToDishes = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/dishes/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst listenToCustomers = async callBack => {\r\n  app\r\n    .database()\r\n    .ref(\"/customers/\")\r\n    .on(\"child_changed\", callBack);\r\n};\r\nconst restrictOrder = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      is_restrict_order: value\r\n    });\r\n};\r\nconst updateProcessingFee = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      processing_fee: value + \"\"\r\n    });\r\n};\r\nconst updateProcessingFeeAndVerify = async (value, uid) => {\r\n  await app\r\n    .database()\r\n    .ref(\"/restaurants/\" + uid)\r\n    .update({\r\n      processing_fee: value + \"\",\r\n      is_number_verified: true,\r\n      is_verified: true\r\n    });\r\n};\r\nconst addSlideShow = async (file, extension, vendor_uid) => {\r\n  const key = (\r\n    await app\r\n      .database()\r\n      .ref(\"/slideshows/\")\r\n      .push()\r\n  ).key;\r\n  console.log(\"uid = \", key);\r\n  const image_url = await uploadSlideShowImage(file, key, extension);\r\n  console.log(\"image_url = \", image_url);\r\n  await app\r\n    .database()\r\n    .ref(\"/slideshows/\" + key)\r\n    .set({\r\n      uid: key,\r\n      vendor_uid,\r\n      image_url\r\n    });\r\n};\r\nconst uploadSlideShowImage = async (file, uid, extension) => {\r\n  console.log(\"uu uid = \", uid);\r\n  console.log(\"extension = \", extension);\r\n  console.log(\"file = \", file);\r\n  const ref = app.storage().ref(\"/slideshows/\");\r\n  var imageRef = ref.child(uid + \".\" + extension);\r\n  const response = await imageRef.put(file);\r\n  return response.ref.getDownloadURL();\r\n};\r\nconst Firebase = {\r\n  login,\r\n  getAdmin,\r\n  getReservations,\r\n  getRestaurants,\r\n  getDishes,\r\n  getReviews,\r\n  getAllReviews,\r\n  getComplaints,\r\n  getCustomers,\r\n  getNotifications,\r\n  addDiscountVoucher,\r\n  getDiscountVouchers,\r\n  listenToNotifications,\r\n  listenToVendors,\r\n  listenToReviews,\r\n  listenToComplaints,\r\n  listenToDiscountVouchers,\r\n  listenToReservations,\r\n  listenToDishes,\r\n  listenToCustomers,\r\n  deleteVendor,\r\n  restrictOrder,\r\n  updateProcessingFee,\r\n  updateProcessingFeeAndVerify,\r\n  updateDiscountVoucher,\r\n  addSlideShow,\r\n  listenToSlideShows,\r\n  getSlideShows,\r\n  deleteSlideshow\r\n};\r\nexport default Firebase;\r\n","const setAdmin = user => {\r\n  localStorage.setItem(\"admin\", JSON.stringify(user));\r\n};\r\nconst getAdmin = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"admin\"));\r\n  return user;\r\n};\r\nconst removeAdmin = () => {\r\n  localStorage.removeItem(\"admin\");\r\n};\r\n\r\nexport { setAdmin, getAdmin, removeAdmin };\r\n","import { AdminActionTypes } from \"../Actions/ActionTypes\";\r\n\r\nconst mapStateToProps = state => {\r\n  return state.AdminReducer;\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateLogin: user =>\r\n      dispatch({\r\n        type: AdminActionTypes.ADMIN_UPDATE_LOGIN_STATUS,\r\n        payload: user\r\n      }),\r\n    updateComplaints: complaints =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_COMPLAINTS,\r\n        payload: complaints\r\n      }),\r\n    updateDiscountVouchers: vouchers =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_DISCOUNT_VOUCHERS,\r\n        payload: vouchers\r\n      }),\r\n    updateNotifications: notifications =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_NOTIFICATIONS,\r\n        payload: notifications\r\n      }),\r\n    updateReservations: reservations =>\r\n      dispatch({\r\n        type: AdminActionTypes.UPDATE_RESERVATIONS,\r\n        payload: reservations\r\n      }),\r\n    updateReviews: reviews =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_REVIEWS, payload: reviews }),\r\n    updateCustomers: customers =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_CUSTOMERS, payload: customers }),\r\n    updateVendors: vendors =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_VENDORS, payload: vendors }),\r\n    updateSlideshows: slideshows =>\r\n      dispatch({ type: AdminActionTypes.UPDATE_SLIDESHOW, payload: slideshows })\r\n  };\r\n};\r\nexport { mapDispatchToProps, mapStateToProps };\r\n","import React, { Component } from \"react\";\r\nimport \"./Login.css\";\r\nimport Logo from \"../../../Images/logo.png\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nimport { setAdmin } from \"../../../Config/localStorage\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  changeState = (name, value) => {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  login = async () => {\r\n    if (this.state.email.trim() !== \"\" && this.state.password.trim() !== \"\") {\r\n      const user = await Firebase.login(this.state.email, this.state.password);\r\n      setAdmin(user);\r\n      this.props.updateLogin(user);\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Your have to fill all fields in order to login\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <HomeNavbar></HomeNavbar> */}\r\n        <div className=\"container \">\r\n          <div className=\"row justify-content-center\">\r\n            <img\r\n              style={{\r\n                width: \"20%\",\r\n                marginTop: \"10vh\"\r\n              }}\r\n              src={Logo}\r\n            ></img>\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <form className=\"loginAdmin col-10 col-md-6\">\r\n              <legend>Admin Login</legend>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">\r\n                  Enter Your Email Address\r\n                </label>\r\n                <input\r\n                  onChange={e => this.changeState(\"email\", e.target.value)}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  placeholder=\"Email Address\"\r\n                  aria-describedby=\"emailHelp\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Enter Your Password</label>\r\n                <input\r\n                  onChange={e => this.changeState(\"password\", e.target.value)}\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n              <button\r\n                onClick={this.login}\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                Login\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        {/* <Footer></Footer> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../Images/logo.png\";\r\nimport \"./AdminNavbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeAdmin } from \"../../Config/localStorage\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"../../Config/AdminMapping\";\r\nclass AdminNavbar extends Component {\r\n  logout = async () => {\r\n    removeAdmin();\r\n    this.props.updateLogin(null);\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.filter(e => !e.is_verified);\r\n    const notifications = vendors.map(e => {\r\n      return (\r\n        <Dropdown.Item href=\"#/action-1\">\r\n          Verify New Vendor {e.name}\r\n        </Dropdown.Item>\r\n      );\r\n    });\r\n    return (\r\n      <Navbar className=\"admin-nav\" bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand>\r\n          <Link to=\"/admin/\">\r\n            <img style={{ width: 100 }} src={Logo}></img>\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto admin-nav-links\">\r\n            <Nav.Link>\r\n              <Link to=\"/admin\">Vendors</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/reservations\">Reservations</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/discount\">Discount Vouchers</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/complaints\">Complaints</Link>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <Link to=\"/admin/slideshow\">Slideshow</Link>\r\n            </Nav.Link>\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">\r\n                <ion-icon name=\"notifications-outline\"></ion-icon>\r\n                <Badge pill className=\"notifications\" variant=\"primary\">\r\n                  {vendors.length}\r\n                </Badge>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>{notifications}</Dropdown.Menu>\r\n            </Dropdown>\r\n          </Nav>\r\n          <Link>\r\n            <Button\r\n              onClick={this.logout}\r\n              type=\"button\"\r\n              variant=\"outline-primary\"\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Link>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminNavbar);\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Tabs,\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Pagination,\r\n  Badge,\r\n  Button,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"./Dashboard.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nclass Dashboard extends Component {\r\n  state = {\r\n    modalShow: false,\r\n    selectedVendor: \"\",\r\n    procFee: 0\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const restaurants = this.props.vendors.filter(\r\n      element => element.category === \"Restaurants\" && element.is_verified\r\n    );\r\n    const escapeRooms = this.props.vendors.filter(\r\n      element => element.category === \"Escape Rooms\" && element.is_verified\r\n    );\r\n    const cafes = this.props.vendors.filter(\r\n      element => element.category === \"Cafes\" && element.is_verified\r\n    );\r\n    const events = this.props.vendors.filter(\r\n      element => element.category === \"Events\" && element.is_verified\r\n    );\r\n    const unverified = this.props.vendors.filter(\r\n      element => !element.is_verified\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xs={12}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Vendors</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Tabs\r\n                    variant=\"pills\"\r\n                    defaultActiveKey=\"Restaurants\"\r\n                    id=\"noanim-tab-example\"\r\n                  >\r\n                    <Tab eventKey=\"Restaurants\" title=\"Restaurants\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {restaurants.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <td>\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={element.photo_url}\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unverified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Cafe\" title=\"Cafe\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {cafes.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <td>\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={element.photo_url}\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unerified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Escape Rooms\" title=\"Escape Rooms\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {escapeRooms.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <td>\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={element.photo_url}\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unerified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Event Organizers\" title=\"Event Organizers\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Status</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {events.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr\r\n                                  onClick={() => this.clickHandler(element.uid)}\r\n                                >\r\n                                  <td>\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={element.photo_url}\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unerified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Unverified\" title=\"Unverified\">\r\n                      <Table striped hover responsive>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Reservation Price</th>\r\n                            <th>Status</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {unverified.map(element => {\r\n                            return (\r\n                              <>\r\n                                <tr>\r\n                                  <td\r\n                                    onClick={() =>\r\n                                      this.clickHandler(element.uid)\r\n                                    }\r\n                                  >\r\n                                    <img\r\n                                      style={{\r\n                                        width: 40,\r\n                                        height: 40,\r\n                                        borderRadius: 50,\r\n                                        objectFit: \"cover\"\r\n                                      }}\r\n                                      src={\r\n                                        element.photo_url\r\n                                          ? element.photo_url\r\n                                          : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                                      }\r\n                                    ></img>\r\n                                  </td>\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.email}</td>\r\n                                  <td>{element.reservation_fee}</td>\r\n                                  <td>\r\n                                    {element.is_verified ? (\r\n                                      <Badge variant=\"success\">Verified</Badge>\r\n                                    ) : (\r\n                                      <Badge variant=\"danger\">Unerified</Badge>\r\n                                    )}\r\n                                  </td>\r\n                                  <td>\r\n                                    <Button\r\n                                      onClick={() => {\r\n                                        this.setState({\r\n                                          modalShow: true,\r\n                                          selectedVendor: element.uid\r\n                                        });\r\n                                      }}\r\n                                      variant=\"success\"\r\n                                      size=\"sm\"\r\n                                    >\r\n                                      Verify\r\n                                    </Button>\r\n                                  </td>\r\n                                </tr>\r\n                              </>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </Table>\r\n                      <Pagination>\r\n                        <Pagination.First />\r\n                        <Pagination.Prev />\r\n                        <Pagination.Item>{1}</Pagination.Item>\r\n                        <Pagination.Item>{2}</Pagination.Item>\r\n                        <Pagination.Item>{3}</Pagination.Item>\r\n                        <Pagination.Item>{4}</Pagination.Item>\r\n                        <Pagination.Item>{5}</Pagination.Item>\r\n                        <Pagination.Next />\r\n                        <Pagination.Last />\r\n                      </Pagination>\r\n                    </Tab>\r\n                  </Tabs>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>{\" \"}\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Processing Fee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  Processing Fee\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                type=\"number\"\r\n                onChange={e => {\r\n                  this.setState({\r\n                    newProFee: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={async () => {\r\n                await Firebase.updateProcessingFeeAndVerify(\r\n                  this.state.newProFee,\r\n                  this.state.selectedVendor\r\n                );\r\n                this.setState({ modalShow: false });\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.setState({ modalShow: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Dashboard));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Card,\r\n  Button,\r\n  Pagination,\r\n  Table,\r\n  Badge,\r\n  Media,\r\n  Form,\r\n  Modal,\r\n  InputGroup,\r\n  FormControl\r\n} from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport \"./Vendor.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nclass Vendor extends Component {\r\n  state = {\r\n    address: \"\",\r\n    branch: \"\",\r\n    category: \"\",\r\n    close: false,\r\n    email: \"\",\r\n    instant_data: {\r\n      available: 0\r\n    },\r\n    modalShow: false,\r\n    is_email_verfied: false,\r\n    is_number_verified: false,\r\n    is_restrict_order: false,\r\n    is_verified: false,\r\n    llocation: {\r\n      lat: 0,\r\n      llong: 0\r\n    },\r\n    name: \"\",\r\n    number: \"\",\r\n    photo_url: \"\",\r\n    reservation_fee: \"0\",\r\n    processing_fee: \"0\",\r\n    uid: \"LEa50vSb5KTbwvz3FgToiDwvzKm1\",\r\n    bank_details: {\r\n      accountNumber: \"\",\r\n      account_name: \"\",\r\n      bank_name: \"\"\r\n    },\r\n    reviews: [],\r\n    newProFee: 0\r\n  };\r\n  restrictOrder = async uid => {\r\n    await Firebase.restrictOrder(!this.state.is_restrict_order, uid);\r\n    this.setState({\r\n      is_restrict_order: !this.state.is_restrict_order\r\n    });\r\n  };\r\n  componentDidMount = async () => {\r\n    const vendor = this.props.vendors.find(\r\n      element => element.uid === this.props.match.params.uid\r\n    );\r\n    console.log(vendor);\r\n    this.setState({\r\n      ...vendor\r\n    });\r\n    const reviews = this.props.reviews.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    let reviewsCustomerAndVendorJoin = reviews.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const restaurant = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, element.rating);\r\n      return {\r\n        ...element,\r\n        customer,\r\n        restaurant,\r\n        array\r\n      };\r\n    });\r\n    this.setState({\r\n      reviews: reviewsCustomerAndVendorJoin\r\n    });\r\n  };\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/customer/\" + uid);\r\n  };\r\n  deleteHandler = async () => {\r\n    await Firebase.deleteVendor(this.state.uid);\r\n    this.props.history.push(\"/admin/\");\r\n  };\r\n  render() {\r\n    const reservations = this.props.reservations.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    console.log(this.props.reservations);\r\n    const reservationsToRender = reservations.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        element.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : element.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.clickHandler(customer.uid)}>\r\n          <td>\r\n            <img\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                borderRadius: 50,\r\n                objectFit: \"cover\"\r\n              }}\r\n              src={customer.photo}\r\n            ></img>\r\n          </td>\r\n          <td>{customer.name}</td>\r\n          <td>{element.time}</td>\r\n          <td>{element.date}</td>\r\n          <td>{element.attandee}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{element.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    console.log(reservationsToRender);\r\n    const complaints = this.props.complaints.filter(\r\n      element => element.restaurant_uid === this.props.match.params.uid\r\n    );\r\n    const complaintsToRender = complaints.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      return customer ? (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              customer.photo\r\n                ? customer.photo\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{customer.name}</h5>\r\n            <Row className=\"ml-1\">\r\n              <h6 onClick={this.redirectToVendor}>{vendor.name}</h6>\r\n            </Row>\r\n            <Row className=\"ml-1\">\r\n              <h6 className=\"text-muted\">{element.title}</h6>\r\n            </Row>\r\n            <p>{element.description}</p>\r\n            <p>\r\n              Date of Complaint:{\" \"}\r\n              <small className=\"text-muted\">{element.date}</small>\r\n            </p>\r\n          </Media.Body>\r\n        </Media>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"12\" md=\"3\">\r\n              <Card>\r\n                <Card.Body>\r\n                  <img\r\n                    style={{ width: \"100%\", height: 200, objectFit: \"cover\" }}\r\n                    src={this.state.photo_url}\r\n                  ></img>\r\n                  <hr></hr>\r\n                  <p className=\"h5\">{this.state.name}</p>\r\n                  <p className=\"text-muted\">{this.state.category}</p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Branch:{\" \"}\r\n                    <span className=\"text-muted\">{this.state.branch}</span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Phone:{\" \"}\r\n                    <span className=\"text-muted\">{this.state.number}</span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Email:{\" \"}\r\n                    <span className=\"text-muted\">{this.state.email}</span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Bank Name:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      {this.state.bank_details.bank_name}\r\n                    </span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Account Name:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      {this.state.bank_details.account_name}\r\n                    </span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Account Number:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      {this.state.bank_details.accountNumber}\r\n                    </span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Reservation Fee:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      $ {this.state.reservation_fee}\r\n                    </span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Processing Fee:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      $ {this.state.processing_fee}\r\n                    </span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Available Reservations:{\" \"}\r\n                    <span className=\"text-muted\">\r\n                      {this.state.instant_data.available}\r\n                    </span>\r\n                  </p>\r\n                  <hr></hr>\r\n                  <Form.Check\r\n                    isValid={this.state.is_restrict_order}\r\n                    type=\"switch\"\r\n                    id=\"custom-switch\"\r\n                    label=\"Stop Reservations\"\r\n                    onChange={() => this.restrictOrder(this.state.uid)}\r\n                  />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"mt-3 mt-md-0 mb-5\" xs=\"12\" md=\"9\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Vendor Details</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Row className=\" p-4\">\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          modalShow: true\r\n                        });\r\n                      }}\r\n                      variant=\"primary\"\r\n                      className=\"mx-2\"\r\n                    >\r\n                      Edit Processing Fee\r\n                    </Button>\r\n                    <Button\r\n                      onClick={this.deleteHandler}\r\n                      variant=\"danger\"\r\n                      className=\"mx-2\"\r\n                    >\r\n                      Remove Vendor\r\n                    </Button>\r\n                  </Row>\r\n                  <hr></hr>\r\n                  <h3>Location</h3>\r\n                  <div className=\"map\">\r\n                    <h1>Map will be displayed here</h1>\r\n                  </div>\r\n                  <hr></hr>\r\n                  <h3>Reservations</h3>\r\n                  <Table responsive striped hover>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>ID</th>\r\n                        <th>Customer Name</th>\r\n                        <th>Reservation Time</th>\r\n                        <th>Date of Reservation</th>\r\n                        <th>Number of Tables/Attendees</th>\r\n                        <th>Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>{reservationsToRender}</tbody>\r\n                  </Table>\r\n                  <hr></hr>\r\n                  <h3>Reviews</h3>\r\n                  <ul className=\"list-unstyled mt-5\">\r\n                    {this.state.reviews.map(element => {\r\n                      return (\r\n                        <Media as=\"li\">\r\n                          <img\r\n                            width={64}\r\n                            height={64}\r\n                            className=\"mr-3\"\r\n                            style={{ objectFit: \"cover\" }}\r\n                            src={\r\n                              element.customer.photo\r\n                                ? element.customer.photo\r\n                                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n                            }\r\n                            alt=\"Generic placeholder\"\r\n                          />\r\n                          <Media.Body>\r\n                            <h5>{element.customer.name}</h5>\r\n                            <Row className=\"media-stars \">\r\n                              {element.array.map(star => {\r\n                                return <ion-icon name={star}></ion-icon>;\r\n                              })}\r\n                            </Row>\r\n                            <p>{element.comment}</p>\r\n                          </Media.Body>\r\n                        </Media>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                  <hr></hr>\r\n                  <h3>Complaints</h3>\r\n                  <ul className=\"list-unstyled mt-5\">{complaintsToRender}</ul>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Modal\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n          show={this.state.modalShow}\r\n          onHide={() => this.setState({ modalShow: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Processing Fee\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroup-sizing-default\">\r\n                  Processing Fee\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                type=\"number\"\r\n                onChange={e => {\r\n                  this.setState({\r\n                    newProFee: e.target.value\r\n                  });\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              onClick={async () => {\r\n                await Firebase.updateProcessingFee(\r\n                  this.state.newProFee,\r\n                  this.state.uid\r\n                );\r\n                this.setState({ modalShow: false });\r\n                window.location.reload();\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => this.setState({ modalShow: false })}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Vendor));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport { Card, Pagination, Row, Media, Container } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\n\r\nclass Complaints extends Component {\r\n  redirectToVendor = async () => {\r\n    this.props.history.push(\"/admin/vendor\");\r\n  };\r\n  render() {\r\n    const complaintsToRender = this.props.complaints.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const condition = customer && vendor;\r\n      return condition ? (\r\n        <>\r\n          <Media as=\"li\">\r\n            <img\r\n              width={64}\r\n              height={64}\r\n              className=\"mr-3\"\r\n              style={{ objectFit: \"cover\" }}\r\n              src={\r\n                customer.photo\r\n                  ? customer.photo\r\n                  : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n              }\r\n              alt=\"Generic placeholder\"\r\n            />\r\n            <Media.Body>\r\n              <h5>{customer.name}</h5>\r\n              <Row className=\"ml-1\">\r\n                <h6 onClick={this.redirectToVendor}>{vendor.name}</h6>\r\n              </Row>\r\n              <Row className=\"ml-1\">\r\n                <h6 className=\"text-muted\">{element.title}</h6>\r\n              </Row>\r\n              <p>{element.description}</p>\r\n              <p>\r\n                Date of Complaint:{\" \"}\r\n                <small className=\"text-muted\">{element.date}</small>\r\n              </p>\r\n            </Media.Body>\r\n          </Media>\r\n          <hr></hr>\r\n        </>\r\n      ) : null;\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Card className=\"my-3\">\r\n            <Card.Header>\r\n              <h1>Complaints</h1>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <ul className=\"list-unstyled mt-5\">{complaintsToRender}</ul>\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Complaints));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport { Pagination, Container, Card, Table, Badge } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Reservations extends Component {\r\n  redirectToCustomer = async uid => {\r\n    this.props.history.push(\"/admin/customer/\" + uid);\r\n  };\r\n  render() {\r\n    const reservationsToRender = this.props.reservations.map(element => {\r\n      const customer = this.props.customers.find(\r\n        c => c.uid === element.customer_uid\r\n      );\r\n      const vendor = this.props.vendors.find(\r\n        c => c.uid === element.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        element.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : element.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.redirectToCustomer(customer.uid)}>\r\n          <td>{element.reservation_key}</td>\r\n          <td>{customer.name}</td>\r\n          <td>{vendor ? vendor.name : \"Vendor Deleted\"}</td>\r\n          <td>{element.time}</td>\r\n          <td>{element.date}</td>\r\n          <td>{element.attandee}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{element.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Card className=\"my-3\">\r\n            <Card.Header>\r\n              <h1>Reservations</h1>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Table responsive striped hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Customer Name</th>\r\n                    <th>Restaurant Name</th>\r\n                    <th>Reservation Time</th>\r\n                    <th>Date of Reservation</th>\r\n                    <th>Number of Tables/Attendees</th>\r\n                    <th>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{reservationsToRender}</tbody>\r\n              </Table>\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Reservations));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Table,\r\n  Pagination,\r\n  Media,\r\n  Badge\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nclass Customer extends Component {\r\n  clickHandler = async uid => {\r\n    this.props.history.push(\"/admin/vendor/\" + uid);\r\n  };\r\n  render() {\r\n    const customer = this.props.customers.find(\r\n      e => e.uid === this.props.match.params.uid\r\n    );\r\n    const reservations = this.props.reservations.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const complaints = this.props.complaints.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const reviews = this.props.reviews.filter(\r\n      r => r.customer_uid == this.props.match.params.uid\r\n    );\r\n    const reservationsToRender = reservations.map(reservation => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === reservation.restaurant_uid\r\n      );\r\n      const badgeVariant =\r\n        reservation.status == \"Reserved\"\r\n          ? \"warning\"\r\n          : reservation.status == \"Completed\"\r\n          ? \"success\"\r\n          : \"danger\";\r\n      return (\r\n        <tr onClick={() => this.clickHandler(vendor.uid)}>\r\n          <td>\r\n            <img\r\n              src={vendor ? vendor.photo_url : \"\"}\r\n              style={{\r\n                width: 40,\r\n                height: 40,\r\n                objectFit: \"cover\",\r\n                borderRadius: 40\r\n              }}\r\n            ></img>\r\n          </td>\r\n          <td>{vendor ? vendor.name : \"Vendor Deleted\"}</td>\r\n          <td>{reservation.time}</td>\r\n          <td>{reservation.date}</td>\r\n          <td>{reservation.attandee}</td>\r\n          <td>\r\n            <Badge variant={badgeVariant}>{reservation.status}</Badge>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    const reviewsToRender = reviews.map(review => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === review.restaurant_uid\r\n      );\r\n\r\n      const array = [\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\",\r\n        \"star-outline\"\r\n      ];\r\n      array.fill(\"star\", 0, review.rating);\r\n      return (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              vendor.photo_url\r\n                ? vendor.photo_url\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{vendor.name}</h5>\r\n            <Row className=\"media-stars \">\r\n              {array.map(e => (\r\n                <ion-icon name={e}></ion-icon>\r\n              ))}\r\n            </Row>\r\n            <p>{review.comment}</p>\r\n          </Media.Body>\r\n        </Media>\r\n      );\r\n    });\r\n    const complaintsToRender = complaints.map(complaint => {\r\n      const vendor = this.props.vendors.find(\r\n        e => e.uid === complaint.restaurant_uid\r\n      );\r\n\r\n      return (\r\n        <Media as=\"li\">\r\n          <img\r\n            width={64}\r\n            height={64}\r\n            className=\"mr-3\"\r\n            style={{ objectFit: \"cover\" }}\r\n            src={\r\n              vendor.photo_url\r\n                ? vendor.photo_url\r\n                : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRwYsBVC-oKRvO87aXVfE63jYe52NcDYM5ArsCRKAGZaImUHAql\"\r\n            }\r\n            alt=\"Generic placeholder\"\r\n          />\r\n          <Media.Body>\r\n            <h5>{vendor.name}</h5>\r\n            <Row className=\"ml-1\">\r\n              <h6 className=\"text-muted\">{vendor.title}</h6>\r\n            </Row>\r\n            <p>{complaint.description}</p>\r\n            <p>\r\n              Date of Complaint:{\" \"}\r\n              <small className=\"text-muted\">{complaint.date}</small>\r\n            </p>\r\n          </Media.Body>\r\n        </Media>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Row>\r\n            <Col xs=\"12\" md=\"3\">\r\n              <Card>\r\n                <Card.Body>\r\n                  <img\r\n                    style={{ width: \"100%\", height: 200, objectFit: \"cover\" }}\r\n                    src={customer.photo}\r\n                  ></img>\r\n                  <hr></hr>\r\n                  <p className=\"h5\">{customer.name}</p>\r\n                  <hr></hr>\r\n                  <p className=\"h6\">\r\n                    Phone: <span className=\"text-muted\">{customer.number}</span>\r\n                  </p>\r\n                  <p className=\"h6\">\r\n                    Email: <span className=\"text-muted\">{customer.email}</span>\r\n                  </p>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"mt-3 mt-md-0 mb-5\" xs=\"12\" md=\"9\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Customer History</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <h3>Reservations</h3>\r\n                  <Table responsive striped hover>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Image</th>\r\n                        <th>Vendor Name</th>\r\n                        <th>Reservation Time</th>\r\n                        <th>Date of Registration</th>\r\n                        <th>Number of Tables/Attendees</th>\r\n                        <th>Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>{reservationsToRender}</tbody>\r\n                  </Table>\r\n\r\n                  <hr></hr>\r\n                  <h3>Reviews</h3>\r\n                  <ul className=\"list-unstyled mt-5\">{reviewsToRender} </ul>\r\n\r\n                  <hr></hr>\r\n\r\n                  <h3>Complaints</h3>\r\n                  <ul className=\"list-unstyled mt-5\">{complaintsToRender}</ul>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Customer));\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  Pagination,\r\n  Table,\r\n  Badge,\r\n  Form,\r\n  Button,\r\n  Col\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport \"./DiscountVouchers.css\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\nclass DiscountVouchers extends Component {\r\n  state = {\r\n    code: \"\",\r\n    expDate: \"\",\r\n    maxUses: 0,\r\n    discount: 0,\r\n    vendor_uid: \"\"\r\n  };\r\n  add = async () => {\r\n    await Firebase.addDiscountVoucher(\r\n      this.state.code,\r\n      this.state.expDate,\r\n      this.state.maxUses,\r\n      this.state.discount + \"%\",\r\n      this.state.vendor_uid\r\n    );\r\n    window.location.reload();\r\n  };\r\n  handler = (name, value) => {\r\n    console.log(value);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  dateHandler = e => {\r\n    const splitDate = e.target.value.split(\"-\");\r\n\r\n    this.setState({\r\n      expDate: splitDate[2] + \"/\" + splitDate[1] + \"/\" + splitDate[0]\r\n    });\r\n  };\r\n  block = async (uid, value) => {\r\n    await Firebase.updateDiscountVoucher(uid, !value);\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.map(e => {\r\n      return <option value={e.uid}>{e.name}</option>;\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Card className=\"my-3\">\r\n            <Card.Header>\r\n              <h1>Discount Vouchers</h1>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form>\r\n                <legend className=\"h4\">Add Discount Voucher</legend>\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>Code</Form.Label>\r\n                    <Form.Control\r\n                      onChange={e => this.handler(\"code\", e.target.value)}\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Code\"\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} controlId=\"expiryDate\">\r\n                    <Form.Label>Expiry Date</Form.Label>\r\n                    <Form.Control\r\n                      onChange={this.dateHandler}\r\n                      type=\"date\"\r\n                      placeholder=\"Expiry Date\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                  <Form.Label>Vendor</Form.Label>\r\n                  <Form.Control\r\n                    onChange={e => this.handler(\"vendor_uid\", e.target.value)}\r\n                    as=\"select\"\r\n                  >\r\n                    {vendors}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formGridPassword\">\r\n                  <Form.Label>Max Number of Uses</Form.Label>\r\n                  <Form.Control\r\n                    onChange={e => this.handler(\"maxUses\", e.target.value)}\r\n                    type=\"number\"\r\n                    placeholder=\"Max Uses\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formGridPassword\">\r\n                  <Form.Label>Discount Percentage</Form.Label>\r\n                  <Form.Control\r\n                    onChange={e => this.handler(\"discount\", e.target.value)}\r\n                    type=\"number\"\r\n                    placeholder=\"Discount\"\r\n                    max=\"100\"\r\n                    maxLength=\"3\"\r\n                  />\r\n                </Form.Group>\r\n                <Button\r\n                  onClick={this.add}\r\n                  block\r\n                  variant=\"primary\"\r\n                  type=\"button\"\r\n                >\r\n                  Add New Voucher\r\n                </Button>\r\n              </Form>\r\n              <hr></hr>\r\n              <Table striped hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Code</th>\r\n                    <th>Times Used</th>\r\n                    <th>Max Uses</th>\r\n                    <th>Expiry Date</th>\r\n                    <th>Discount</th>\r\n                    <th>Status</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.props.vouchers.map(element => {\r\n                    const date = new Date();\r\n                    const splitExpDate = element.expDate.split(\"/\");\r\n                    const expDate = new Date(\r\n                      Number(splitExpDate[2]),\r\n                      Number(splitExpDate[1]) - 1,\r\n                      Number(splitExpDate[0])\r\n                    );\r\n                    const condition =\r\n                      element.isBlocked ||\r\n                      Number(element.maxUses) <= Number(element.numberOfUses) ||\r\n                      date > expDate;\r\n                    return (\r\n                      <tr>\r\n                        <td>{element.code}</td>\r\n                        <td>{element.numberOfUses}</td>\r\n\r\n                        <td>{element.maxUses}</td>\r\n                        <td>{element.expDate}</td>\r\n                        <td>{element.discount}</td>\r\n                        <td>\r\n                          <Badge variant={condition ? \"danger\" : \"success\"}>\r\n                            {condition ? \"Unavailable\" : \"Available\"}\r\n                          </Badge>\r\n                        </td>\r\n                        <td\r\n                          onClick={() => {\r\n                            this.block(element.uid, element.isBlocked);\r\n                          }}\r\n                        >\r\n                          <ion-icon\r\n                            class={\r\n                              condition\r\n                                ? \"blockButton text-success\"\r\n                                : \"blockButton text-danger\"\r\n                            }\r\n                            name={\r\n                              condition\r\n                                ? \"checkmark-circle-outline\"\r\n                                : \"close-circle-outline\"\r\n                            }\r\n                          ></ion-icon>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n              {/* <Pagination>\r\n                <Pagination.First />\r\n                <Pagination.Prev />\r\n                <Pagination.Item>{1}</Pagination.Item>\r\n                <Pagination.Item>{2}</Pagination.Item>\r\n                <Pagination.Item>{3}</Pagination.Item>\r\n                <Pagination.Item>{4}</Pagination.Item>\r\n                <Pagination.Item>{5}</Pagination.Item>\r\n                <Pagination.Next />\r\n                <Pagination.Last />\r\n              </Pagination> */}\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DiscountVouchers);\r\n","import React, { Component } from \"react\";\r\nimport AdminNavbar from \"../../../Components/AdminNavbar/AdminNavbar\";\r\nimport {\r\n  Pagination,\r\n  Container,\r\n  Card,\r\n  Table,\r\n  Badge,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Carousel\r\n} from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n} from \"../../../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\nimport Firebase from \"../../../Firebase/Firebase\";\r\n\r\nclass Slideshow extends Component {\r\n  state = {\r\n    file: null,\r\n    vendor_uid: \"\"\r\n  };\r\n  handler = (name, value) => {\r\n    console.log(value);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  add = async () => {\r\n    const fileNameSplit = this.state.file.name.split(\".\");\r\n    const extension = fileNameSplit[fileNameSplit.length - 1];\r\n    await Firebase.addSlideShow(\r\n      this.state.file,\r\n      extension,\r\n      this.state.vendor_uid\r\n    );\r\n    window.location.reload();\r\n  };\r\n  fileHandler = e => {\r\n    this.setState({\r\n      file: e.target.files[0]\r\n    });\r\n  };\r\n  delete = async uid => {\r\n    await Firebase.deleteSlideshow(uid);\r\n    window.location.reload();\r\n  };\r\n  render() {\r\n    const vendors = this.props.vendors.map(e => {\r\n      return <option value={e.uid}>{e.name}</option>;\r\n    });\r\n    const slideshows = this.props.slideshows.map(e => {\r\n      const vendor = this.props.vendors.find(v => v.uid === e.vendor_uid);\r\n      return (\r\n        <Carousel.Item>\r\n          <img\r\n            style={{\r\n              height: 500,\r\n              objectFit: \"cover\"\r\n            }}\r\n            className=\"d-block w-100\"\r\n            src={e.image_url}\r\n          />\r\n          <Carousel.Caption\r\n            style={{\r\n              background: \"rgba(0,0,0,0.5)\",\r\n              padding: 10,\r\n              borderRadius: 10\r\n            }}\r\n          >\r\n            <h3>{vendor.name}</h3>\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"button\"\r\n              style={{\r\n                margin: 15\r\n              }}\r\n              onClick={() => this.delete(e.uid)}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <AdminNavbar></AdminNavbar>\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col xs={12}>\r\n              <Card>\r\n                <Card.Header>\r\n                  <h1>Slideshow</h1>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Carousel>{slideshows}</Carousel>\r\n                  <hr></hr>\r\n                  <Form>\r\n                    <legend className=\"h4\">Add New Banner</legend>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                      <Form.Label>Vendor</Form.Label>\r\n                      <Form.Control\r\n                        onChange={e =>\r\n                          this.handler(\"vendor_uid\", e.target.value)\r\n                        }\r\n                        as=\"select\"\r\n                      >\r\n                        {vendors}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGridPassword\">\r\n                      <Form.Label>Image</Form.Label>\r\n                      <Form.Control\r\n                        onChange={this.fileHandler}\r\n                        type=\"file\"\r\n                        placeholder=\"Image\"\r\n                        accept=\"image/*\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Button\r\n                      onClick={this.add}\r\n                      block\r\n                      variant=\"primary\"\r\n                      type=\"button\"\r\n                    >\r\n                      Add Banner\r\n                    </Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(Slideshow));\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { BrowserRouter, Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport Home from \"../Pages/Home/Home\";\r\nimport TermsAndConditions from \"../Pages/TermsAndConditions/TermsAndConditions\";\r\nimport PrivacyPolicy from \"../Pages/PrivacyPolicy/PrivacyPolicy\";\r\nimport Contact from \"../Pages/Contact/Contact\";\r\nimport AdminLogin from \"../Pages/Admin/Login/Login\";\r\nimport Dashboard from \"../Pages/Admin/Dashboard/Dashboard\";\r\nimport Vendor from \"../Pages/Admin/Vendor/Vendor\";\r\nimport Complaints from \"../Pages/Admin/Complaints/Complaints\";\r\nimport Reservations from \"../Pages/Admin/Reservations/Reservations\";\r\nimport Customer from \"../Pages/Admin/Customer/Customer\";\r\nimport DiscountVouchers from \"../Pages/Admin/DiscountVouchers/DiscountVouchers\";\r\nimport Slideshow from \"../Pages/Admin/Slideshow/Slideshow\";\r\nimport { mapDispatchToProps, mapStateToProps } from \"../Config/AdminMapping\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAdmin } from \"../Config/localStorage\";\r\nimport Firebase from \"../Firebase/Firebase\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nclass Router extends Component {\r\n  state = {\r\n    loading: true\r\n  };\r\n  componentDidMount = async () => {\r\n    const admin = getAdmin();\r\n    if (admin) {\r\n      const vendors = await Firebase.getRestaurants();\r\n      this.props.updateVendors(vendors);\r\n      const reviews = await Firebase.getAllReviews();\r\n      this.props.updateReviews(reviews);\r\n      const complaints = await Firebase.getComplaints();\r\n      this.props.updateComplaints(complaints);\r\n      const customers = await Firebase.getCustomers();\r\n      this.props.updateCustomers(customers);\r\n      const vouchers = await Firebase.getDiscountVouchers();\r\n      this.props.updateDiscountVouchers(vouchers);\r\n      const notifications = await Firebase.getNotifications(admin.uid);\r\n      this.props.updateNotifications(notifications);\r\n      const reservations = await Firebase.getReservations();\r\n      this.props.updateReservations(reservations);\r\n      const slideshows = await Firebase.getSlideShows();\r\n      this.props.updateSlideshows(slideshows);\r\n      Firebase.listenToVendors(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newVendors = [...this.props.vendors];\r\n        const foundIndex = newVendors.findIndex(e => e.uid == updatedValue.uid);\r\n        if (foundIndex >= 0) {\r\n          newVendors[foundIndex] = updatedValue;\r\n        } else {\r\n          newVendors.push(updatedValue);\r\n        }\r\n        this.props.updateVendors(newVendors);\r\n      });\r\n      Firebase.listenToComplaints(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newComplaints = [...this.props.complaints];\r\n        const foundIndex = newComplaints.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newComplaints[foundIndex] = updatedValue;\r\n        } else {\r\n          newComplaints.push(updatedValue);\r\n        }\r\n        this.props.updateComplaints(newComplaints);\r\n      });\r\n      Firebase.listenToCustomers(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newCustomers = [...this.props.customers];\r\n        const foundIndex = newCustomers.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newCustomers[foundIndex] = updatedValue;\r\n        } else {\r\n          newCustomers.push(updatedValue);\r\n        }\r\n        this.props.updateCustomers(newCustomers);\r\n      });\r\n      Firebase.listenToDiscountVouchers(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newVouchers = [...this.props.vouchers];\r\n        const foundIndex = newVouchers.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newVouchers[foundIndex] = updatedValue;\r\n        } else {\r\n          newVouchers.push(updatedValue);\r\n        }\r\n        this.props.updateDiscountVouchers(newVouchers);\r\n      });\r\n      Firebase.listenToNotifications(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newNotifications = [...this.props.notifications];\r\n        const foundIndex = newNotifications.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newNotifications[foundIndex] = updatedValue;\r\n        } else {\r\n          newNotifications.push(updatedValue);\r\n        }\r\n        this.props.updateNotifications(newNotifications);\r\n      });\r\n      Firebase.listenToReservations(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newReservations = [...this.props.reservations];\r\n        const foundIndex = newReservations.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newReservations[foundIndex] = updatedValue;\r\n        } else {\r\n          newReservations.push(updatedValue);\r\n        }\r\n        this.props.updateReservations(newReservations);\r\n      });\r\n      Firebase.listenToReviews(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newReviews = [...this.props.reviews];\r\n        const foundIndex = newReviews.findIndex(e => e.uid == updatedValue.uid);\r\n        if (foundIndex >= 0) {\r\n          newReviews[foundIndex] = updatedValue;\r\n        } else {\r\n          newReviews.push(updatedValue);\r\n        }\r\n        this.props.updateReviews(newReviews);\r\n      });\r\n\r\n      Firebase.listenToSlideShows(snapshot => {\r\n        const updatedValue = snapshot.val();\r\n        let newSlideshows = [...this.props.slideshows];\r\n        const foundIndex = newSlideshows.findIndex(\r\n          e => e.uid == updatedValue.uid\r\n        );\r\n        if (foundIndex >= 0) {\r\n          newSlideshows[foundIndex] = updatedValue;\r\n        } else {\r\n          newSlideshows.push(updatedValue);\r\n        }\r\n        this.props.updateSlideshows(newSlideshows);\r\n      });\r\n      this.props.updateLogin(admin);\r\n    }\r\n    this.setState({ loading: false });\r\n  };\r\n  render() {\r\n    return this.state.loading ? (\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        <Spinner\r\n          style={{ width: 65, height: 65 }}\r\n          animation=\"border\"\r\n          variant=\"primary\"\r\n        />\r\n      </div>\r\n    ) : (\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home></Home>\r\n          </Route>\r\n          <Route exact path=\"/contact\">\r\n            <Contact></Contact>\r\n          </Route>\r\n          <Route exact path=\"/terms\">\r\n            <TermsAndConditions></TermsAndConditions>\r\n          </Route>\r\n          <Route exact path=\"/privacy\">\r\n            <PrivacyPolicy></PrivacyPolicy>\r\n          </Route>\r\n          {this.props.loggedInAdmin !== null ? (\r\n            <>\r\n              <Route exact path=\"/admin/\">\r\n                <Dashboard></Dashboard>\r\n              </Route>\r\n              <Route exact path=\"/admin/vendor/:uid\">\r\n                <Vendor></Vendor>\r\n              </Route>\r\n              <Route exact path=\"/admin/complaints\">\r\n                <Complaints></Complaints>\r\n              </Route>\r\n              <Route exact path=\"/admin/customer/:uid\">\r\n                <Customer></Customer>\r\n              </Route>\r\n              <Route exact path=\"/admin/discount\">\r\n                <DiscountVouchers></DiscountVouchers>\r\n              </Route>\r\n              <Route exact path=\"/admin/reservations\">\r\n                <Reservations></Reservations>\r\n              </Route>\r\n              <Route exact path=\"/admin/slideshow\">\r\n                <Slideshow></Slideshow>\r\n              </Route>\r\n            </>\r\n          ) : (\r\n            <Route exact path=\"/admin/\">\r\n              <AdminLogin></AdminLogin>\r\n            </Route>\r\n          )}\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Router);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./Store/Store\";\nimport Router from \"./Navigation/Router\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={Store}>\n        <Router></Router>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.4361f2b5.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.2d5cad77.mp4\";"],"sourceRoot":""}